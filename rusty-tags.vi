!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
A	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^impl<A, B> IsEqualPrivate<B, Equal> for A {$/;"	c
A	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^impl<A, B> IsEqualPrivate<B, Greater> for A {$/;"	c
A	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^impl<A, B> IsEqualPrivate<B, Less> for A {$/;"	c
A	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^impl<A, B> IsGreaterOrEqualPrivate<B, Equal> for A {$/;"	c
A	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^impl<A, B> IsGreaterOrEqualPrivate<B, Greater> for A {$/;"	c
A	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^impl<A, B> IsGreaterOrEqualPrivate<B, Less> for A {$/;"	c
A	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^impl<A, B> IsGreaterPrivate<B, Equal> for A {$/;"	c
A	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^impl<A, B> IsGreaterPrivate<B, Greater> for A {$/;"	c
A	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^impl<A, B> IsGreaterPrivate<B, Less> for A {$/;"	c
A	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^impl<A, B> IsLessOrEqualPrivate<B, Equal> for A {$/;"	c
A	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^impl<A, B> IsLessOrEqualPrivate<B, Greater> for A {$/;"	c
A	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^impl<A, B> IsLessOrEqualPrivate<B, Less> for A {$/;"	c
A	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^impl<A, B> IsLessPrivate<B, Equal> for A {$/;"	c
A	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^impl<A, B> IsLessPrivate<B, Greater> for A {$/;"	c
A	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^impl<A, B> IsLessPrivate<B, Less> for A {$/;"	c
A	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^impl<A, B> IsNotEqualPrivate<B, Equal> for A {$/;"	c
A	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^impl<A, B> IsNotEqualPrivate<B, Greater> for A {$/;"	c
A	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^impl<A, B> IsNotEqualPrivate<B, Less> for A {$/;"	c
A	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^impl<A, B> IsEqual<B> for A$/;"	c
A	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^impl<A, B> IsGreater<B> for A$/;"	c
A	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^impl<A, B> IsGreaterOrEqual<B> for A$/;"	c
A	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^impl<A, B> IsLess<B> for A$/;"	c
A	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^impl<A, B> IsLessOrEqual<B> for A$/;"	c
A	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^impl<A, B> IsNotEqual<B> for A$/;"	c
AC	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    AC { ac: AhoCorasick<u32>, lits: Vec<Literal> },$/;"	e	enum:Matcher
AC	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    AC(&'a [Literal]),$/;"	e	enum:LiteralIter
ATerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^impl Add<ATerm> for ATerm {$/;"	c
ATerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^impl Len for ATerm {$/;"	c
ATerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^impl Neg for ATerm {$/;"	c
ATerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^impl Sub<ATerm> for ATerm {$/;"	c
ATerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^impl TypeArray for ATerm {}$/;"	c
ATerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^impl<Rhs> Div<Rhs> for ATerm {$/;"	c
ATerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^impl<Rhs> Mul<Rhs> for ATerm {$/;"	c
ATerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^impl<Rhs> PartialDiv<Rhs> for ATerm {$/;"	c
ATerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^impl<Rhs> Rem<Rhs> for ATerm {$/;"	c
ATerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^pub struct ATerm;$/;"	s
Abs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^pub trait Abs {$/;"	i
AbsVal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/operator_aliases.rs	/^pub type AbsVal<A> = <A as Abs>::Output;$/;"	t
AbstractField	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/two_operators.rs	/^pub trait AbstractField<A: Operator = Additive, M: Operator = Multiplicative>:$/;"	i
AbstractGroup	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/one_operator.rs	/^pub trait AbstractGroup<O: Operator>: AbstractLoop<O> + AbstractMonoid<O> {}$/;"	i
AbstractGroupAbelian	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/one_operator.rs	/^pub trait AbstractGroupAbelian<O: Operator>: AbstractGroup<O> {$/;"	i
AbstractLoop	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/one_operator.rs	/^pub trait AbstractLoop<O: Operator>: AbstractQuasigroup<O> + Identity<O> {}$/;"	i
AbstractMagma	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/one_operator.rs	/^pub trait AbstractMagma<O: Operator>: Sized + Clone {$/;"	i
AbstractModule	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/module.rs	/^pub trait AbstractModule<$/;"	i
AbstractMonoid	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/one_operator.rs	/^pub trait AbstractMonoid<O: Operator>: AbstractSemigroup<O> + Identity<O> {$/;"	i
AbstractOperator	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/operator.rs	/^impl Operator for AbstractOperator {$/;"	c
AbstractOperator	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/operator.rs	/^pub struct AbstractOperator;$/;"	s
AbstractQuasigroup	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/one_operator.rs	/^pub trait AbstractQuasigroup<O: Operator>:$/;"	i
AbstractRing	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/module.rs	/^    type AbstractRing = N;$/;"	t	implementation:Complex
AbstractRing	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/module.rs	/^    type AbstractRing: AbstractRingCommutative<OpAdd, OpMul>;$/;"	t	interface:AbstractModule
AbstractRing	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/two_operators.rs	/^pub trait AbstractRing<A: Operator = Additive, M: Operator = Multiplicative>:$/;"	i
AbstractRing	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^    type AbstractRing = N;$/;"	t
AbstractRing	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    type AbstractRing = N;$/;"	t	implementation:Quaternion
AbstractRingCommutative	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/two_operators.rs	/^pub trait AbstractRingCommutative<A: Operator = Additive, M: Operator = Multiplicative>:$/;"	i
AbstractRotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs	/^pub trait AbstractRotation<N: Scalar, D: DimName>: PartialEq + ClosedMul + Clone {$/;"	i
AbstractSemigroup	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/one_operator.rs	/^pub trait AbstractSemigroup<O: Operator>: PartialEq + AbstractMagma<O> {$/;"	i
Add1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/operator_aliases.rs	/^pub type Add1<A> = <A as Add<::bit::B1>>::Output;$/;"	t
AddLength	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/arr.rs	/^pub trait AddLength<T, N: ArrayLength<T>>: ArrayLength<T> {$/;"	i
Additive	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/operator.rs	/^impl Operator for Additive {$/;"	c
Additive	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/operator.rs	/^pub struct Additive;$/;"	s
Affine2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_alias.rs	/^pub type Affine2<N> = Transform<N, U2, TAffine>;$/;"	t
Affine3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_alias.rs	/^pub type Affine3<N> = Transform<N, U3, TAffine>;$/;"	t
AffineSpace	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/vector.rs	/^pub trait AffineSpace:$/;"	i
AffineTransformation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^pub trait AffineTransformation<E: EuclideanSpace>: ProjectiveTransformation<E> {$/;"	i
AhoCorasick	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    AhoCorasick,$/;"	e	enum:MatchLiteralType
Aliases	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^        impl Aliases {$/;"	c	method:WeightedIndex::new
Aliases	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^        struct Aliases {$/;"	s	method:WeightedIndex::new
AllWeightsZero	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/mod.rs	/^    AllWeightsZero,$/;"	e	enum:WeightedError
Allocator	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs	/^pub trait Allocator<N: Scalar, R: Dim, C: Dim = U1>: Any + Sized {$/;"	i
Alphanumeric	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/other.rs	/^impl Distribution<char> for Alphanumeric {$/;"	c
Alphanumeric	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/other.rs	/^pub struct Alphanumeric;$/;"	s
Always	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^    Always,$/;"	e	enum:WriteStyle
Ambiguous	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    Ambiguous { timestamp: V, min: D, max: D },$/;"	e	enum:SerdeError
Ambiguous	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^    Ambiguous(T \/*min*\/, T \/*max*\/),$/;"	e	enum:LocalResult
AnchoredEnd	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    AnchoredEnd,$/;"	e	enum:MatchLiteralType
AnchoredStart	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    AnchoredStart,$/;"	e	enum:MatchLiteralType
And	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/operator_aliases.rs	/^pub type And<A, B> = <A as BitAnd<B>>::Output;$/;"	t
Ansi256	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    Ansi256(u8),$/;"	e	enum:Color
AreMultipliable	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs	/^pub trait AreMultipliable<R1: Dim, C1: Dim, R2: Dim, C2: Dim>: DimEq<C1, R2> {}$/;"	i
Arguments	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^impl<'v> ToValue for fmt::Arguments<'v> {$/;"	c
ArrayBuilder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^impl<T, N: ArrayLength<T>> ArrayBuilder<T, N> {$/;"	c
ArrayBuilder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^impl<T, N: ArrayLength<T>> Drop for ArrayBuilder<T, N> {$/;"	c
ArrayBuilder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^pub struct ArrayBuilder<T, N: ArrayLength<T>> {$/;"	s
ArrayConsumer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^impl<T, N: ArrayLength<T>> ArrayConsumer<T, N> {$/;"	c
ArrayConsumer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^impl<T, N: ArrayLength<T>> Drop for ArrayConsumer<T, N> {$/;"	c
ArrayConsumer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^pub struct ArrayConsumer<T, N: ArrayLength<T>> {$/;"	s
ArrayLength	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^pub unsafe trait ArrayLength<T>: Unsigned {$/;"	i
ArrayStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^impl<'a, N, R, C> Deserialize<'a> for ArrayStorage<N, R, C>$/;"	c
ArrayStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^impl<N, R, C> Abomonation for ArrayStorage<N, R, C>$/;"	c
ArrayStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^impl<N, R, C> Clone for ArrayStorage<N, R, C>$/;"	c
ArrayStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^impl<N, R, C> Copy for ArrayStorage<N, R, C>$/;"	c
ArrayStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^impl<N, R, C> Debug for ArrayStorage<N, R, C>$/;"	c
ArrayStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^impl<N, R, C> Deref for ArrayStorage<N, R, C>$/;"	c
ArrayStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^impl<N, R, C> DerefMut for ArrayStorage<N, R, C>$/;"	c
ArrayStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^impl<N, R, C> Eq for ArrayStorage<N, R, C>$/;"	c
ArrayStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^impl<N, R, C> Hash for ArrayStorage<N, R, C>$/;"	c
ArrayStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^impl<N, R, C> PartialEq for ArrayStorage<N, R, C>$/;"	c
ArrayStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^impl<N, R, C> Serialize for ArrayStorage<N, R, C>$/;"	c
ArrayStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^pub struct ArrayStorage<N, R, C>$/;"	s
ArrayStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^unsafe impl<N, R, C> ContiguousStorage<N, R, C> for ArrayStorage<N, R, C>$/;"	c
ArrayStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^unsafe impl<N, R, C> ContiguousStorageMut<N, R, C> for ArrayStorage<N, R, C>$/;"	c
ArrayStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^unsafe impl<N, R, C> Storage<N, R, C> for ArrayStorage<N, R, C>$/;"	c
ArrayStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^unsafe impl<N, R, C> StorageMut<N, R, C> for ArrayStorage<N, R, C>$/;"	c
ArrayStorageVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^impl<'a, N, R, C> Visitor<'a> for ArrayStorageVisitor<N, R, C>$/;"	c
ArrayStorageVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^impl<N, R, C> ArrayStorageVisitor<N, R, C>$/;"	c
ArrayStorageVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^struct ArrayStorageVisitor<N, R, C> {$/;"	s
ArrayType	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    type ArrayType = ();$/;"	t	implementation:UTerm
ArrayType	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    type ArrayType = GenericArrayImplEven<T, N::ArrayType>;$/;"	t	implementation:UInt
ArrayType	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    type ArrayType = GenericArrayImplOdd<T, N::ArrayType>;$/;"	t	implementation:UInt
ArrayType	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    type ArrayType;$/;"	t	interface:ArrayLength
AsByteSliceMut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^pub trait AsByteSliceMut {$/;"	i
AsPrimitive	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^pub trait AsPrimitive<T>: 'static + Copy$/;"	i
Auto	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^    Auto,$/;"	e	enum:WriteStyle
Auto	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    Auto,$/;"	e	enum:MatchNfaType
AutoSi	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    AutoSi,$/;"	e	enum:SecondsFormat
B0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^impl B0 {$/;"	c
B0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^impl Bit for B0 {$/;"	c
B0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^impl BitOr<B0> for B0 {$/;"	c
B0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^impl BitOr<B1> for B0 {$/;"	c
B0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^impl BitXor<B0> for B0 {$/;"	c
B0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^impl BitXor<B1> for B0 {$/;"	c
B0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^impl Cmp<B0> for B0 {$/;"	c
B0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^impl Cmp<B1> for B0 {$/;"	c
B0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^impl Max<B0> for B0 {$/;"	c
B0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^impl Max<B1> for B0 {$/;"	c
B0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^impl Min<B0> for B0 {$/;"	c
B0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^impl Min<B1> for B0 {$/;"	c
B0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^impl Not for B0 {$/;"	c
B0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^impl<Rhs: Bit> BitAnd<Rhs> for B0 {$/;"	c
B0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^pub struct B0;$/;"	s
B1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^impl B1 {$/;"	c
B1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^impl Bit for B1 {$/;"	c
B1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^impl BitAnd<B0> for B1 {$/;"	c
B1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^impl BitAnd<B1> for B1 {$/;"	c
B1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^impl BitXor<B0> for B1 {$/;"	c
B1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^impl BitXor<B1> for B1 {$/;"	c
B1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^impl Cmp<B0> for B1 {$/;"	c
B1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^impl Cmp<B1> for B1 {$/;"	c
B1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^impl Max<B0> for B1 {$/;"	c
B1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^impl Max<B1> for B1 {$/;"	c
B1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^impl Min<B0> for B1 {$/;"	c
B1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^impl Min<B1> for B1 {$/;"	c
B1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^impl NonZero for B1 {}$/;"	c
B1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^impl Not for B1 {$/;"	c
B1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^impl PowerOfTwo for B1 {}$/;"	c
B1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^impl<Rhs: Bit> BitOr<Rhs> for B1 {$/;"	c
B1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^pub struct B1;$/;"	s
BTreeMap	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^    impl<K, V> Source for BTreeMap<K, V>$/;"	c	module:std_support
Backtrack	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    Backtrack,$/;"	e	enum:MatchNfaType
BadFill	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^        impl Fill for BadFill {$/;"	c	function:tests::fill_multiple_times_panics
BadFill	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^        struct BadFill;$/;"	s	function:tests::fill_multiple_times_panics
BadFormat	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    BadFormat,$/;"	e	enum:ParseErrorKind
Batching	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^impl<B, F, I> Iterator for Batching<I, F>$/;"	c
Batching	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^impl<I, F> fmt::Debug for Batching<I, F> where I: fmt::Debug {$/;"	c
Batching	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub struct Batching<I, F> {$/;"	s
Bernoulli	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/bernoulli.rs	/^impl Bernoulli {$/;"	c
Bernoulli	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/bernoulli.rs	/^impl Distribution<bool> for Bernoulli {$/;"	c
Bernoulli	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/bernoulli.rs	/^pub struct Bernoulli {$/;"	s
BernoulliError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/bernoulli.rs	/^impl ::std::error::Error for BernoulliError {}$/;"	c
BernoulliError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/bernoulli.rs	/^impl fmt::Display for BernoulliError {$/;"	c
BernoulliError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/bernoulli.rs	/^pub enum BernoulliError {$/;"	g
Beta	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^impl Beta {$/;"	c
Beta	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^impl Distribution<f64> for Beta {$/;"	c
Beta	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^pub struct Beta {$/;"	s
Bidiagonal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs	/^impl<N: ComplexField, R: DimMin<C>, C: Dim> Bidiagonal<N, R, C>$/;"	c
Bidiagonal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs	/^impl<N: ComplexField, R: DimMin<C>, C: Dim> Copy for Bidiagonal<N, R, C>$/;"	c
Bidiagonal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs	/^pub struct Bidiagonal<N: ComplexField, R: DimMin<C>, C: Dim>$/;"	s
Binomial	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/binomial.rs	/^impl Binomial {$/;"	c
Binomial	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/binomial.rs	/^impl Distribution<u64> for Binomial {$/;"	c
Binomial	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/binomial.rs	/^pub struct Binomial {$/;"	s
Bit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/marker_traits.rs	/^pub trait Bit: Copy + Default {$/;"	i
BitDiff	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub trait BitDiff<Rhs> {$/;"	i
BitDiffOut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub type BitDiffOut<A, Rhs> = <A as BitDiff<Rhs>>::Output;$/;"	t
Bits	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/backtrack.rs	/^type Bits = u32;$/;"	t
Black	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    Black,$/;"	e	enum:Color
Blue	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    Blue,$/;"	e	enum:Color
Bool	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    Bool(bool),$/;"	e	enum:Primitive
Bool	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/test.rs	/^    Bool(bool),$/;"	e	enum:Token
BoolAsSIMD	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/utils.rs	/^pub(crate) trait BoolAsSIMD: Sized {$/;"	i
Borrowed	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    Borrowed(&'a str),$/;"	e	enum:MaybeStaticStr
Borrowed	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^impl<'a, Borrowed> SampleBorrow<Borrowed> for &'a Borrowed$/;"	c
Borrowed	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^impl<Borrowed> SampleBorrow<Borrowed> for Borrowed$/;"	c
Both	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs	/^    Both(A, B),$/;"	e	enum:EitherOrBoth
Bounded	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/bounds.rs	/^pub trait Bounded {$/;"	i
Bounded	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/backtrack.rs	/^impl<'a, 'm, 'r, 's, I: Input> Bounded<'a, 'm, 'r, 's, I> {$/;"	c
Bounded	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/backtrack.rs	/^pub struct Bounded<'a, 'm, 'r, 's, I> {$/;"	s
Box	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^    impl<'kvs, V> Visitor<'kvs> for Box<V>$/;"	c	module:std_support
Box	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^    impl<S> Source for Box<S>$/;"	c	module:std_support
Box	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    impl<T> ToValue for Box<T>$/;"	c	module:std_support
Boxed	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/error.rs	/^    Boxed(std_support::BoxedError),$/;"	e	enum:Inner
BoxedError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/error.rs	/^    pub(super) type BoxedError = Box<error::Error + Send + Sync>;$/;"	t	module:std_support
BoyerMoore	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    BoyerMoore(BoyerMooreSearch),$/;"	e	enum:Matcher
BoyerMooreSearch	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^impl BoyerMooreSearch {$/;"	c
BoyerMooreSearch	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^pub struct BoyerMooreSearch {$/;"	s
Buffer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^impl Buffer {$/;"	c
Buffer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^pub(in crate::fmt) struct Buffer {$/;"	s
Buffer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/shim_impl.rs	/^impl Buffer {$/;"	c
Buffer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/shim_impl.rs	/^pub(in crate::fmt) struct Buffer(Vec<u8>);$/;"	s
Buffer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs	/^    type Buffer: Default + AsRef<[Option<Self::Item>]> + AsMut<[Option<Self::Item>]>;$/;"	t	interface:TupleCollect
Buffer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs	/^    type Buffer: ContiguousStorageMut<N, R, C> + Clone;$/;"	t	interface:Allocator
Buffer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs	/^    type Buffer = ArrayStorage<N, R, C>;$/;"	t
Buffer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs	/^    type Buffer = VecStorage<N, Dynamic, C>;$/;"	t	implementation:DefaultAllocator
Buffer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs	/^    type Buffer = VecStorage<N, R, Dynamic>;$/;"	t	implementation:DefaultAllocator
BufferWriter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^impl BufferWriter {$/;"	c
BufferWriter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^pub(in crate::fmt::writer) struct BufferWriter {$/;"	s
BufferWriter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/shim_impl.rs	/^impl BufferWriter {$/;"	c
BufferWriter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/shim_impl.rs	/^pub(in crate::fmt::writer) struct BufferWriter {$/;"	s
Builder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^impl Builder {$/;"	c
Builder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^impl Default for Builder {$/;"	c
Builder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^impl fmt::Debug for Builder {$/;"	c
Builder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^pub struct Builder {$/;"	s
Builder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^impl Builder {$/;"	c
Builder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^impl Default for Builder {$/;"	c
Builder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^pub(crate) struct Builder {$/;"	s
Builder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^impl Builder {$/;"	c
Builder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^impl Default for Builder {$/;"	c
Builder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^impl fmt::Debug for Builder {$/;"	c
Builder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^pub(crate) struct Builder {$/;"	s
Builder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    impl fmt::Debug for Builder {$/;"	c	module:std_fmt_impls
Builder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^impl Builder {$/;"	c
Builder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^pub struct Builder {$/;"	s
Byte	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^impl Byte {$/;"	c
Byte	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^struct Byte(u16);$/;"	s
ByteClassSet	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^impl ByteClassSet {$/;"	c
ByteClassSet	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^struct ByteClassSet([bool; 256]);$/;"	s
ByteInput	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^impl<'t> ByteInput<'t> {$/;"	c
ByteInput	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^impl<'t> Input for ByteInput<'t> {$/;"	c
ByteInput	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^impl<'t> ops::Deref for ByteInput<'t> {$/;"	c
ByteInput	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^pub struct ByteInput<'t> {$/;"	s
Bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    Bytes { start: u8, end: u8 },$/;"	e	enum:InstHole
Bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    Bytes(&'a [u8]),$/;"	e	enum:LiteralIter
Bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    Bytes(SingleByteSet),$/;"	e	enum:Matcher
Bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    Bytes(InstBytes),$/;"	e	enum:Inst
CC	/Users/williamcashman/Honours/Program/n_poly/src/algebras/complex.rs	/^impl CC {$/;"	c
CC	/Users/williamcashman/Honours/Program/n_poly/src/algebras/complex.rs	/^impl Field for CC {$/;"	c
CC	/Users/williamcashman/Honours/Program/n_poly/src/algebras/complex.rs	/^impl Group for CC {$/;"	c
CC	/Users/williamcashman/Honours/Program/n_poly/src/algebras/complex.rs	/^impl One for CC {$/;"	c
CC	/Users/williamcashman/Honours/Program/n_poly/src/algebras/complex.rs	/^impl PartialEq for CC {$/;"	c
CC	/Users/williamcashman/Honours/Program/n_poly/src/algebras/complex.rs	/^impl Ring for CC{$/;"	c
CC	/Users/williamcashman/Honours/Program/n_poly/src/algebras/complex.rs	/^impl ScalarRing for CC {$/;"	c
CC	/Users/williamcashman/Honours/Program/n_poly/src/algebras/complex.rs	/^impl SupportsFFT for CC {$/;"	c
CC	/Users/williamcashman/Honours/Program/n_poly/src/algebras/complex.rs	/^impl Zero for CC {$/;"	c
CC	/Users/williamcashman/Honours/Program/n_poly/src/algebras/complex.rs	/^impl fmt::Display for CC {$/;"	c
CC	/Users/williamcashman/Honours/Program/n_poly/src/algebras/complex.rs	/^impl std::cmp::Eq for CC {}$/;"	c
CC	/Users/williamcashman/Honours/Program/n_poly/src/algebras/complex.rs	/^impl std::str::FromStr for CC {$/;"	c
CC	/Users/williamcashman/Honours/Program/n_poly/src/algebras/complex.rs	/^pub struct CC(pub Complex64);$/;"	s
CStride	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^    type CStride = R;$/;"	t
CStride	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs	/^    type CStride: Dim;$/;"	t	interface:Storage
CStride	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs	/^pub type CStride<N, R, C = U1> =$/;"	t
CStride	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^    type CStride = Dynamic;$/;"	t
CStride	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^    type CStride = R;$/;"	t
Cache	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/backtrack.rs	/^impl Cache {$/;"	c
Cache	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/backtrack.rs	/^pub struct Cache {$/;"	s
Cache	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^impl Cache {$/;"	c
Cache	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^pub struct Cache {$/;"	s
Cache	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/pikevm.rs	/^impl Cache {$/;"	c
Cache	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/pikevm.rs	/^pub struct Cache {$/;"	s
CacheInner	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^impl CacheInner {$/;"	c
CacheInner	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^struct CacheInner {$/;"	s
Cached	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/lib.rs	/^pub trait Cached<K, V> {$/;"	i
Cached	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/cache.rs	/^    impl<T: Send> Cached<T> {$/;"	c	module:imp
Cached	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/cache.rs	/^    pub struct Cached<T: Send> {$/;"	s	module:imp
Cached	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/cache.rs	/^    pub struct Cached<T: Send>(CachedThreadLocal<T>);$/;"	s	module:imp
CachedGuard	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/cache.rs	/^    impl<'a, T: Send> CachedGuard<'a, T> {$/;"	c	module:imp
CachedGuard	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/cache.rs	/^    impl<'a, T: Send> Drop for CachedGuard<'a, T> {$/;"	c	module:imp
CachedGuard	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/cache.rs	/^    pub struct CachedGuard<'a, T: 'a + Send> {$/;"	s	module:imp
CachedGuard	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/cache.rs	/^    pub struct CachedGuard<'a, T: 'a>(&'a T);$/;"	s	module:imp
Capture	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/pikevm.rs	/^    Capture { slot: usize, pos: Slot },$/;"	e	enum:FollowEpsilon
CaptureLocations	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^impl CaptureLocations {$/;"	c
CaptureLocations	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^pub struct CaptureLocations(re_trait::Locations);$/;"	s
CaptureLocations	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^impl CaptureLocations {$/;"	c
CaptureLocations	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^pub struct CaptureLocations(re_trait::Locations);$/;"	s
CaptureMatches	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^impl<'r, 't> Iterator for CaptureMatches<'r, 't> {$/;"	c
CaptureMatches	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^pub struct CaptureMatches<'r, 't>($/;"	s
CaptureMatches	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_trait.rs	/^impl<'t, R> CaptureMatches<'t, R>$/;"	c
CaptureMatches	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_trait.rs	/^impl<'t, R> Iterator for CaptureMatches<'t, R>$/;"	c
CaptureMatches	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_trait.rs	/^pub struct CaptureMatches<'t, R>(Matches<'t, R>)$/;"	s
CaptureMatches	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^impl<'r, 't> Iterator for CaptureMatches<'r, 't> {$/;"	c
CaptureMatches	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^pub struct CaptureMatches<'r, 't>($/;"	s
CaptureNames	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^impl<'r> Iterator for CaptureNames<'r> {$/;"	c
CaptureNames	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^pub struct CaptureNames<'r>(::std::slice::Iter<'r, Option<String>>);$/;"	s
CaptureNames	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^impl<'r> Iterator for CaptureNames<'r> {$/;"	c
CaptureNames	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^pub struct CaptureNames<'r>(::std::slice::Iter<'r, Option<String>>);$/;"	s
CaptureRef	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/expand.rs	/^struct CaptureRef<'a> {$/;"	s
Captures	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^impl<'t, 'i> Index<&'i str> for Captures<'t> {$/;"	c
Captures	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^impl<'t> Captures<'t> {$/;"	c
Captures	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^impl<'t> Index<usize> for Captures<'t> {$/;"	c
Captures	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^impl<'t> fmt::Debug for Captures<'t> {$/;"	c
Captures	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^pub struct Captures<'t> {$/;"	s
Captures	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^impl<'t, 'i> Index<&'i str> for Captures<'t> {$/;"	c
Captures	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^impl<'t> Captures<'t> {$/;"	c
Captures	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^impl<'t> Index<usize> for Captures<'t> {$/;"	c
Captures	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^impl<'t> fmt::Debug for Captures<'t> {$/;"	c
Captures	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^pub struct Captures<'t> {$/;"	s
CapturesDebug	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^impl<'c, 't> fmt::Debug for CapturesDebug<'c, 't> {$/;"	c
CapturesDebug	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^struct CapturesDebug<'c, 't: 'c>(&'c Captures<'t>);$/;"	s
CapturesDebug	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^impl<'c, 't> fmt::Debug for CapturesDebug<'c, 't> {$/;"	c
CapturesDebug	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^struct CapturesDebug<'c, 't: 'c>(&'c Captures<'t>);$/;"	s
Cauchy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/cauchy.rs	/^impl Cauchy {$/;"	c
Cauchy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/cauchy.rs	/^impl Distribution<f64> for Cauchy {$/;"	c
Cauchy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/cauchy.rs	/^pub struct Cauchy {$/;"	s
Char	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    Char(char),$/;"	e	enum:Primitive
Char	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/test.rs	/^    Char(char),$/;"	e	enum:Token
Char	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    Char { c: char },$/;"	e	enum:InstHole
Char	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^impl Char {$/;"	c
Char	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^impl From<Option<char>> for Char {$/;"	c
Char	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^impl From<char> for Char {$/;"	c
Char	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^impl PartialEq<char> for Char {$/;"	c
Char	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^impl PartialOrd<char> for Char {$/;"	c
Char	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^impl fmt::Debug for Char {$/;"	c
Char	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^pub struct Char(u32);$/;"	s
Char	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    Char(InstChar),$/;"	e	enum:Inst
CharInput	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^impl<'t> CharInput<'t> {$/;"	c
CharInput	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^impl<'t> Input for CharInput<'t> {$/;"	c
CharInput	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^impl<'t> ops::Deref for CharInput<'t> {$/;"	c
CharInput	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^pub struct CharInput<'t>(&'t [u8]);$/;"	s
CheckedAdd	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/checked.rs	/^pub trait CheckedAdd: Sized + Add<Self, Output = Self> {$/;"	i
CheckedDiv	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/checked.rs	/^pub trait CheckedDiv: Sized + Div<Self, Output = Self> {$/;"	i
CheckedMul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/checked.rs	/^pub trait CheckedMul: Sized + Mul<Self, Output = Self> {$/;"	i
CheckedNeg	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/checked.rs	/^pub trait CheckedNeg: Sized {$/;"	i
CheckedRem	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/checked.rs	/^pub trait CheckedRem: Sized + Rem<Self, Output = Self> {$/;"	i
CheckedShl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/checked.rs	/^pub trait CheckedShl: Sized + Shl<u32, Output = Self> {$/;"	i
CheckedShr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/checked.rs	/^pub trait CheckedShr: Sized + Shr<u32, Output = Self> {$/;"	i
CheckedSub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/checked.rs	/^pub trait CheckedSub: Sized + Sub<Self, Output = Self> {$/;"	i
ChiSquared	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^impl ChiSquared {$/;"	c
ChiSquared	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^impl Distribution<f64> for ChiSquared {$/;"	c
ChiSquared	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^pub struct ChiSquared {$/;"	s
ChiSquaredRepr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^enum ChiSquaredRepr {$/;"	g
Cholesky	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs	/^impl<N: ComplexField, D: Dim> Copy for Cholesky<N, D>$/;"	c
Cholesky	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs	/^impl<N: ComplexField, D: DimSub<Dynamic>> Cholesky<N, D>$/;"	c
Cholesky	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs	/^pub struct Cholesky<N: ComplexField, D: Dim>$/;"	s
Chunk	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^impl<'a, I> Drop for Chunk<'a, I>$/;"	c
Chunk	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^impl<'a, I> Iterator for Chunk<'a, I>$/;"	c
Chunk	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^pub struct Chunk<'a, I: 'a>$/;"	s
ChunkHintedIterator	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^    impl<I: ExactSizeIterator + Iterator + Clone> Iterator for ChunkHintedIterator<I> {$/;"	c	module:test
ChunkHintedIterator	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^    struct ChunkHintedIterator<I: ExactSizeIterator + Iterator + Clone> {$/;"	s	module:test
ChunkIndex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^impl ChunkIndex {$/;"	c
ChunkIndex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^impl<'a, A> KeyFunction<A> for ChunkIndex {$/;"	c
ChunkIndex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^struct ChunkIndex {$/;"	s
Chunks	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^impl<'a, I> Iterator for Chunks<'a, I>$/;"	c
Chunks	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^pub struct Chunks<'a, I: 'a>$/;"	s
ClosedAdd	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/operator.rs	/^pub trait ClosedAdd<Right = Self>: Sized + Add<Right, Output = Self> + AddAssign<Right> {}$/;"	i
ClosedDiv	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/operator.rs	/^pub trait ClosedDiv<Right = Self>: Sized + Div<Right, Output = Self> + DivAssign<Right> {}$/;"	i
ClosedMul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/operator.rs	/^pub trait ClosedMul<Right = Self>: Sized + Mul<Right, Output = Self> + MulAssign<Right> {}$/;"	i
ClosedNeg	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/operator.rs	/^pub trait ClosedNeg: Sized + Neg<Output = Self> {}$/;"	i
ClosedSub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/operator.rs	/^pub trait ClosedSub<Right = Self>: Sized + Sub<Right, Output = Self> + SubAssign<Right> {}$/;"	i
Cmp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^pub trait Cmp<Rhs = Self> {$/;"	i
Coalesce	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^impl<I, F> Iterator for Coalesce<I, F>$/;"	c
Coalesce	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^impl<I, F> fmt::Debug for Coalesce<I, F>$/;"	c
Coalesce	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^impl<I: Clone, F: Clone> Clone for Coalesce<I, F>$/;"	c
Coalesce	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub struct Coalesce<I, F>$/;"	s
CoalesceCore	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^impl<I> CoalesceCore<I>$/;"	c
CoalesceCore	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub struct CoalesceCore<I>$/;"	s
Coeff	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    type Coeff = R;$/;"	t
Coeff	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    type Coeff: ScalarRing;$/;"	t	interface:PolyRing
Color	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^impl Color {$/;"	c
Color	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^pub enum Color {$/;"	g
ColumnEntries	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    type ColumnEntries = ColumnEntries<'a, N>;$/;"	t
ColumnEntries	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    type ColumnEntries: Iterator<Item = (usize, N)>;$/;"	t	interface:CsStorageIter
ColumnEntries	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^impl<'a, N: Clone> Iterator for ColumnEntries<'a, N> {$/;"	c
ColumnEntries	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^impl<'a, N> ColumnEntries<'a, N> {$/;"	c
ColumnEntries	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^pub struct ColumnEntries<'a, N> {$/;"	s
ColumnEntriesMut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    type ColumnEntriesMut = iter::Zip<iter::Cloned<slice::Iter<'a, usize>>, slice::IterMut<'a, N/;"	t
ColumnEntriesMut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    type ColumnEntriesMut: Iterator<Item = (usize, &'a mut N)>;$/;"	t	interface:CsStorageIterMut
ColumnIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^impl<'a, N: Scalar, R: Dim, C: Dim, S: 'a + Storage<N, R, C>> ColumnIter<'a, N, R, C, S> {$/;"	c
ColumnIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^impl<'a, N: Scalar, R: Dim, C: Dim, S: 'a + Storage<N, R, C>> ExactSizeIterator$/;"	c
ColumnIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^impl<'a, N: Scalar, R: Dim, C: Dim, S: 'a + Storage<N, R, C>> Iterator$/;"	c
ColumnIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^pub struct ColumnIter<'a, N: Scalar, R: Dim, C: Dim, S: Storage<N, R, C>> {$/;"	s
ColumnIterMut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^impl<'a, N: Scalar, R: Dim, C: Dim, S: 'a + StorageMut<N, R, C>> ColumnIterMut<'a, N, R, C, S> {$/;"	c
ColumnIterMut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^impl<'a, N: Scalar, R: Dim, C: Dim, S: 'a + StorageMut<N, R, C>> ExactSizeIterator$/;"	c
ColumnIterMut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^impl<'a, N: Scalar, R: Dim, C: Dim, S: 'a + StorageMut<N, R, C>> Iterator$/;"	c
ColumnIterMut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^pub struct ColumnIterMut<'a, N: Scalar, R: Dim, C: Dim, S: StorageMut<N, R, C>> {$/;"	s
ColumnRowIndices	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    type ColumnRowIndices = iter::Cloned<slice::Iter<'a, usize>>;$/;"	t
ColumnRowIndices	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    type ColumnRowIndices: Iterator<Item = usize>;$/;"	t	interface:CsStorageIter
Combination	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    type Combination = Tuple1Combination<I>;$/;"	t	implementation:Item
Combination	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    type Combination: From<I> + Iterator<Item = Self>;$/;"	t	interface:HasCombination
Combinations	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations.rs	/^impl<I> Clone for Combinations<I>$/;"	c
Combinations	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations.rs	/^impl<I> Iterator for Combinations<I>$/;"	c
Combinations	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations.rs	/^impl<I> fmt::Debug for Combinations<I>$/;"	c
Combinations	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations.rs	/^pub struct Combinations<I: Iterator> {$/;"	s
CombinationsWithReplacement	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations_with_replacement.rs	/^impl<I> CombinationsWithReplacement<I>$/;"	c
CombinationsWithReplacement	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations_with_replacement.rs	/^impl<I> Iterator for CombinationsWithReplacement<I>$/;"	c
CombinationsWithReplacement	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations_with_replacement.rs	/^impl<I> fmt::Debug for CombinationsWithReplacement<I>$/;"	c
CombinationsWithReplacement	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations_with_replacement.rs	/^pub struct CombinationsWithReplacement<I>$/;"	s
Compare	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/operator_aliases.rs	/^pub type Compare<A, B> = <A as Cmp<B>>::Output;$/;"	t
CompileClass	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^impl<'a, 'b> CompileClass<'a, 'b> {$/;"	c
CompileClass	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^struct CompileClass<'a, 'b> {$/;"	s
Compiled	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    Compiled(Inst),$/;"	e	enum:MaybeInst
CompiledTooBig	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/error.rs	/^    CompiledTooBig(usize),$/;"	e	enum:Error
Compiler	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^impl Compiler {$/;"	c
Compiler	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^pub struct Compiler {$/;"	s
Complete	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs	/^    Complete(CompleteState),$/;"	e	enum:PermutationState
CompleteState	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs	/^enum CompleteState {$/;"	g
CompleteState	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs	/^impl CompleteState {$/;"	c
CompleteStateRemaining	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs	/^enum CompleteStateRemaining {$/;"	g
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^impl<N: RealField> ComplexField for num_complex::Complex<N> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^impl<N: Identity<Additive>> Identity<Additive> for Complex<N> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^impl<N: Num + Clone> Identity<Multiplicative> for Complex<N> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/lattice.rs	/^impl<N: JoinSemilattice> JoinSemilattice for num_complex::Complex<N> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/lattice.rs	/^impl<N: MeetSemilattice> MeetSemilattice for num_complex::Complex<N> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/module.rs	/^impl<$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/one_operator.rs	/^impl<N: AbstractMagma<Additive>> AbstractMagma<Additive> for Complex<N> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/one_operator.rs	/^impl<N: Num + Clone> AbstractMagma<Multiplicative> for Complex<N> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/operator.rs	/^impl<N: Num + Clone + ClosedNeg> TwoSidedInverse<Multiplicative> for Complex<N> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/operator.rs	/^impl<N: TwoSidedInverse<Additive>> TwoSidedInverse<Additive> for Complex<N> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/subset.rs	/^impl<N1, N2: SupersetOf<N1>> SubsetOf<Complex<N2>> for Complex<N1> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/two_operators.rs	/^impl<N: Num + Clone + ClosedNeg + AbstractField> AbstractField for Complex<N> {}$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/two_operators.rs	/^impl<N: Num + Clone + ClosedNeg + AbstractRing> AbstractRing for Complex<N> {}$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/two_operators.rs	/^impl<N: Num + Clone + ClosedNeg + AbstractRingCommutative> AbstractRingCommutative for Complex<N/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs	/^impl<N: SimdRealField> Normed for Complex<N> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/cast.rs	/^impl<T, U> AsPrimitive<U> for Complex<T>$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/cast.rs	/^impl<T: FromPrimitive + Num> FromPrimitive for Complex<T> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/cast.rs	/^impl<T: NumCast + Num> NumCast for Complex<T> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/cast.rs	/^impl<T: ToPrimitive + Num> ToPrimitive for Complex<T> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    impl<'a, 'b, T: Clone + NumAssign + MulAddAssign> MulAddAssign<&'a Complex<T>, &'b Complex<T/;"	c	module:opassign
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    impl<'a, T: Clone + NumAssign> RemAssign<&'a Complex<T>> for Complex<T> {$/;"	c	module:opassign
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    impl<'a, T: Clone + NumAssign> RemAssign<&'a T> for Complex<T> {$/;"	c	module:opassign
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    impl<T: Clone + NumAssign + MulAddAssign> MulAddAssign for Complex<T> {$/;"	c	module:opassign
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    impl<T: Clone + NumAssign> AddAssign for Complex<T> {$/;"	c	module:opassign
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    impl<T: Clone + NumAssign> AddAssign<T> for Complex<T> {$/;"	c	module:opassign
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    impl<T: Clone + NumAssign> DivAssign for Complex<T> {$/;"	c	module:opassign
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    impl<T: Clone + NumAssign> DivAssign<T> for Complex<T> {$/;"	c	module:opassign
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    impl<T: Clone + NumAssign> MulAssign for Complex<T> {$/;"	c	module:opassign
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    impl<T: Clone + NumAssign> MulAssign<T> for Complex<T> {$/;"	c	module:opassign
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    impl<T: Clone + NumAssign> RemAssign for Complex<T> {$/;"	c	module:opassign
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    impl<T: Clone + NumAssign> RemAssign<T> for Complex<T> {$/;"	c	module:opassign
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    impl<T: Clone + NumAssign> SubAssign for Complex<T> {$/;"	c	module:opassign
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    impl<T: Clone + NumAssign> SubAssign<T> for Complex<T> {$/;"	c	module:opassign
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<'a, 'b, T: Clone + Num + MulAdd<Output = T>> MulAdd<&'b Complex<T>> for &'a Complex<T> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<'a, T: 'a + Num + Clone> Product<&'a Complex<T>> for Complex<T> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<'a, T: 'a + Num + Clone> Sum<&'a Complex<T>> for Complex<T> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<'a, T: Clone + Num + Neg<Output = T>> Inv for &'a Complex<T> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<'a, T: Clone + Num + Neg<Output = T>> Neg for &'a Complex<T> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<'a, T: Clone + Num> From<&'a T> for Complex<T> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<'de, T> serde::Deserialize<'de> for Complex<T>$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<T: Clone + Float> Complex<T> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<T: Clone + FloatCore> Complex<T> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<T: Clone + Num + MulAdd<Output = T>> MulAdd<Complex<T>> for Complex<T> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<T: Clone + Num + Neg<Output = T>> Complex<T> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<T: Clone + Num + Neg<Output = T>> Inv for Complex<T> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<T: Clone + Num + Neg<Output = T>> Neg for Complex<T> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<T: Clone + Num> Add<Complex<T>> for Complex<T> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<T: Clone + Num> Add<T> for Complex<T> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<T: Clone + Num> Complex<T> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<T: Clone + Num> Div<Complex<T>> for Complex<T> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<T: Clone + Num> Div<T> for Complex<T> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<T: Clone + Num> From<T> for Complex<T> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<T: Clone + Num> Mul<Complex<T>> for Complex<T> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<T: Clone + Num> Mul<T> for Complex<T> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<T: Clone + Num> One for Complex<T> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<T: Clone + Num> Rem<Complex<T>> for Complex<T> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<T: Clone + Num> Rem<T> for Complex<T> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<T: Clone + Num> Sub<Complex<T>> for Complex<T> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<T: Clone + Num> Sub<T> for Complex<T> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<T: Clone + Num> Zero for Complex<T> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<T: Clone + Signed> Complex<T> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<T: Num + Clone> Num for Complex<T> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<T: Num + Clone> Product for Complex<T> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<T: Num + Clone> Sum for Complex<T> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<T> Complex<T> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<T> FromStr for Complex<T>$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<T> fmt::Binary for Complex<T>$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<T> fmt::Display for Complex<T>$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<T> fmt::LowerExp for Complex<T>$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<T> fmt::LowerHex for Complex<T>$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<T> fmt::Octal for Complex<T>$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<T> fmt::UpperExp for Complex<T>$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<T> fmt::UpperHex for Complex<T>$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<T> serde::Serialize for Complex<T>$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^pub struct Complex<T> {$/;"	s
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/pow.rs	/^impl<'a, 'b, T: Float> Pow<&'b Complex<T>> for &'a Complex<T> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/pow.rs	/^impl<'a, T: Float> Pow<Complex<T>> for &'a Complex<T> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/pow.rs	/^impl<'b, T: Float> Pow<&'b Complex<T>> for Complex<T> {$/;"	c
Complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/pow.rs	/^impl<T: Float> Pow<Complex<T>> for Complex<T> {$/;"	c
Complex32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^pub type Complex32 = Complex<f32>;$/;"	t
Complex64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^pub type Complex64 = Complex<f64>;$/;"	t
ComplexDistribution	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/crand.rs	/^impl<Re, Im> ComplexDistribution<Re, Im> {$/;"	c
ComplexDistribution	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/crand.rs	/^impl<T, Re, Im> Distribution<Complex<T>> for ComplexDistribution<Re, Im>$/;"	c
ComplexDistribution	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/crand.rs	/^pub struct ComplexDistribution<Re, Im = Re> {$/;"	s
ComplexErrorKind	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^enum ComplexErrorKind<E> {$/;"	g
ComplexField	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^pub trait ComplexField:$/;"	i
ComplexField	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/vector.rs	/^    type ComplexField: ComplexField<RealField = Self::RealField>;$/;"	t	interface:NormedSpace
ComplexField	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^    type ComplexField = N;$/;"	t
ComplexField	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    type ComplexField = N;$/;"	t	implementation:Quaternion
Concat	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^pub unsafe trait Concat<T, M>: GenericSequence<T>$/;"	i
ConsTuples	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/cons_tuples_impl.rs	/^impl<I, J> Clone for ConsTuples<I, J>$/;"	c
ConsTuples	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/cons_tuples_impl.rs	/^pub struct ConsTuples<I, J>$/;"	s
ContiguousStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs	/^pub unsafe trait ContiguousStorage<N: Scalar, R: Dim, C: Dim = U1>:$/;"	i
ContiguousStorageMut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs	/^pub unsafe trait ContiguousStorageMut<N: Scalar, R: Dim, C: Dim = U1>:$/;"	i
Continue	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    Continue(T),$/;"	e	enum:FoldWhile
Coordinates	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_alga.rs	/^    type Coordinates = VectorN<N, D>;$/;"	t
Count	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^        impl<'kvs> Visitor<'kvs> for Count {$/;"	c	method:Source::count
Count	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^        struct Count(usize);$/;"	s	method:Source::count
Cow	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^    impl<'a> ToKey for Cow<'a, str> {$/;"	c	module:std_support
Cow	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    impl<'v> ToValue for Cow<'v, str> {$/;"	c	module:std_support
CsCholesky	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_cholesky.rs	/^impl<N: RealField, D: Dim> CsCholesky<N, D>$/;"	c
CsCholesky	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_cholesky.rs	/^pub struct CsCholesky<N: RealField, D: Dim>$/;"	s
CsMatrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^impl<N: Scalar, R: Dim, C: Dim, S: CsStorage<N, R, C>> CsMatrix<N, R, C, S> {$/;"	c
CsMatrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^impl<N: Scalar, R: Dim, C: Dim, S: CsStorageMut<N, R, C>> CsMatrix<N, R, C, S> {$/;"	c
CsMatrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^impl<N: Scalar, R: Dim, C: Dim> CsMatrix<N, R, C>$/;"	c
CsMatrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^pub struct CsMatrix<$/;"	s
CsMatrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_conversion.rs	/^impl<'a, N: Scalar + Zero + ClosedAdd, R: Dim, C: Dim> CsMatrix<N, R, C>$/;"	c
CsMatrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_conversion.rs	/^impl<'a, N: Scalar + Zero + ClosedAdd> CsMatrix<N> {$/;"	c
CsMatrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_conversion.rs	/^impl<'a, N: Scalar + Zero, R: Dim, C: Dim, S> From<Matrix<N, R, C, S>> for CsMatrix<N, R, C>$/;"	c
CsMatrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_ops.rs	/^impl<'a, 'b, N, R, C, S> Mul<N> for CsMatrix<N, R, C, S>$/;"	c
CsMatrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_ops.rs	/^impl<'a, 'b, N, R1, R2, C1, C2, S1, S2> Add<&'b CsMatrix<N, R2, C2, S2>>$/;"	c
CsMatrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_ops.rs	/^impl<'a, 'b, N, R1, R2, C1, C2, S1, S2> Mul<&'b CsMatrix<N, R2, C2, S2>>$/;"	c
CsMatrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_ops.rs	/^impl<N: Scalar, R: Dim, C: Dim, S: CsStorage<N, R, C>> CsMatrix<N, R, C, S> {$/;"	c
CsMatrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_solve.rs	/^impl<N: RealField, D: Dim, S: CsStorage<N, D, D>> CsMatrix<N, D, D, S> {$/;"	c
CsStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^pub trait CsStorage<N, R, C = U1>: for<'a> CsStorageIter<'a, N, R, C> {$/;"	i
CsStorageIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^pub trait CsStorageIter<'a, N, R, C = U1> {$/;"	i
CsStorageIterMut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^pub trait CsStorageIterMut<'a, N: 'a, R, C = U1> {$/;"	i
CsStorageMut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^pub trait CsStorageMut<N, R, C = U1>:$/;"	i
CsVecStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^impl<'a, N: Scalar, R: Dim, C: Dim> CsStorageIter<'a, N, R, C> for CsVecStorage<N, R, C>$/;"	c
CsVecStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^impl<'a, N: Scalar, R: Dim, C: Dim> CsStorageIterMut<'a, N, R, C> for CsVecStorage<N, R, C>$/;"	c
CsVecStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^impl<N: Scalar, R: Dim, C: Dim> CsStorage<N, R, C> for CsVecStorage<N, R, C>$/;"	c
CsVecStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^impl<N: Scalar, R: Dim, C: Dim> CsStorageMut<N, R, C> for CsVecStorage<N, R, C> where$/;"	c
CsVecStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^impl<N: Scalar, R: Dim, C: Dim> CsVecStorage<N, R, C> where DefaultAllocator: Allocator<usize, C/;"	c
CsVecStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^impl<N: Scalar, R: Dim, C: Dim> CsVecStorage<N, R, C>$/;"	c
CsVecStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^pub struct CsVecStorage<N: Scalar, R: Dim, C: Dim>$/;"	s
CsVector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^pub type CsVector<N, R = Dynamic, S = CsVecStorage<N, R, U1>> = CsMatrix<N, R, U1, S>;$/;"	t
Cube	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/operator_aliases.rs	/^pub type Cube<A> = <Square<A> as Mul<A>>::Output;$/;"	t
Cyan	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    Cyan,$/;"	e	enum:Color
D	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^impl<'a, T, D: Distribution<T>> Distribution<T> for &'a D {$/;"	c
DMatrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type DMatrix<N> = MatrixN<N, Dynamic>;$/;"	t
DMatrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^impl<N: Scalar> DMatrix<N> {$/;"	c
DMatrixSlice	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type DMatrixSlice<'a, N, RStride = U1, CStride = Dynamic> =$/;"	t
DMatrixSliceMut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type DMatrixSliceMut<'a, N, RStride = U1, CStride = Dynamic> =$/;"	t
DVector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type DVector<N> = Matrix<N, Dynamic, U1, VecStorage<N, Dynamic, U1>>;$/;"	t
DVectorSlice	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type DVectorSlice<'a, N, RStride = U1, CStride = Dynamic> =$/;"	t
DVectorSlice	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^impl<'a, N: Scalar + Copy> From<&'a [N]> for DVectorSlice<'a, N> {$/;"	c
DVectorSliceMut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type DVectorSliceMut<'a, N, RStride = U1, CStride = Dynamic> =$/;"	t
DVectorSliceMut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^impl<'a, N: Scalar + Copy> From<&'a mut [N]> for DVectorSliceMut<'a, N> {$/;"	c
Date	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^impl<Tz: TimeZone, Tz2: TimeZone> PartialEq<Date<Tz2>> for Date<Tz> {$/;"	c
Date	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^impl<Tz: TimeZone> Add<OldDuration> for Date<Tz> {$/;"	c
Date	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^impl<Tz: TimeZone> Copy for Date<Tz> where <Tz as TimeZone>::Offset: Copy {}$/;"	c
Date	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^impl<Tz: TimeZone> Date<Tz> where Tz::Offset: fmt::Display {$/;"	c
Date	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^impl<Tz: TimeZone> Date<Tz> {$/;"	c
Date	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^impl<Tz: TimeZone> Datelike for Date<Tz> {$/;"	c
Date	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^impl<Tz: TimeZone> Eq for Date<Tz> {$/;"	c
Date	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^impl<Tz: TimeZone> Ord for Date<Tz> {$/;"	c
Date	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^impl<Tz: TimeZone> PartialOrd for Date<Tz> {$/;"	c
Date	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^impl<Tz: TimeZone> Sub<Date<Tz>> for Date<Tz> {$/;"	c
Date	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^impl<Tz: TimeZone> Sub<OldDuration> for Date<Tz> {$/;"	c
Date	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^impl<Tz: TimeZone> fmt::Debug for Date<Tz> {$/;"	c
Date	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^impl<Tz: TimeZone> fmt::Display for Date<Tz> where Tz::Offset: fmt::Display {$/;"	c
Date	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^impl<Tz: TimeZone> hash::Hash for Date<Tz> {$/;"	c
Date	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^pub struct Date<Tz: TimeZone> {$/;"	s
Date	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^unsafe impl<Tz: TimeZone> Send for Date<Tz> where <Tz as TimeZone>::Offset: Send {}$/;"	c
DateImpl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^pub type DateImpl = i32;$/;"	t
DateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    impl Decodable for DateTime<FixedOffset> {$/;"	c	module:rustc_serialize
DateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    impl Decodable for DateTime<Local> {$/;"	c	module:rustc_serialize
DateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    impl Decodable for DateTime<Utc> {$/;"	c	module:rustc_serialize
DateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    impl<'de> de::Deserialize<'de> for DateTime<FixedOffset> {$/;"	c	module:serde
DateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    impl<'de> de::Deserialize<'de> for DateTime<Local> {$/;"	c	module:serde
DateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    impl<'de> de::Deserialize<'de> for DateTime<Utc> {$/;"	c	module:serde
DateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    impl<Tz: TimeZone> Encodable for DateTime<Tz> {$/;"	c	module:rustc_serialize
DateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    impl<Tz: TimeZone> From<TsSeconds<Tz>> for DateTime<Tz> {$/;"	c	module:rustc_serialize
DateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    impl<Tz: TimeZone> ser::Serialize for DateTime<Tz> {$/;"	c	module:serde
DateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^impl DateTime<FixedOffset> {$/;"	c
DateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^impl From<DateTime<FixedOffset>> for DateTime<Local> {$/;"	c
DateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^impl From<DateTime<FixedOffset>> for DateTime<Utc> {$/;"	c
DateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^impl From<DateTime<Local>> for DateTime<FixedOffset> {$/;"	c
DateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^impl From<DateTime<Local>> for DateTime<Utc> {$/;"	c
DateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^impl From<DateTime<Utc>> for DateTime<FixedOffset> {$/;"	c
DateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^impl From<DateTime<Utc>> for DateTime<Local> {$/;"	c
DateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^impl From<SystemTime> for DateTime<Local> {$/;"	c
DateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^impl From<SystemTime> for DateTime<Utc> {$/;"	c
DateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^impl str::FromStr for DateTime<FixedOffset> {$/;"	c
DateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^impl str::FromStr for DateTime<Local> {$/;"	c
DateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^impl str::FromStr for DateTime<Utc> {$/;"	c
DateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^impl<Tz: TimeZone, Tz2: TimeZone> PartialEq<DateTime<Tz2>> for DateTime<Tz> {$/;"	c
DateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^impl<Tz: TimeZone> Add<OldDuration> for DateTime<Tz> {$/;"	c
DateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^impl<Tz: TimeZone> Copy for DateTime<Tz> where <Tz as TimeZone>::Offset: Copy {}$/;"	c
DateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^impl<Tz: TimeZone> DateTime<Tz> where Tz::Offset: fmt::Display {$/;"	c
DateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^impl<Tz: TimeZone> DateTime<Tz> {$/;"	c
DateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^impl<Tz: TimeZone> Datelike for DateTime<Tz> {$/;"	c
DateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^impl<Tz: TimeZone> Eq for DateTime<Tz> {$/;"	c
DateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^impl<Tz: TimeZone> Ord for DateTime<Tz> {$/;"	c
DateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^impl<Tz: TimeZone> PartialOrd for DateTime<Tz> {$/;"	c
DateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^impl<Tz: TimeZone> Sub<DateTime<Tz>> for DateTime<Tz> {$/;"	c
DateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^impl<Tz: TimeZone> Sub<OldDuration> for DateTime<Tz> {$/;"	c
DateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^impl<Tz: TimeZone> Timelike for DateTime<Tz> {$/;"	c
DateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^impl<Tz: TimeZone> fmt::Debug for DateTime<Tz> {$/;"	c
DateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^impl<Tz: TimeZone> fmt::Display for DateTime<Tz> where Tz::Offset: fmt::Display {$/;"	c
DateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^impl<Tz: TimeZone> hash::Hash for DateTime<Tz> {$/;"	c
DateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^pub struct DateTime<Tz: TimeZone> {$/;"	s
DateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^unsafe impl<Tz: TimeZone> Send for DateTime<Tz> where <Tz as TimeZone>::Offset: Send {}$/;"	c
DateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/fixed.rs	/^impl<Tz: TimeZone> Add<FixedOffset> for DateTime<Tz> {$/;"	c
DateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/fixed.rs	/^impl<Tz: TimeZone> Sub<FixedOffset> for DateTime<Tz> {$/;"	c
DateTimeVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    impl<'de> de::Visitor<'de> for DateTimeVisitor {$/;"	c	module:serde
DateTimeVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    struct DateTimeVisitor;$/;"	s	module:serde
Datelike	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^pub trait Datelike: Sized {$/;"	i
Day	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    Day,$/;"	e	enum:Numeric
Debug	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    Debug(&'v fmt::Debug),$/;"	e	enum:Inner
Debug	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    Debug,$/;"	e	enum:Level
Debug	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    Debug,$/;"	e	enum:LevelFilter
DebugList	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^impl<'a, 'b: 'a, 'kvs> Visitor<'kvs> for fmt::DebugList<'a, 'b> {$/;"	c
DebugMap	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^impl<'a, 'b: 'a, 'kvs> Visitor<'kvs> for fmt::DebugMap<'a, 'b> {$/;"	c
DebugSet	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^impl<'a, 'b: 'a, 'kvs> Visitor<'kvs> for fmt::DebugSet<'a, 'b> {$/;"	c
DebugTuple	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^impl<'a, 'b: 'a, 'kvs> Visitor<'kvs> for fmt::DebugTuple<'a, 'b> {$/;"	c
Dedup	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub type Dedup<I>=DedupBy<I, DedupEq>;$/;"	t
DedupBy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^impl<I, Pred> Iterator for DedupBy<I, Pred>$/;"	c
DedupBy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^impl<I, Pred> fmt::Debug for DedupBy<I, Pred>$/;"	c
DedupBy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^impl<I: Clone, Pred: Clone> Clone for DedupBy<I, Pred>$/;"	c
DedupBy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub struct DedupBy<I, Pred>$/;"	s
DedupEq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^impl<T: PartialEq> DedupPredicate<T> for DedupEq {$/;"	c
DedupEq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub struct DedupEq;$/;"	s
DedupPredicate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub trait DedupPredicate<T> { \/\/ TODO replace by Fn(&T, &T)->bool once Rust supports it$/;"	i
DefaultAllocator	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs	/^impl<N, R1, R2, C1, C2> SameShapeAllocator<N, R1, C1, R2, C2> for DefaultAllocator$/;"	c
DefaultAllocator	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs	/^impl<N, R1, R2> SameShapeVectorAllocator<N, R1, R2> for DefaultAllocator$/;"	c
DefaultAllocator	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs	/^impl<N, R, C> Allocator<N, R, C> for DefaultAllocator$/;"	c
DefaultAllocator	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs	/^impl<N: Scalar, C: Dim> Allocator<N, Dynamic, C> for DefaultAllocator {$/;"	c
DefaultAllocator	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs	/^impl<N: Scalar, CFrom: Dim, CTo: Dim> Reallocator<N, Dynamic, CFrom, Dynamic, CTo>$/;"	c
DefaultAllocator	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs	/^impl<N: Scalar, CFrom: Dim, RTo: DimName> Reallocator<N, Dynamic, CFrom, RTo, Dynamic>$/;"	c
DefaultAllocator	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs	/^impl<N: Scalar, R: DimName> Allocator<N, R, Dynamic> for DefaultAllocator {$/;"	c
DefaultAllocator	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs	/^impl<N: Scalar, RFrom, CFrom, CTo> Reallocator<N, RFrom, CFrom, Dynamic, CTo> for DefaultAllocat/;"	c
DefaultAllocator	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs	/^impl<N: Scalar, RFrom, CFrom, RTo, CTo> Reallocator<N, RFrom, CFrom, RTo, CTo> for DefaultAlloca/;"	c
DefaultAllocator	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs	/^impl<N: Scalar, RFrom, CFrom, RTo> Reallocator<N, RFrom, CFrom, RTo, Dynamic> for DefaultAllocat/;"	c
DefaultAllocator	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs	/^impl<N: Scalar, RFrom: DimName, CTo: Dim> Reallocator<N, RFrom, Dynamic, Dynamic, CTo>$/;"	c
DefaultAllocator	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs	/^impl<N: Scalar, RFrom: DimName, RTo: DimName> Reallocator<N, RFrom, Dynamic, RTo, Dynamic>$/;"	c
DefaultAllocator	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs	/^pub struct DefaultAllocator;$/;"	s
DefaultFormat	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^impl<'a> DefaultFormat<'a> {$/;"	c
DefaultFormat	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^struct DefaultFormat<'a> {$/;"	s
DelayedFormat	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^impl<'a, I: Iterator<Item=B> + Clone, B: Borrow<Item<'a>>> DelayedFormat<I> {$/;"	c
DelayedFormat	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^impl<'a, I: Iterator<Item=B> + Clone, B: Borrow<Item<'a>>> fmt::Display for DelayedFormat<I> {$/;"	c
DelayedFormat	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^pub struct DelayedFormat<I> {$/;"	s
Dfa	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    Dfa,$/;"	e	enum:MatchType
DfaAnchoredReverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    DfaAnchoredReverse,$/;"	e	enum:MatchType
DfaMany	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    DfaMany,$/;"	e	enum:MatchType
DfaSuffix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    DfaSuffix,$/;"	e	enum:MatchType
Diff	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/diff.rs	/^pub enum Diff<I, J>$/;"	g
Diff	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/operator_aliases.rs	/^pub type Diff<A, B> = <A as Sub<B>>::Output;$/;"	t
Dim	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^pub trait Dim: Any + Debug + Copy + PartialEq + Send + Sync {$/;"	i
DimEq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs	/^pub trait DimEq<D1: Dim, D2: Dim> {$/;"	i
DimName	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^pub trait DimName: Dim {$/;"	i
DimRange	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^trait DimRange<D: Dim> {$/;"	i
DirectIsometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^pub trait DirectIsometry<E: EuclideanSpace>: Isometry<E> {}$/;"	i
Directive	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^struct Directive {$/;"	s
Dirichlet	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/dirichlet.rs	/^impl Dirichlet {$/;"	c
Dirichlet	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/dirichlet.rs	/^impl Distribution<Vec<f64>> for Dirichlet {$/;"	c
Dirichlet	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/dirichlet.rs	/^pub struct Dirichlet {$/;"	s
Display	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    Display(&'v fmt::Display),$/;"	e	enum:Inner
DistIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^impl<D, R, T> Iterator for DistIter<D, R, T>$/;"	c
DistIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^impl<D, R, T> iter::FusedIterator for DistIter<D, R, T>$/;"	c
DistIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^impl<D, R, T> iter::TrustedLen for DistIter<D, R, T>$/;"	c
DistIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^pub struct DistIter<D, R, T> {$/;"	s
Distribution	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^pub trait Distribution<T> {$/;"	i
DoFAnythingElse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    DoFAnythingElse(Gamma),$/;"	e	enum:ChiSquaredRepr
DoFExactlyOne	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    DoFExactlyOne,$/;"	e	enum:ChiSquaredRepr
DocTests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/arr.rs	/^    pub enum DocTests {}$/;"	g	module:doctests_only
Done	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    Done(T),$/;"	e	enum:FoldWhile
Double	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/operator_aliases.rs	/^pub type Double<A> = Shleft<A, ::bit::B1>;$/;"	t
Duration	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^impl Add for Duration {$/;"	c
Duration	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^impl Div<i32> for Duration {$/;"	c
Duration	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^impl Duration {$/;"	c
Duration	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^impl Mul<i32> for Duration {$/;"	c
Duration	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^impl Neg for Duration {$/;"	c
Duration	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^impl Sub for Duration {$/;"	c
Duration	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^impl fmt::Display for Duration {$/;"	c
Duration	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^pub struct Duration {$/;"	s
Duration	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^impl SampleUniform for Duration {$/;"	c
Dynamic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^impl Add<usize> for Dynamic {$/;"	c
Dynamic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^impl Dim for Dynamic {$/;"	c
Dynamic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^impl Dynamic {$/;"	c
Dynamic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^impl IsDynamic for Dynamic {}$/;"	c
Dynamic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^impl IsNotStaticOne for Dynamic {}$/;"	c
Dynamic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^impl Serialize for Dynamic {$/;"	c
Dynamic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^impl Sub<usize> for Dynamic {$/;"	c
Dynamic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^impl<'de> Deserialize<'de> for Dynamic {$/;"	c
Dynamic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^pub struct Dynamic {$/;"	s
Eigen	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/eigen.rs	/^impl<N: ComplexField, D: Dim> Copy for Eigen<N, D>$/;"	c
Eigen	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/eigen.rs	/^impl<N: ComplexField, D: Dim> Eigen<N, D>$/;"	c
Eigen	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/eigen.rs	/^pub struct Eigen<N: ComplexField, D: Dim>$/;"	s
EitherOrBoth	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs	/^impl<A, B> EitherOrBoth<A, B> {$/;"	c
EitherOrBoth	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs	/^impl<A, B> Into<Option<Either<A, B>>> for EitherOrBoth<A, B> {$/;"	c
EitherOrBoth	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs	/^impl<T> EitherOrBoth<T, T> {$/;"	c
EitherOrBoth	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs	/^pub enum EitherOrBoth<A, B> {$/;"	g
Element	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_simba.rs	/^    type Element = MatrixMN<N::Element, R, C>;$/;"	t
Element	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_simba.rs	/^    type Element = Isometry<N::Element, D, R::Element>;$/;"	t
Element	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_simba.rs	/^    type Element = Point<N::Element, D>;$/;"	t
Element	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_simba.rs	/^    type Element = Quaternion<N::Element>;$/;"	t
Element	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_simba.rs	/^    type Element = UnitQuaternion<N::Element>;$/;"	t
Element	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_simba.rs	/^    type Element = Rotation<N::Element, D>;$/;"	t
Element	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_simba.rs	/^    type Element = Similarity<N::Element, D, R::Element>;$/;"	t
Element	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_simba.rs	/^    type Element = Transform<N::Element, D, C>;$/;"	t
Element	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_simba.rs	/^    type Element = Translation<N::Element, D>;$/;"	t
Element	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_simba.rs	/^    type Element = UnitComplex<N::Element>;$/;"	t
Empty	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs	/^    Empty,$/;"	e	enum:PermutationState
Empty	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^    Empty,$/;"	e	enum:FloatErrorKind
Empty	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    Empty,$/;"	e	enum:LiteralIter
Empty	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    Empty,$/;"	e	enum:Matcher
EmptyFlags	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^struct EmptyFlags {$/;"	s
EmptyLook	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    EmptyLook { look: EmptyLook },$/;"	e	enum:InstHole
EmptyLook	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    EmptyLook(InstEmptyLook),$/;"	e	enum:Inst
EmptyLook	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^pub enum EmptyLook {$/;"	g
EmptyPoly	/Users/williamcashman/Honours/Program/n_poly/src/error.rs	/^    EmptyPoly,$/;"	e	enum:PolyErr
EndLine	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    EndLine,$/;"	e	enum:EmptyLook
EndText	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    EndText,$/;"	e	enum:EmptyLook
EntropyRng	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/entropy.rs	/^impl CryptoRng for EntropyRng {}$/;"	c
EntropyRng	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/entropy.rs	/^impl Default for EntropyRng {$/;"	c
EntropyRng	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/entropy.rs	/^impl EntropyRng {$/;"	c
EntropyRng	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/entropy.rs	/^impl RngCore for EntropyRng {$/;"	c
EntropyRng	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/entropy.rs	/^pub struct EntropyRng {$/;"	s
Env	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^impl<'a, T> From<T> for Env<'a>$/;"	c
Env	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^impl<'a> Default for Env<'a> {$/;"	c
Env	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^impl<'a> Env<'a> {$/;"	c
Env	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^pub struct Env<'a> {$/;"	s
Epsilon	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^    type Epsilon = Id<O>;$/;"	t	implementation:Id
Epsilon	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/wrapper.rs	/^    type Epsilon = T::Epsilon;$/;"	t	implementation:Wrapper
Epsilon	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    type Epsilon = N::Epsilon;$/;"	t
Epsilon	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^    type Epsilon = N::Epsilon;$/;"	t
Epsilon	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^    type Epsilon = N::Epsilon;$/;"	t
Epsilon	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    type Epsilon = N;$/;"	t	implementation:Quaternion
Epsilon	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    type Epsilon = N;$/;"	t	implementation:UnitQuaternion
Epsilon	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^    type Epsilon = N::Epsilon;$/;"	t
Epsilon	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^    type Epsilon = N::Epsilon;$/;"	t
Epsilon	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^    type Epsilon = N::Epsilon;$/;"	t
Epsilon	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs	/^    type Epsilon = N::Epsilon;$/;"	t
Epsilon	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs	/^    type Epsilon = N;$/;"	t	implementation:UnitComplex
Eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/operator_aliases.rs	/^pub type Eq<A, B> = <A as IsEqual<B>>::Output;$/;"	t
Equal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/lib.rs	/^impl Ord for Equal {$/;"	c
Equal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/lib.rs	/^pub struct Equal;$/;"	s
Err	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    type Err = ParseError;$/;"	t	implementation:DateTime
Err	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    type Err = ParseWeekdayError;$/;"	t	implementation:Weekday
Err	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    type Err = ParseError;$/;"	t	implementation:NaiveDate
Err	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    type Err = ParseError;$/;"	t	implementation:NaiveDateTime
Err	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    type Err = ParseError;$/;"	t	implementation:NaiveTime
Err	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    type Err = ParseLevelError;$/;"	t	implementation:Level
Err	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    type Err = ParseLevelError;$/;"	t	implementation:LevelFilter
Err	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    type Err = ParseComplexError<T::Err>;$/;"	t
Err	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    type Err = Error;$/;"	t	implementation:Regex
Err	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    type Err = Error;$/;"	t	implementation:Regex
Err	/Users/williamcashman/Honours/Program/n_poly/src/algebras/complex.rs	/^    type Err = std::num::ParseFloatError;$/;"	t	implementation:CC
Err	/Users/williamcashman/Honours/Program/n_poly/src/algebras/finite_field.rs	/^    type Err = std::num::ParseIntError;$/;"	t	implementation:FF
Err	/Users/williamcashman/Honours/Program/n_poly/src/algebras/integers.rs	/^    type Err = std::num::ParseIntError;$/;"	t	implementation:ZZ
Err	/Users/williamcashman/Honours/Program/n_poly/src/algebras/real.rs	/^    type Err = std::num::ParseFloatError;$/;"	t	implementation:RR
Err	/Users/williamcashman/Honours/Program/n_poly/src/parse.rs	/^    type Err = PolyErr;$/;"	t	implementation:Poly
Err	/Users/williamcashman/Honours/Program/n_poly/src/parse.rs	/^    type Err;$/;"	t	interface:MyFromStr
Error	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    Error,$/;"	e	enum:Item
Error	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/error.rs	/^    impl Error {$/;"	c	module:std_support
Error	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/error.rs	/^    impl From<Error> for io::Error {$/;"	c	module:std_support
Error	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/error.rs	/^    impl From<io::Error> for Error {$/;"	c	module:std_support
Error	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/error.rs	/^    impl error::Error for Error {$/;"	c	module:std_support
Error	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/error.rs	/^impl Error {$/;"	c
Error	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/error.rs	/^impl From<Error> for fmt::Error {$/;"	c
Error	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/error.rs	/^impl From<fmt::Error> for Error {$/;"	c
Error	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/error.rs	/^impl fmt::Display for Error {$/;"	c
Error	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/error.rs	/^pub struct Error {$/;"	s
Error	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    impl Error {$/;"	c	module:sval_support
Error	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    Error = 1, \/\/ This way these line up with the discriminants for LevelFilter below$/;"	e	enum:Level
Error	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    Error,$/;"	e	enum:LevelFilter
Error	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/error.rs	/^impl ::std::error::Error for Error {$/;"	c
Error	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/error.rs	/^impl fmt::Debug for Error {$/;"	c
Error	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/error.rs	/^impl fmt::Display for Error {$/;"	c
Error	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/error.rs	/^pub enum Error {$/;"	g
EuclideanDomain	/Users/williamcashman/Honours/Program/n_poly/src/algebras/mod.rs	/^pub trait EuclideanDomain: Ring {$/;"	i
EuclideanNorm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^impl<N: SimdComplexField> Norm<N> for EuclideanNorm {$/;"	c
EuclideanNorm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^pub struct EuclideanNorm;$/;"	s
Even	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Xp, Yp> Gcd<Even<Yp>> for Even<Xp>$/;"	c
Even	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Xp, Yp> Gcd<Odd<Yp>> for Even<Xp>$/;"	c
Even	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^type Even<N> = UInt<N, B0>;$/;"	t
ExactlyOneError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/exactly_one_err.rs	/^impl<I> ExactSizeIterator for ExactlyOneError<I> where I: ExactSizeIterator {}$/;"	c
ExactlyOneError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/exactly_one_err.rs	/^impl<I> ExactlyOneError<I>$/;"	c
ExactlyOneError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/exactly_one_err.rs	/^impl<I> Iterator for ExactlyOneError<I>$/;"	c
ExactlyOneError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/exactly_one_err.rs	/^pub struct ExactlyOneError<I>$/;"	s
Exec	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^impl Clone for Exec {$/;"	c
Exec	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^impl Exec {$/;"	c
Exec	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^pub struct Exec {$/;"	s
ExecBuilder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^impl ExecBuilder {$/;"	c
ExecBuilder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^pub struct ExecBuilder {$/;"	s
ExecNoSync	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^impl<'c> ExecNoSync<'c> {$/;"	c
ExecNoSync	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^impl<'c> RegularExpression for ExecNoSync<'c> {$/;"	c
ExecNoSync	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^pub struct ExecNoSync<'c> {$/;"	s
ExecNoSyncStr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^impl<'c> ExecNoSyncStr<'c> {$/;"	c
ExecNoSyncStr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^impl<'c> RegularExpression for ExecNoSyncStr<'c> {$/;"	c
ExecNoSyncStr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^pub struct ExecNoSyncStr<'c>(ExecNoSync<'c>);$/;"	s
ExecReadOnly	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^impl ExecReadOnly {$/;"	c
ExecReadOnly	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^struct ExecReadOnly {$/;"	s
Exp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/exponential.rs	/^impl Distribution<f64> for Exp {$/;"	c
Exp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/exponential.rs	/^impl Exp {$/;"	c
Exp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/exponential.rs	/^pub struct Exp {$/;"	s
Exp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/operator_aliases.rs	/^pub type Exp<A, B> = <A as Pow<B>>::Output;$/;"	t
Exp1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/exponential.rs	/^impl Distribution<f64> for Exp1 {$/;"	c
Exp1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/exponential.rs	/^pub struct Exp1;$/;"	s
Expired	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    Expired,$/;"	e	enum:Status
ExprError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    ExprError,$/;"	e	enum:ComplexErrorKind
F	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^impl<T, F: FnMut(&T, &T)->bool> DedupPredicate<T> for F {$/;"	c
F	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^impl<T, F: FnMut(&T, &T)->bool> MergePredicate<T> for F {$/;"	c
F	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^impl<'a, A, K, F: ?Sized> KeyFunction<A> for F$/;"	c
F	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs	/^impl<T, F: FnMut(&T, &T)->bool> KMergePredicate<T> for F {$/;"	c
F	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/float.rs	/^    type F;$/;"	t	interface:IntoFloat
F	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^impl<F, T> Replacer for F$/;"	c
F	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^impl<F, T> Replacer for F$/;"	c
F	/Users/williamcashman/Honours/Program/n_poly/src/algebras/mod.rs	/^impl<F: Field> EuclideanDomain for F {$/;"	c
F64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/test.rs	/^    F64(f64),$/;"	e	enum:Token
FF	/Users/williamcashman/Honours/Program/n_poly/src/algebras/finite_field.rs	/^impl<P: Prime> FF<P> {$/;"	c
FF	/Users/williamcashman/Honours/Program/n_poly/src/algebras/finite_field.rs	/^impl<P: Prime> Group for FF<P> {$/;"	c
FF	/Users/williamcashman/Honours/Program/n_poly/src/algebras/finite_field.rs	/^impl<P: Prime> One for FF<P> {$/;"	c
FF	/Users/williamcashman/Honours/Program/n_poly/src/algebras/finite_field.rs	/^impl<P: Prime> PartialEq for FF<P> {$/;"	c
FF	/Users/williamcashman/Honours/Program/n_poly/src/algebras/finite_field.rs	/^impl<P: Prime> Ring for FF<P> {$/;"	c
FF	/Users/williamcashman/Honours/Program/n_poly/src/algebras/finite_field.rs	/^impl<P: Prime> ScalarRing for FF<P> {$/;"	c
FF	/Users/williamcashman/Honours/Program/n_poly/src/algebras/finite_field.rs	/^impl<P: Prime> Zero for FF<P> {$/;"	c
FF	/Users/williamcashman/Honours/Program/n_poly/src/algebras/finite_field.rs	/^impl<P: Prime> fmt::Debug for FF<P> {$/;"	c
FF	/Users/williamcashman/Honours/Program/n_poly/src/algebras/finite_field.rs	/^impl<P: Prime> fmt::Display for FF<P> {$/;"	c
FF	/Users/williamcashman/Honours/Program/n_poly/src/algebras/finite_field.rs	/^impl<P: Prime> std::cmp::Eq for FF<P> {}$/;"	c
FF	/Users/williamcashman/Honours/Program/n_poly/src/algebras/finite_field.rs	/^impl<P: Prime> std::str::FromStr for FF<P> {$/;"	c
FF	/Users/williamcashman/Honours/Program/n_poly/src/algebras/finite_field.rs	/^struct FF<P: Prime>(i64, PhantomData<P>);$/;"	s
FMT_NONE	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/strftime.rs	/^        static FMT_NONE: [Item<'static>; 0] = [];$/;"	v	method:StrftimeItems::new
FPolyRing	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^pub trait FPolyRing: PolyRing<Coeff: Field> {}$/;"	i
FastMult	/Users/williamcashman/Honours/Program/n_poly/src/fast_mult.rs	/^pub trait FastMult {$/;"	i
Field	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/vector.rs	/^    type Field: Field;$/;"	t	interface:VectorSpace
Field	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^    type Field = N;$/;"	t
Field	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    type Field = N;$/;"	t	implementation:Quaternion
Field	/Users/williamcashman/Honours/Program/n_poly/src/algebras/mod.rs	/^pub trait Field: ScalarRing {$/;"	i
Fill	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    Fill(&'v Fill),$/;"	e	enum:Inner
Fill	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^pub trait Fill {$/;"	i
Filter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^impl Filter {$/;"	c
Filter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^impl fmt::Debug for Filter {$/;"	c
Filter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^pub struct Filter {$/;"	s
Filter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/regex.rs	/^impl Filter {$/;"	c
Filter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/regex.rs	/^impl fmt::Display for Filter {$/;"	c
Filter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/regex.rs	/^pub struct Filter {$/;"	s
Filter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/string.rs	/^impl Filter {$/;"	c
Filter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/string.rs	/^impl fmt::Display for Filter {$/;"	c
Filter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/string.rs	/^pub struct Filter {$/;"	s
FiniteDimInnerSpace	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/vector.rs	/^pub trait FiniteDimInnerSpace:$/;"	i
FiniteDimVectorSpace	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/vector.rs	/^pub trait FiniteDimVectorSpace:$/;"	i
First	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^    type First = &'a GenericArray<T, K>;$/;"	t
First	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^    type First = &'a mut GenericArray<T, K>;$/;"	t
First	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^    type First = GenericArray<T, K>;$/;"	t
First	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^    type First: GenericSequence<T>;$/;"	t	interface:Split
First	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs	/^    First(T),$/;"	e	enum:Position
FirstMismatch	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/diff.rs	/^    FirstMismatch(usize, PutBack<I>, PutBack<J>),$/;"	e	enum:Diff
FisherF	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^impl Distribution<f64> for FisherF {$/;"	c
FisherF	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^impl FisherF {$/;"	c
FisherF	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^pub struct FisherF {$/;"	s
Fixed	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    Fixed(Fixed),$/;"	e	enum:Item
Fixed	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^pub enum Fixed {$/;"	g
FixedOffset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/fixed.rs	/^impl FixedOffset {$/;"	c
FixedOffset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/fixed.rs	/^impl Offset for FixedOffset {$/;"	c
FixedOffset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/fixed.rs	/^impl TimeZone for FixedOffset {$/;"	c
FixedOffset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/fixed.rs	/^impl fmt::Debug for FixedOffset {$/;"	c
FixedOffset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/fixed.rs	/^impl fmt::Display for FixedOffset {$/;"	c
FixedOffset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/fixed.rs	/^pub struct FixedOffset {$/;"	s
Float	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    Float(f64),$/;"	e	enum:Primitive
Float	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^pub trait Float: Num + Copy + NumCast + PartialOrd + Neg<Output = Self> {$/;"	i
Float	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/utils.rs	/^pub(crate) trait Float: Sized {$/;"	i
FloatAsSIMD	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/utils.rs	/^pub(crate) trait FloatAsSIMD: Sized {$/;"	i
FloatCore	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^pub trait FloatCore: Num + NumCast + Neg<Output = Self> + PartialOrd + Copy {$/;"	i
FloatErrorKind	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^pub enum FloatErrorKind {$/;"	g
FloatSIMDUtils	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/utils.rs	/^pub(crate) trait FloatSIMDUtils {$/;"	i
Fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/error.rs	/^    Fmt,$/;"	e	enum:Inner
FmtVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    impl<'a, 'b: 'a> Visitor for FmtVisitor<'a, 'b> {$/;"	c	module:fmt_support
FmtVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    struct FmtVisitor<'a, 'b: 'a>(&'a mut fmt::Formatter<'b>);$/;"	s	module:fmt_support
FoldWhile	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^impl<T> FoldWhile<T> {$/;"	c
FoldWhile	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^pub enum FoldWhile<T> {$/;"	g
FollowEpsilon	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/pikevm.rs	/^enum FollowEpsilon {$/;"	g
Format	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/format.rs	/^impl<'a, I> Format<'a, I>$/;"	c
Format	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/format.rs	/^pub struct Format<'a, I> {$/;"	s
FormatWith	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/format.rs	/^impl<'a, I, F> fmt::Display for FormatWith<'a, I, F>$/;"	c
FormatWith	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/format.rs	/^pub struct FormatWith<'a, I, F> {$/;"	s
FormatWrapped	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^            impl<'a, D: fmt::Debug> fmt::Display for FormatWrapped<'a, D> {$/;"	c	method:serde::DateTime::serialize
FormatWrapped	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^            struct FormatWrapped<'a, D: 'a> {$/;"	s	method:serde::DateTime::serialize
FormatWrapped	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^            impl<'a, D: fmt::Debug> fmt::Display for FormatWrapped<'a, D> {$/;"	c	method:serde::NaiveDate::serialize
FormatWrapped	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^            struct FormatWrapped<'a, D: 'a> {$/;"	s	method:serde::NaiveDate::serialize
FormatWrapped	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^            impl<'a, D: fmt::Debug> fmt::Display for FormatWrapped<'a, D> {$/;"	c	method:serde::NaiveDateTime::serialize
FormatWrapped	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^            struct FormatWrapped<'a, D: 'a> {$/;"	s	method:serde::NaiveDateTime::serialize
Formatter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/humantime/extern_impl.rs	/^impl Formatter {$/;"	c
Formatter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^impl Formatter {$/;"	c
Formatter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^impl Write for Formatter {$/;"	c
Formatter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^impl fmt::Debug for Formatter {$/;"	c
Formatter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^pub struct Formatter {$/;"	s
Formatter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^impl Formatter {$/;"	c
Found	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    Found,$/;"	e	enum:Status
FreqyPacked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    FreqyPacked(FreqyPacked),$/;"	e	enum:Matcher
FreqyPacked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^impl FreqyPacked {$/;"	c
FreqyPacked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^pub struct FreqyPacked {$/;"	s
Fri	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    Fri = 4,$/;"	e	enum:Weekday
FromPrimitive	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^pub trait FromPrimitive: Sized {$/;"	i
FromStrRadixErr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    type FromStrRadixErr = ParseComplexError<T::FromStrRadixErr>;$/;"	t	implementation:Complex
FromStrRadixErr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^    type FromStrRadixErr = T::FromStrRadixErr;$/;"	t
FromStrRadixErr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^    type FromStrRadixErr;$/;"	t	interface:Num
Fsm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^impl<'a> Fsm<'a> {$/;"	c
Fsm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^pub struct Fsm<'a> {$/;"	s
Fsm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/pikevm.rs	/^impl<'r, I: Input> Fsm<'r, I> {$/;"	c
Fsm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/pikevm.rs	/^pub struct Fsm<'r, I> {$/;"	s
FullPivLU	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs	/^impl<N: ComplexField, D: DimMin<D, Output = D>> FullPivLU<N, D, D>$/;"	c
FullPivLU	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs	/^impl<N: ComplexField, R: DimMin<C>, C: Dim> Copy for FullPivLU<N, R, C>$/;"	c
FullPivLU	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs	/^impl<N: ComplexField, R: DimMin<C>, C: Dim> FullPivLU<N, R, C>$/;"	c
FullPivLU	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs	/^pub struct FullPivLU<N: ComplexField, R: DimMin<C>, C: Dim>$/;"	s
FunctionalSequence	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/functional.rs	/^pub unsafe trait FunctionalSequence<T>: GenericSequence<T> {$/;"	i
GAVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/impl_serde.rs	/^impl<'de, T, N> Visitor<'de> for GAVisitor<T, N>$/;"	c
GAVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/impl_serde.rs	/^struct GAVisitor<T, N> {$/;"	s
GLex	/Users/williamcashman/Honours/Program/n_poly/src/polym.rs	/^impl<M: MultiIndexTrait> MonomialOrdering<M> for GLex {$/;"	c
GLex	/Users/williamcashman/Honours/Program/n_poly/src/polym.rs	/^pub struct GLex();$/;"	s
Gamma	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^impl Distribution<f64> for Gamma {$/;"	c
Gamma	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^impl Gamma {$/;"	c
Gamma	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^pub struct Gamma {$/;"	s
GammaLargeShape	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^impl Distribution<f64> for GammaLargeShape {$/;"	c
GammaLargeShape	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^impl GammaLargeShape {$/;"	c
GammaLargeShape	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^struct GammaLargeShape {$/;"	s
GammaRepr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^enum GammaRepr {$/;"	g
GammaSmallShape	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^impl Distribution<f64> for GammaSmallShape {$/;"	c
GammaSmallShape	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^impl GammaSmallShape {$/;"	c
GammaSmallShape	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^struct GammaSmallShape {$/;"	s
Gcd	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^pub trait Gcd<Rhs> {$/;"	i
Gcf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/operator_aliases.rs	/^pub type Gcf<A, B> = <A as Gcd<B>>::Output;$/;"	t
GenericArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/hex.rs	/^impl<T: ArrayLength<u8>> fmt::LowerHex for GenericArray<u8, T>$/;"	c
GenericArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/hex.rs	/^impl<T: ArrayLength<u8>> fmt::UpperHex for GenericArray<u8, T>$/;"	c
GenericArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/impl_serde.rs	/^impl<'de, T, N> Deserialize<'de> for GenericArray<T, N>$/;"	c
GenericArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/impl_serde.rs	/^impl<T, N> Serialize for GenericArray<T, N>$/;"	c
GenericArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/impls.rs	/^impl<T, N> AsMut<[T]> for GenericArray<T, N>$/;"	c
GenericArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/impls.rs	/^impl<T, N> AsRef<[T]> for GenericArray<T, N>$/;"	c
GenericArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/impls.rs	/^impl<T, N> Borrow<[T]> for GenericArray<T, N>$/;"	c
GenericArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/impls.rs	/^impl<T, N> BorrowMut<[T]> for GenericArray<T, N>$/;"	c
GenericArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/impls.rs	/^impl<T: Clone, N> Clone for GenericArray<T, N>$/;"	c
GenericArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/impls.rs	/^impl<T: Copy, N> Copy for GenericArray<T, N>$/;"	c
GenericArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/impls.rs	/^impl<T: Debug, N> Debug for GenericArray<T, N>$/;"	c
GenericArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/impls.rs	/^impl<T: Default, N> Default for GenericArray<T, N>$/;"	c
GenericArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/impls.rs	/^impl<T: Eq, N> Eq for GenericArray<T, N> where N: ArrayLength<T> {}$/;"	c
GenericArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/impls.rs	/^impl<T: Hash, N> Hash for GenericArray<T, N>$/;"	c
GenericArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/impls.rs	/^impl<T: Ord, N> Ord for GenericArray<T, N>$/;"	c
GenericArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/impls.rs	/^impl<T: PartialEq, N> PartialEq for GenericArray<T, N>$/;"	c
GenericArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/impls.rs	/^impl<T: PartialOrd, N> PartialOrd for GenericArray<T, N>$/;"	c
GenericArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/iter.rs	/^impl<T, N> IntoIterator for GenericArray<T, N>$/;"	c
GenericArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^impl<'a, T, N: ArrayLength<T>> From<&'a [T]> for &'a GenericArray<T, N> {$/;"	c
GenericArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^impl<'a, T, N: ArrayLength<T>> From<&'a mut [T]> for &'a mut GenericArray<T, N> {$/;"	c
GenericArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^impl<'a, T: 'a, N> IntoIterator for &'a GenericArray<T, N>$/;"	c
GenericArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^impl<'a, T: 'a, N> IntoIterator for &'a mut GenericArray<T, N>$/;"	c
GenericArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^impl<T, N> Deref for GenericArray<T, N>$/;"	c
GenericArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^impl<T, N> DerefMut for GenericArray<T, N>$/;"	c
GenericArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^impl<T, N> FromIterator<T> for GenericArray<T, N>$/;"	c
GenericArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^impl<T, N> GenericArray<T, N>$/;"	c
GenericArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^impl<T: Clone, N> GenericArray<T, N>$/;"	c
GenericArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^pub struct GenericArray<T, U: ArrayLength<T>> {$/;"	s
GenericArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^unsafe impl<T, N> FunctionalSequence<T> for GenericArray<T, N>$/;"	c
GenericArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^unsafe impl<T, N> GenericSequence<T> for GenericArray<T, N>$/;"	c
GenericArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^unsafe impl<T, U, N> MappedGenericSequence<T, U> for GenericArray<T, N>$/;"	c
GenericArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^unsafe impl<T: Send, N: ArrayLength<T>> Send for GenericArray<T, N> {}$/;"	c
GenericArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^unsafe impl<T: Sync, N: ArrayLength<T>> Sync for GenericArray<T, N> {}$/;"	c
GenericArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^unsafe impl<'a, T, N, K> Split<T, K> for &'a GenericArray<T, N>$/;"	c
GenericArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^unsafe impl<'a, T, N, K> Split<T, K> for &'a mut GenericArray<T, N>$/;"	c
GenericArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^unsafe impl<T, N, K> Split<T, K> for GenericArray<T, N>$/;"	c
GenericArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^unsafe impl<T, N, M> Concat<T, M> for GenericArray<T, N>$/;"	c
GenericArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^unsafe impl<T, N: ArrayLength<T>> Lengthen<T> for GenericArray<T, N>$/;"	c
GenericArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^unsafe impl<T, N: ArrayLength<T>> Shorten<T> for GenericArray<T, N>$/;"	c
GenericArrayImplEven	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^impl<T: Clone, U: Clone> Clone for GenericArrayImplEven<T, U> {$/;"	c
GenericArrayImplEven	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^impl<T: Copy, U: Copy> Copy for GenericArrayImplEven<T, U> {}$/;"	c
GenericArrayImplEven	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^pub struct GenericArrayImplEven<T, U> {$/;"	s
GenericArrayImplOdd	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^impl<T: Clone, U: Clone> Clone for GenericArrayImplOdd<T, U> {$/;"	c
GenericArrayImplOdd	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^impl<T: Copy, U: Copy> Copy for GenericArrayImplOdd<T, U> {}$/;"	c
GenericArrayImplOdd	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^pub struct GenericArrayImplOdd<T, U> {$/;"	s
GenericArrayIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/iter.rs	/^impl<T, N> DoubleEndedIterator for GenericArrayIter<T, N>$/;"	c
GenericArrayIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/iter.rs	/^impl<T, N> Drop for GenericArrayIter<T, N>$/;"	c
GenericArrayIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/iter.rs	/^impl<T, N> ExactSizeIterator for GenericArrayIter<T, N>$/;"	c
GenericArrayIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/iter.rs	/^impl<T, N> FusedIterator for GenericArrayIter<T, N>$/;"	c
GenericArrayIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/iter.rs	/^impl<T, N> GenericArrayIter<T, N>$/;"	c
GenericArrayIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/iter.rs	/^impl<T, N> Iterator for GenericArrayIter<T, N>$/;"	c
GenericArrayIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/iter.rs	/^impl<T: Clone, N> Clone for GenericArrayIter<T, N>$/;"	c
GenericArrayIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/iter.rs	/^impl<T: fmt::Debug, N> fmt::Debug for GenericArrayIter<T, N>$/;"	c
GenericArrayIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/iter.rs	/^pub struct GenericArrayIter<T, N: ArrayLength<T>> {$/;"	s
GenericSequence	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^pub unsafe trait GenericSequence<T>: Sized + IntoIterator {$/;"	i
Get	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^        impl<'k, 'kvs> Visitor<'kvs> for Get<'k, 'kvs> {$/;"	c	method:Source::get
Get	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^        struct Get<'k, 'v> {$/;"	s	method:Source::get
GetBit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^pub trait GetBit<I> {$/;"	i
GetBitOut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^pub type GetBitOut<N, I> = <N as GetBit<I>>::Output;$/;"	t
GivensRotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs	/^impl<N: ComplexField> GivensRotation<N> {$/;"	c
GivensRotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs	/^pub struct GivensRotation<N: ComplexField> {$/;"	s
Gr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/operator_aliases.rs	/^pub type Gr<A, B> = <A as IsGreater<B>>::Output;$/;"	t
GrEq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/operator_aliases.rs	/^pub type GrEq<A, B> = <A as IsGreaterOrEqual<B>>::Output;$/;"	t
Greater	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/lib.rs	/^impl Ord for Greater {$/;"	c
Greater	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/lib.rs	/^pub struct Greater;$/;"	s
Green	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    Green,$/;"	e	enum:Color
Group	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^impl<'a, K, I, F> Drop for Group<'a, K, I, F>$/;"	c
Group	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^impl<'a, K, I, F> Iterator for Group<'a, K, I, F>$/;"	c
Group	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^pub struct Group<'a, K: 'a, I: 'a, F: 'a>$/;"	s
Group	/Users/williamcashman/Honours/Program/n_poly/src/algebras/mod.rs	/^pub trait Group: Zero + Sized + Eq + Clone {$/;"	i
GroupBy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^impl<'a, K, I, F> IntoIterator for &'a GroupBy<K, I, F>$/;"	c
GroupBy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^impl<K, I, F> GroupBy<K, I, F>$/;"	c
GroupBy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^pub struct GroupBy<K, I, F>$/;"	s
GroupInner	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^impl<K, I, F> GroupInner<K, I, F>$/;"	c
GroupInner	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^struct GroupInner<K, I, F>$/;"	s
Groups	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^impl<'a, K, I, F> Iterator for Groups<'a, K, I, F>$/;"	c
Groups	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^pub struct Groups<'a, K: 'a, I: 'a, F: 'a>$/;"	s
HasCombination	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub trait HasCombination<I>: Sized {$/;"	i
HashMap	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^    impl<K, V, S> Source for HashMap<K, V, S>$/;"	c	module:std_support
HeadTail	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs	/^impl<I> Clone for HeadTail<I>$/;"	c
HeadTail	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs	/^impl<I> HeadTail<I>$/;"	c
HeadTail	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs	/^struct HeadTail<I>$/;"	s
Hessenberg	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs	/^impl<N: ComplexField, D: DimSub<U1>> Copy for Hessenberg<N, D>$/;"	c
Hessenberg	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs	/^impl<N: ComplexField, D: DimSub<U1>> Hessenberg<N, D>$/;"	c
Hessenberg	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs	/^pub struct Hessenberg<N: ComplexField, D: DimSub<U1>>$/;"	s
Hole	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^enum Hole {$/;"	g
HomogeneousTuple	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs	/^pub trait HomogeneousTuple$/;"	i
Hour	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    Hour,$/;"	e	enum:Numeric
Hour12	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    Hour12,$/;"	e	enum:Numeric
I	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga_derive-0.9.2/src/lib.rs	/^impl<A, B, C, D, I> Unzip4<A, B, C, D> for I$/;"	c
I	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^impl<I> IteratorRandom for I where I: Iterator + Sized {}$/;"	c
I64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/test.rs	/^    I64(i64),$/;"	e	enum:Token
IP	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/pikevm.rs	/^    IP(InstPtr),$/;"	e	enum:FollowEpsilon
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^impl Add<Id<Additive>> for Id<Additive> {$/;"	c
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^impl AddAssign<Id<Additive>> for Id<Additive> {$/;"	c
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^impl Div<Id> for Id {$/;"	c
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^impl DivAssign<Id> for Id {$/;"	c
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^impl Mul<Id> for Id {$/;"	c
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^impl MulAssign<Id> for Id {$/;"	c
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^impl One for Id {$/;"	c
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^impl Zero for Id<Additive> {$/;"	c
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^impl<O: Operator, T: PartialEq + Identity<O>> SubsetOf<T> for Id<O> {$/;"	c
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^impl<O: Operator> AbsDiffEq for Id<O> {$/;"	c
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^impl<O: Operator> AbstractGroup<O> for Id<O> {}$/;"	c
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^impl<O: Operator> AbstractGroupAbelian<O> for Id<O> {}$/;"	c
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^impl<O: Operator> AbstractLoop<O> for Id<O> {}$/;"	c
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^impl<O: Operator> AbstractMagma<O> for Id<O> {$/;"	c
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^impl<O: Operator> AbstractMonoid<O> for Id<O> {}$/;"	c
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^impl<O: Operator> AbstractQuasigroup<O> for Id<O> {}$/;"	c
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^impl<O: Operator> AbstractSemigroup<O> for Id<O> {}$/;"	c
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^impl<O: Operator> Clone for Id<O> {$/;"	c
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^impl<O: Operator> Copy for Id<O> {}$/;"	c
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^impl<O: Operator> Eq for Id<O> {}$/;"	c
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^impl<O: Operator> Id<O> {$/;"	c
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^impl<O: Operator> Identity<O> for Id<O> {$/;"	c
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^impl<O: Operator> JoinSemilattice for Id<O> {$/;"	c
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^impl<O: Operator> Lattice for Id<O> {}$/;"	c
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^impl<O: Operator> MeetSemilattice for Id<O> {$/;"	c
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^impl<O: Operator> PartialEq for Id<O> {$/;"	c
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^impl<O: Operator> PartialOrd for Id<O> {$/;"	c
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^impl<O: Operator> RelativeEq for Id<O> {$/;"	c
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^impl<O: Operator> TwoSidedInverse<O> for Id<O> {$/;"	c
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^impl<O: Operator> UlpsEq for Id<O> {$/;"	c
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^impl<O: Operator> fmt::Display for Id<O> {$/;"	c
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^pub struct Id<O: Operator = Multiplicative> {$/;"	s
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/id.rs	/^impl<E: EuclideanSpace> AffineTransformation<E> for Id {$/;"	c
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/id.rs	/^impl<E: EuclideanSpace> DirectIsometry<E> for Id {}$/;"	c
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/id.rs	/^impl<E: EuclideanSpace> Isometry<E> for Id {}$/;"	c
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/id.rs	/^impl<E: EuclideanSpace> OrthogonalTransformation<E> for Id {}$/;"	c
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/id.rs	/^impl<E: EuclideanSpace> ProjectiveTransformation<E> for Id {$/;"	c
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/id.rs	/^impl<E: EuclideanSpace> Rotation<E> for Id {$/;"	c
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/id.rs	/^impl<E: EuclideanSpace> Scaling<E> for Id {}$/;"	c
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/id.rs	/^impl<E: EuclideanSpace> Similarity<E> for Id {$/;"	c
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/id.rs	/^impl<E: EuclideanSpace> Transformation<E> for Id {$/;"	c
Id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/id.rs	/^impl<E: EuclideanSpace> Translation<E> for Id {$/;"	c
Ideal	/Users/williamcashman/Honours/Program/n_poly/src/ideals/groebner_basis.rs	/^impl<P: FPolyRing> Ideal<P> {$/;"	c
Ideal	/Users/williamcashman/Honours/Program/n_poly/src/ideals/mod.rs	/^impl<'a, P: PolyRing> Ideal<'a, P> {$/;"	c
Ideal	/Users/williamcashman/Honours/Program/n_poly/src/ideals/mod.rs	/^impl<'a, P: PolyRing> fmt::Display for Ideal<'a, P> {$/;"	c
Ideal	/Users/williamcashman/Honours/Program/n_poly/src/ideals/mod.rs	/^pub struct Ideal<'a, P: PolyRing> {$/;"	s
Identity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^pub trait Identity<O: Operator> {$/;"	i
Impossible	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    Impossible,$/;"	e	enum:ParseErrorKind
Inc	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/arr.rs	/^pub type Inc<T, U> = <U as AddLength<T, U1>>::Output;$/;"	t
IndentWrapper	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^                impl<'a, 'b> Write for IndentWrapper<'a, 'b> {$/;"	c	method:DefaultFormat::write_args
IndentWrapper	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^                struct IndentWrapper<'a, 'b: 'a> {$/;"	s	method:DefaultFormat::write_args
IndexVec	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^impl From<Vec<u32>> for IndexVec {$/;"	c
IndexVec	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^impl From<Vec<usize>> for IndexVec {$/;"	c
IndexVec	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^impl IndexVec {$/;"	c
IndexVec	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^impl PartialEq for IndexVec {$/;"	c
IndexVec	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^pub enum IndexVec {$/;"	g
IndexVecIntoIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^impl ExactSizeIterator for IndexVecIntoIter {}$/;"	c
IndexVecIntoIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^impl Iterator for IndexVecIntoIter {$/;"	c
IndexVecIntoIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^pub enum IndexVecIntoIter {$/;"	g
IndexVecIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^impl<'a> ExactSizeIterator for IndexVecIter<'a> {}$/;"	c
IndexVecIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^impl<'a> Iterator for IndexVecIter<'a> {$/;"	c
IndexVecIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^pub enum IndexVecIter<'a> {$/;"	g
Info	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    Info,$/;"	e	enum:Level
Info	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    Info,$/;"	e	enum:LevelFilter
Inner	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/error.rs	/^enum Inner {$/;"	g
Inner	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^impl<'v> Inner<'v> {$/;"	c
Inner	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^pub(super) enum Inner<'v> {$/;"	g
InnerSpace	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/vector.rs	/^pub trait InnerSpace: NormedSpace {$/;"	i
Input	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^pub trait Input: fmt::Debug {$/;"	i
InputAt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^impl InputAt {$/;"	c
InputAt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^pub struct InputAt {$/;"	s
Inst	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/backtrack.rs	/^    Inst { ip: InstPtr, at: InputAt },$/;"	e	enum:Job
Inst	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^impl Inst {$/;"	c
Inst	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^pub enum Inst {$/;"	g
InstBytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^impl InstBytes {$/;"	c
InstBytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^pub struct InstBytes {$/;"	s
InstChar	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^pub struct InstChar {$/;"	s
InstEmptyLook	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^pub struct InstEmptyLook {$/;"	s
InstHole	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^enum InstHole {$/;"	g
InstHole	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^impl InstHole {$/;"	c
InstPtr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^type InstPtr = u32;$/;"	t
InstPtr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^pub type InstPtr = usize;$/;"	t
InstPtrs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^impl<'a> Iterator for InstPtrs<'a> {$/;"	c
InstPtrs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^struct InstPtrs<'a> {$/;"	s
InstRanges	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^impl InstRanges {$/;"	c
InstRanges	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^pub struct InstRanges {$/;"	s
InstSave	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^pub struct InstSave {$/;"	s
InstSplit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^pub struct InstSplit {$/;"	s
Integer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/marker_traits.rs	/^pub trait Integer {$/;"	i
Interleave	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^impl<I, J> Iterator for Interleave<I, J>$/;"	c
Interleave	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub struct Interleave<I, J> {$/;"	s
InterleaveShortest	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^impl<I, J> Iterator for InterleaveShortest<I, J>$/;"	c
InterleaveShortest	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub struct InterleaveShortest<I, J>$/;"	s
Internal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    Internal(InternalFixed),$/;"	e	enum:Fixed
Internal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    Internal(InternalNumeric),$/;"	e	enum:Numeric
Internal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^impl InternalMarker for Internal {}$/;"	c
Internal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub(crate) enum Internal {}$/;"	g
InternalFixed	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^pub struct InternalFixed {$/;"	s
InternalInternal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^enum InternalInternal {$/;"	g
InternalMarker	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub trait InternalMarker {}$/;"	i
InternalNumeric	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^impl Clone for InternalNumeric {$/;"	c
InternalNumeric	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^impl Eq for InternalNumeric {$/;"	c
InternalNumeric	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^impl PartialEq for InternalNumeric {$/;"	c
InternalNumeric	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^impl fmt::Debug for InternalNumeric {$/;"	c
InternalNumeric	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^pub struct InternalNumeric {$/;"	s
Intersperse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/intersperse.rs	/^impl<I> Iterator for Intersperse<I>$/;"	c
Intersperse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/intersperse.rs	/^pub struct Intersperse<I>$/;"	s
IntoChunks	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^impl<'a, I> IntoIterator for &'a IntoChunks<I>$/;"	c
IntoChunks	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^impl<I> IntoChunks<I>$/;"	c
IntoChunks	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^pub struct IntoChunks<I>$/;"	s
IntoFloat	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/float.rs	/^pub trait IntoFloat {$/;"	i
IntoIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/iter.rs	/^    type IntoIter = GenericArrayIter<T, N>;$/;"	t
IntoIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    type IntoIter = slice::Iter<'a, T>;$/;"	t
IntoIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    type IntoIter = slice::IterMut<'a, T>;$/;"	t
IntoIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    type IntoIter = Chunks<'a, I>;$/;"	t
IntoIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    type IntoIter = Groups<'a, K, I, F>;$/;"	t
IntoIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs	/^    type IntoIter = RcIter<I>;$/;"	t
IntoIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^    type IntoIter = MatrixIter<'a, N, R, C, S>;$/;"	t	implementation:Matrix
IntoIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^    type IntoIter = MatrixIterMut<'a, N, R, C, S>;$/;"	t	implementation:Matrix
IntoIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    type IntoIter = slice::Iter<'a, Inst>;$/;"	t	implementation:Program
IntoIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/sparse.rs	/^    type IntoIter = slice::Iter<'a, usize>;$/;"	t	implementation:SparseSet
IntoIter	/Users/williamcashman/Honours/Program/n_poly/src/polym.rs	/^    type IntoIter = GenericArrayIter<usize, N>;$/;"	t	implementation:MultiIndex
Inv	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/inv.rs	/^pub trait Inv {$/;"	i
Invalid	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    Invalid,$/;"	e	enum:ParseErrorKind
Invalid	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^    Invalid,$/;"	e	enum:FloatErrorKind
InvalidProbability	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/bernoulli.rs	/^    InvalidProbability,$/;"	e	enum:BernoulliError
InvalidWeight	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/mod.rs	/^    InvalidWeight,$/;"	e	enum:WeightedError
InversibleSquareMatrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/matrix.rs	/^pub trait InversibleSquareMatrix: SquareMatrix + MultiplicativeGroup {}$/;"	i
Invert	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub trait Invert {$/;"	i
InvertOut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub type InvertOut<A> = <A as Invert>::Output;$/;"	t
InvertedUInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^impl<IU: InvertedUnsigned, B: Bit> Invert for InvertedUInt<IU, B>$/;"	c
InvertedUInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^impl<IU: InvertedUnsigned, B: Bit> InvertedUnsigned for InvertedUInt<IU, B> {$/;"	c
InvertedUInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^impl<IU: InvertedUnsigned> TrimTrailingZeros for InvertedUInt<IU, B0>$/;"	c
InvertedUInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^impl<IU: InvertedUnsigned> TrimTrailingZeros for InvertedUInt<IU, B1> {$/;"	c
InvertedUInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^impl<U: Unsigned, IU: InvertedUnsigned, B: Bit> PrivateInvert<U> for InvertedUInt<IU, B>$/;"	c
InvertedUInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub struct InvertedUInt<IU: InvertedUnsigned, B: Bit> {$/;"	s
InvertedUTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^impl Invert for InvertedUTerm {$/;"	c
InvertedUTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^impl InvertedUnsigned for InvertedUTerm {$/;"	c
InvertedUTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^impl TrimTrailingZeros for InvertedUTerm {$/;"	c
InvertedUTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^impl<U: Unsigned> PrivateInvert<U> for InvertedUTerm {$/;"	c
InvertedUTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub struct InvertedUTerm;$/;"	s
InvertedUnsigned	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub trait InvertedUnsigned {$/;"	i
Io	/Users/williamcashman/Honours/Program/n_poly/src/error.rs	/^    Io(io::Error),$/;"	e	enum:PolyErr
IsDynamic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^pub trait IsDynamic {}$/;"	i
IsEqual	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^pub trait IsEqual<Rhs = Self> {$/;"	i
IsEqualPrivate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub trait IsEqualPrivate<Rhs, Cmp> {$/;"	i
IsGreater	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^pub trait IsGreater<Rhs = Self> {$/;"	i
IsGreaterOrEqual	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^pub trait IsGreaterOrEqual<Rhs = Self> {$/;"	i
IsGreaterOrEqualPrivate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub trait IsGreaterOrEqualPrivate<Rhs, Cmp> {$/;"	i
IsGreaterPrivate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub trait IsGreaterPrivate<Rhs, Cmp> {$/;"	i
IsLess	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^pub trait IsLess<Rhs = Self> {$/;"	i
IsLessOrEqual	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^pub trait IsLessOrEqual<Rhs = Self> {$/;"	i
IsLessOrEqualPrivate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub trait IsLessOrEqualPrivate<Rhs, Cmp> {$/;"	i
IsLessPrivate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub trait IsLessPrivate<Rhs, Cmp> {$/;"	i
IsNotEqual	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^pub trait IsNotEqual<Rhs = Self> {$/;"	i
IsNotEqualPrivate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub trait IsNotEqualPrivate<Rhs, Cmp> {$/;"	i
IsNotStaticOne	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^pub trait IsNotStaticOne {}$/;"	i
IsoWeek	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    IsoWeek,$/;"	e	enum:Numeric
IsoWeek	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/isoweek.rs	/^impl IsoWeek {$/;"	c
IsoWeek	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/isoweek.rs	/^impl fmt::Debug for IsoWeek {$/;"	c
IsoWeek	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/isoweek.rs	/^pub struct IsoWeek {$/;"	s
IsoYear	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    IsoYear,$/;"	e	enum:Numeric
IsoYearDiv100	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    IsoYearDiv100,$/;"	e	enum:Numeric
IsoYearMod100	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    IsoYearMod100,$/;"	e	enum:Numeric
Isometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^pub trait Isometry<E: EuclideanSpace>: Similarity<E, Scaling = Id> {}$/;"	i
Isometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^impl<N, D, R> Abomonation for Isometry<N, D, R>$/;"	c
Isometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^impl<N: RealField + fmt::Display, D: DimName, R> fmt::Display for Isometry<N, D, R>$/;"	c
Isometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^impl<N: RealField, D: DimName, R> AbsDiffEq for Isometry<N, D, R>$/;"	c
Isometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^impl<N: RealField, D: DimName, R> RelativeEq for Isometry<N, D, R>$/;"	c
Isometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^impl<N: RealField, D: DimName, R> UlpsEq for Isometry<N, D, R>$/;"	c
Isometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^impl<N: Scalar + Copy, D: DimName + Copy, R: AbstractRotation<N, D> + Copy> Copy$/;"	c
Isometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^impl<N: Scalar + hash::Hash, D: DimName + hash::Hash, R: hash::Hash> hash::Hash$/;"	c
Isometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^impl<N: Scalar, D: DimName, R: AbstractRotation<N, D> + Clone> Clone for Isometry<N, D, R>$/;"	c
Isometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^impl<N: Scalar, D: DimName, R: AbstractRotation<N, D>> Isometry<N, D, R>$/;"	c
Isometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^impl<N: SimdRealField, D: DimName, R: AbstractRotation<N, D>> Isometry<N, D, R>$/;"	c
Isometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^impl<N: SimdRealField, D: DimName, R> Eq for Isometry<N, D, R>$/;"	c
Isometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^impl<N: SimdRealField, D: DimName, R> Isometry<N, D, R>$/;"	c
Isometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^impl<N: SimdRealField, D: DimName, R> PartialEq for Isometry<N, D, R>$/;"	c
Isometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^pub struct Isometry<N: Scalar, D: DimName, R>$/;"	s
Isometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alga.rs	/^impl<N: RealField + simba::scalar::RealField, D: DimName, R> AbstractMagma<Multiplicative>$/;"	c
Isometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alga.rs	/^impl<N: RealField + simba::scalar::RealField, D: DimName, R> AffineTransformation<Point<N, D>>$/;"	c
Isometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alga.rs	/^impl<N: RealField + simba::scalar::RealField, D: DimName, R> Identity<Multiplicative>$/;"	c
Isometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alga.rs	/^impl<N: RealField + simba::scalar::RealField, D: DimName, R> ProjectiveTransformation<Point<N, D/;"	c
Isometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alga.rs	/^impl<N: RealField + simba::scalar::RealField, D: DimName, R> Similarity<Point<N, D>>$/;"	c
Isometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alga.rs	/^impl<N: RealField + simba::scalar::RealField, D: DimName, R> Transformation<Point<N, D>>$/;"	c
Isometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alga.rs	/^impl<N: RealField + simba::scalar::RealField, D: DimName, R> TwoSidedInverse<Multiplicative>$/;"	c
Isometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs	/^impl<N, D: DimName, R> Arbitrary for Isometry<N, D, R>$/;"	c
Isometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs	/^impl<N: SimdRealField, D: DimName, R: AbstractRotation<N, D>> Isometry<N, D, R>$/;"	c
Isometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs	/^impl<N: SimdRealField, D: DimName, R: AbstractRotation<N, D>> One for Isometry<N, D, R>$/;"	c
Isometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs	/^impl<N: SimdRealField> Isometry<N, U2, Rotation2<N>>$/;"	c
Isometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs	/^impl<N: SimdRealField> Isometry<N, U2, UnitComplex<N>>$/;"	c
Isometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_conversion.rs	/^impl<N1, N2, D, R, C> SubsetOf<Transform<N2, D, C>> for Isometry<N1, D, R>$/;"	c
Isometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_conversion.rs	/^impl<N1, N2, D, R> SubsetOf<MatrixN<N2, DimNameSum<D, U1>>> for Isometry<N1, D, R>$/;"	c
Isometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_conversion.rs	/^impl<N1, N2, D: DimName, R1, R2> SubsetOf<Isometry<N2, D, R2>> for Isometry<N1, D, R1>$/;"	c
Isometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_conversion.rs	/^impl<N1, N2, D: DimName, R1, R2> SubsetOf<Similarity<N2, D, R2>> for Isometry<N1, D, R1>$/;"	c
Isometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_conversion.rs	/^impl<N: Scalar + PrimitiveSimdValue, D: DimName, R> From<[Isometry<N::Element, D, R::Element>; 1/;"	c
Isometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_conversion.rs	/^impl<N: Scalar + PrimitiveSimdValue, D: DimName, R> From<[Isometry<N::Element, D, R::Element>; 2/;"	c
Isometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_conversion.rs	/^impl<N: Scalar + PrimitiveSimdValue, D: DimName, R> From<[Isometry<N::Element, D, R::Element>; 4/;"	c
Isometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_conversion.rs	/^impl<N: Scalar + PrimitiveSimdValue, D: DimName, R> From<[Isometry<N::Element, D, R::Element>; 8/;"	c
Isometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_simba.rs	/^impl<N: SimdRealField, D: DimName, R> SimdValue for Isometry<N, D, R>$/;"	c
Isometry2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alias.rs	/^pub type Isometry2<N> = Isometry<N, U2, UnitComplex<N>>;$/;"	t
Isometry3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alias.rs	/^pub type Isometry3<N> = Isometry<N, U3, UnitQuaternion<N>>;$/;"	t
IsometryMatrix2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alias.rs	/^pub type IsometryMatrix2<N> = Isometry<N, U2, Rotation2<N>>;$/;"	t
IsometryMatrix3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alias.rs	/^pub type IsometryMatrix3<N> = Isometry<N, U3, Rotation3<N>>;$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    type Item = &'a T;$/;"	t	implementation:LRUListIterator
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^pub enum Item<'a> {$/;"	g
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/strftime.rs	/^    type Item = Item<'a>;$/;"	t	implementation:StrftimeItems
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/iter.rs	/^    type Item = T;$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    type Item = &'a T;$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    type Item = &'a mut T;$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    type Item = (I::Item, J::Item);$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    type Item = (I::Item,);$/;"	t	implementation:Tuple1Combination
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    type Item = A;$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    type Item = B;$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    type Item = I::Item;$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    type Item = R;$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    type Item = Result<U, E>;$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    type Item = T;$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    type Item = usize;$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^impl<I: Iterator> HasCombination<I> for (I::Item,) {$/;"	c
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs	/^    type Item = Vec<I::Item>;$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations.rs	/^    type Item = Vec<I::Item>;$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations_with_replacement.rs	/^    type Item = Vec<I::Item>;$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/exactly_one_err.rs	/^    type Item = I::Item;$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    type Item = (K, Group<'a, K, I, F>);$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    type Item = Chunk<'a, I>;$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    type Item = I::Item;$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/intersperse.rs	/^    type Item = I::Item;$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs	/^    type Item = I::Item;$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/merge_join.rs	/^    type Item = EitherOrBoth<I::Item, J::Item>;$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs	/^    type Item = I::Item;$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/pad_tail.rs	/^    type Item = I::Item;$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs	/^    type Item = I::Item;$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs	/^    type Item = Vec<I::Item>;$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs	/^    type Item = T;$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs	/^    type Item = I::Item;$/;"	t	implementation:PutBackN
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs	/^    type Item = A;$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs	/^    type Item = I::Item;$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/repeatn.rs	/^    type Item = A;$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs	/^    type Item = A;$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs	/^    type Item = St;$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tee.rs	/^    type Item = I::Item;$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs	/^    type Item = T::Item;$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs	/^    type Item = T;$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs	/^    type Item;$/;"	t	interface:TupleCollect
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs	/^    type Item = I::Item;$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs	/^    type Item = Position<I::Item>;$/;"	t	implementation:WithPosition
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_eq_impl.rs	/^    type Item = (I::Item, J::Item);$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_longest.rs	/^    type Item = EitherOrBoth<T::Item, U::Item>;$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^    type Item = &'a N;$/;"	t	implementation:Matrix
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^    type Item = &'a mut N;$/;"	t	implementation:Matrix
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^    type Item = MatrixSlice<'a, N, R, U1, S::RStride, S::CStride>;$/;"	t	implementation:ColumnIter
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^    type Item = MatrixSlice<'a, N, U1, C, S::RStride, S::CStride>;$/;"	t	implementation:RowIter
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^    type Item = MatrixSliceMut<'a, N, R, U1, S::RStride, S::CStride>;$/;"	t	implementation:ColumnIterMut
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^    type Item = MatrixSliceMut<'a, N, U1, C, S::RStride, S::CStride>;$/;"	t	implementation:RowIterMut
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    type Item = (usize, N);$/;"	t	implementation:ColumnEntries
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^    type Item = T;$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/reseeding.rs	/^    type Item = <R as BlockRngCore>::Item;$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^    type Item = usize;$/;"	t	implementation:IndexVecIntoIter
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^    type Item = usize;$/;"	t	implementation:IndexVecIter
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^        type Item = I::Item;$/;"	t	implementation:test::ChunkHintedIterator
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^        type Item = I::Item;$/;"	t	implementation:test::UnhintedIterator
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^        type Item = I::Item;$/;"	t	implementation:test::WindowHintedIterator
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^    type Item = &'a T;$/;"	t	implementation:SliceChooseIter
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^    type Item = T;$/;"	t	implementation:T
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^    type Item;$/;"	t	interface:SliceRandom
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    type Item = usize;$/;"	t	implementation:InstPtrs
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    type Item = &'a [u8];$/;"	t	implementation:LiteralIter
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    type Item = &'a Inst;$/;"	t	implementation:Program
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    type Item = &'t [u8];$/;"	t	implementation:Split
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    type Item = &'t [u8];$/;"	t	implementation:SplitN
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    type Item = Captures<'t>;$/;"	t	implementation:CaptureMatches
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    type Item = Match<'t>;$/;"	t	implementation:Matches
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    type Item = Option<&'r str>;$/;"	t	implementation:CaptureNames
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    type Item = Option<Match<'t>>;$/;"	t	implementation:SubCaptureMatches
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_trait.rs	/^    type Item = (usize, usize);$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_trait.rs	/^    type Item = Locations;$/;"	t
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_trait.rs	/^    type Item = Option<(usize, usize)>;$/;"	t	implementation:SubCapturesPosIter
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    type Item = &'t str;$/;"	t	implementation:Split
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    type Item = &'t str;$/;"	t	implementation:SplitN
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    type Item = Captures<'t>;$/;"	t	implementation:CaptureMatches
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    type Item = Match<'t>;$/;"	t	implementation:Matches
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    type Item = Option<&'r str>;$/;"	t	implementation:CaptureNames
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    type Item = Option<Match<'t>>;$/;"	t	implementation:SubCaptureMatches
Item	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/sparse.rs	/^    type Item = &'a usize;$/;"	t	implementation:SparseSet
Item	/Users/williamcashman/Honours/Program/n_poly/src/polym.rs	/^    type Item = usize;$/;"	t	implementation:MultiIndex
Iterate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs	/^impl<St, F> Iterator for Iterate<St, F>$/;"	c
Iterate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs	/^impl<St, F> fmt::Debug for Iterate<St, F>$/;"	c
Iterate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs	/^pub struct Iterate<St, F> {$/;"	s
IteratorRandom	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^pub trait IteratorRandom: Iterator + Sized {$/;"	i
Itertools	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^pub trait Itertools : Iterator {$/;"	i
Job	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/backtrack.rs	/^enum Job {$/;"	g
JoinSemilattice	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/lattice.rs	/^pub trait JoinSemilattice: Sized {$/;"	i
KMerge	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs	/^pub type KMerge<I> = KMergeBy<I, KMergeByLt>;$/;"	t
KMergeBy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs	/^impl<I, F> Clone for KMergeBy<I, F>$/;"	c
KMergeBy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs	/^impl<I, F> Iterator for KMergeBy<I, F>$/;"	c
KMergeBy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs	/^impl<I, F> fmt::Debug for KMergeBy<I, F>$/;"	c
KMergeBy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs	/^pub struct KMergeBy<I, F>$/;"	s
KMergeByLt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs	/^impl<T: PartialOrd> KMergePredicate<T> for KMergeByLt {$/;"	c
KMergeByLt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs	/^pub struct KMergeByLt;$/;"	s
KMergePredicate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs	/^pub trait KMergePredicate<T> {$/;"	i
Key	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    type Key = K;$/;"	t
Key	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    type Key = usize;$/;"	t	implementation:ChunkIndex
Key	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    type Key;$/;"	t	interface:KeyFunction
Key	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^impl<'k, 'ko> PartialEq<Key<'ko>> for Key<'k> {$/;"	c
Key	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^impl<'k, 'ko> PartialOrd<Key<'ko>> for Key<'k> {$/;"	c
Key	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^impl<'k> AsRef<str> for Key<'k> {$/;"	c
Key	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^impl<'k> Borrow<str> for Key<'k> {$/;"	c
Key	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^impl<'k> Eq for Key<'k> {}$/;"	c
Key	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^impl<'k> From<&'k str> for Key<'k> {$/;"	c
Key	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^impl<'k> Key<'k> {$/;"	c
Key	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^impl<'k> Ord for Key<'k> {$/;"	c
Key	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^impl<'k> ToKey for Key<'k> {$/;"	c
Key	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^impl<'k> fmt::Debug for Key<'k> {$/;"	c
Key	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^impl<'k> fmt::Display for Key<'k> {$/;"	c
Key	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^impl<'k> hash::Hash for Key<'k> {$/;"	c
Key	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^pub struct Key<'k> {$/;"	s
KeyFunction	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^trait KeyFunction<A> {$/;"	i
KeyValues	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^impl<'a> fmt::Debug for KeyValues<'a> {$/;"	c
KeyValues	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^struct KeyValues<'a>(&'a kv::Source);$/;"	s
Known	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs	/^    Known(usize),$/;"	e	enum:CompleteStateRemaining
LEVEL_PARSE_ERROR	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^static LEVEL_PARSE_ERROR: &'static str =$/;"	v
LOGGER	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^static mut LOGGER: &'static Log = &NopLogger;$/;"	v
LOG_LEVEL_NAMES	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^static LOG_LEVEL_NAMES: [&'static str; 6] = ["OFF", "ERROR", "WARN", "INFO", "DEBUG", "TRACE"];$/;"	v
LONG_MONTHS	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    static LONG_MONTHS: [&'static str; 12] =$/;"	v	function:format
LONG_MONTH_SUFFIXES	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/scan.rs	/^    static LONG_MONTH_SUFFIXES: [&'static str; 12] =$/;"	v	function:short_or_long_month0
LONG_WEEKDAYS	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    static LONG_WEEKDAYS: [&'static str; 7] =$/;"	v	function:format
LONG_WEEKDAY_SUFFIXES	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/scan.rs	/^    static LONG_WEEKDAY_SUFFIXES: [&'static str; 7] =$/;"	v	function:short_or_long_weekday
LOWER_CHARS	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/hex.rs	/^static LOWER_CHARS: &'static [u8] = b"0123456789abcdef";$/;"	v
LRUList	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^impl<T> LRUList<T> {$/;"	c
LRUList	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^struct LRUList<T> {$/;"	s
LRUListIterator	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^impl<'a, T> Iterator for LRUListIterator<'a, T> {$/;"	c
LRUListIterator	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^struct LRUListIterator<'a, T> {$/;"	s
LU	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs	/^impl<N: ComplexField, D: DimMin<D, Output = D>> LU<N, D, D>$/;"	c
LU	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs	/^impl<N: ComplexField, R: DimMin<C>, C: Dim> Copy for LU<N, R, C>$/;"	c
LU	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs	/^impl<N: ComplexField, R: DimMin<C>, C: Dim> LU<N, R, C>$/;"	c
LU	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs	/^pub struct LU<N: ComplexField, R: DimMin<C>, C: Dim>$/;"	s
Large	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    Large(GammaLargeShape),$/;"	e	enum:GammaRepr
Large	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^    Large {$/;"	e	enum:UniformDurationMode
Last	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs	/^    Last(T),$/;"	e	enum:Position
Lattice	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/lattice.rs	/^pub trait Lattice: MeetSemilattice + JoinSemilattice + PartialOrd {$/;"	i
LazyBuffer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lazy_buffer.rs	/^impl<I, J> Index<J> for LazyBuffer<I>$/;"	c
LazyBuffer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lazy_buffer.rs	/^impl<I> LazyBuffer<I>$/;"	c
LazyBuffer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lazy_buffer.rs	/^pub struct LazyBuffer<I: Iterator> {$/;"	s
Le	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/operator_aliases.rs	/^pub type Le<A, B> = <A as IsLess<B>>::Output;$/;"	t
LeEq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/operator_aliases.rs	/^pub type LeEq<A, B> = <A as IsLessOrEqual<B>>::Output;$/;"	t
Left	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs	/^    Left(A),$/;"	e	enum:EitherOrBoth
Len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^pub trait Len {$/;"	i
Length	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    type Length = N;$/;"	t
Length	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^    type Length = S::Length;$/;"	t
Length	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^    type Length: ArrayLength<T>;$/;"	t	interface:GenericSequence
Length	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    type Length = D;$/;"	t	implementation:RangeFull
Length	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    type Length = DimDiff<D, T>;$/;"	t
Length	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    type Length = Dynamic;$/;"	t	implementation:Range
Length	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    type Length = Dynamic;$/;"	t	implementation:RangeFrom
Length	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    type Length = Dynamic;$/;"	t	implementation:RangeInclusive
Length	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    type Length = Dynamic;$/;"	t	implementation:RangeTo
Length	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    type Length = Dynamic;$/;"	t	implementation:RangeToInclusive
Length	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    type Length = U1;$/;"	t	implementation:usize
Length	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    type Length: Dim;$/;"	t	interface:DimRange
Length	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/operator_aliases.rs	/^pub type Length<T> = <T as Len>::Output;$/;"	t
Lengthen	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^pub unsafe trait Lengthen<T>: Sized + GenericSequence<T> {$/;"	i
Less	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/lib.rs	/^impl Ord for Less {$/;"	c
Less	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/lib.rs	/^pub struct Less;$/;"	s
Level	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^impl Clone for Level {$/;"	c
Level	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^impl FromStr for Level {$/;"	c
Level	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^impl Level {$/;"	c
Level	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^impl Ord for Level {$/;"	c
Level	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^impl PartialEq for Level {$/;"	c
Level	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^impl PartialEq<LevelFilter> for Level {$/;"	c
Level	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^impl PartialOrd for Level {$/;"	c
Level	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^impl PartialOrd<LevelFilter> for Level {$/;"	c
Level	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^impl fmt::Display for Level {$/;"	c
Level	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^pub enum Level {$/;"	g
Level	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^impl Serialize for Level {$/;"	c
Level	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^impl<'de> Deserialize<'de> for Level {$/;"	c
LevelEnum	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^        impl<'de> Visitor<'de> for LevelEnum {$/;"	c	method:Level::deserialize
LevelEnum	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^        struct LevelEnum;$/;"	s	method:Level::deserialize
LevelFilter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^impl Clone for LevelFilter {$/;"	c
LevelFilter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^impl FromStr for LevelFilter {$/;"	c
LevelFilter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^impl LevelFilter {$/;"	c
LevelFilter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^impl Ord for LevelFilter {$/;"	c
LevelFilter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^impl PartialEq for LevelFilter {$/;"	c
LevelFilter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^impl PartialEq<Level> for LevelFilter {$/;"	c
LevelFilter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^impl PartialOrd for LevelFilter {$/;"	c
LevelFilter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^impl PartialOrd<Level> for LevelFilter {$/;"	c
LevelFilter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^impl fmt::Display for LevelFilter {$/;"	c
LevelFilter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^pub enum LevelFilter {$/;"	g
LevelFilter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^impl Serialize for LevelFilter {$/;"	c
LevelFilter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^impl<'de> Deserialize<'de> for LevelFilter {$/;"	c
LevelFilterEnum	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^        impl<'de> Visitor<'de> for LevelFilterEnum {$/;"	c	method:LevelFilter::deserialize
LevelFilterEnum	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^        struct LevelFilterEnum;$/;"	s	method:LevelFilter::deserialize
LevelFilterIdentifier	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^        impl<'de> DeserializeSeed<'de> for LevelFilterIdentifier {$/;"	c	method:LevelFilter::deserialize
LevelFilterIdentifier	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^        impl<'de> Visitor<'de> for LevelFilterIdentifier {$/;"	c	method:LevelFilter::deserialize
LevelFilterIdentifier	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^        struct LevelFilterIdentifier;$/;"	s	method:LevelFilter::deserialize
LevelIdentifier	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^        impl<'de> DeserializeSeed<'de> for LevelIdentifier {$/;"	c	method:Level::deserialize
LevelIdentifier	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^        impl<'de> Visitor<'de> for LevelIdentifier {$/;"	c	method:Level::deserialize
LevelIdentifier	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^        struct LevelIdentifier;$/;"	s	method:Level::deserialize
Lex	/Users/williamcashman/Honours/Program/n_poly/src/polym.rs	/^impl<M: MultiIndexTrait> MonomialOrdering<M> for Lex {$/;"	c
Lex	/Users/williamcashman/Honours/Program/n_poly/src/polym.rs	/^pub struct Lex();$/;"	s
ListEntry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^struct ListEntry<T> {$/;"	s
Literal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    Literal(&'a str),$/;"	e	enum:Item
Literal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    Literal(MatchLiteralType),$/;"	e	enum:MatchType
LiteralIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^impl<'a> Iterator for LiteralIter<'a> {$/;"	c
LiteralIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^pub enum LiteralIter<'a> {$/;"	g
LiteralSearcher	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^impl LiteralSearcher {$/;"	c
LiteralSearcher	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^pub struct LiteralSearcher {$/;"	s
LiteralSearcher	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/mod.rs	/^    impl LiteralSearcher {$/;"	c	module:imp
LiteralSearcher	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/mod.rs	/^    pub struct LiteralSearcher(());$/;"	s	module:imp
Local	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/local.rs	/^impl Local {$/;"	c
Local	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/local.rs	/^impl TimeZone for Local {$/;"	c
Local	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/local.rs	/^pub struct Local;$/;"	s
LocalResult	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^impl<T: fmt::Debug> LocalResult<T> {$/;"	c
LocalResult	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^impl<T> LocalResult<T> {$/;"	c
LocalResult	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^impl<Tz: TimeZone> LocalResult<Date<Tz>> {$/;"	c
LocalResult	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^pub enum LocalResult<T> {$/;"	g
Locations	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^pub type Locations = CaptureLocations;$/;"	t
Locations	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_trait.rs	/^impl Locations {$/;"	c
Locations	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_trait.rs	/^pub struct Locations(Vec<Slot>);$/;"	s
Locations	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^pub type Locations = CaptureLocations;$/;"	t
Log	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^pub trait Log: Sync + Send {$/;"	i
Log	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^static mut LOGGER: &'static Log = &NopLogger;$/;"	v
Log2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/operator_aliases.rs	/^pub type Log2<A> = <A as Logarithm2>::Output;$/;"	t
LogNormal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/normal.rs	/^impl Distribution<f64> for LogNormal {$/;"	c
LogNormal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/normal.rs	/^impl LogNormal {$/;"	c
LogNormal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/normal.rs	/^pub struct LogNormal {$/;"	s
Logarithm2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^pub trait Logarithm2 {$/;"	i
Logger	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    impl fmt::Debug for Logger {$/;"	c	module:std_fmt_impls
Logger	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^impl Log for Logger {$/;"	c
Logger	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^impl Logger {$/;"	c
Logger	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^pub struct Logger {$/;"	s
LongMonthName	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    LongMonthName,$/;"	e	enum:Fixed
LongWeekdayName	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    LongWeekdayName,$/;"	e	enum:Fixed
Longer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^    type Longer = GenericArray<T, Add1<N>>;$/;"	t
Longer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^    type Longer: Shorten<T, Shorter = Self>;$/;"	t	interface:Lengthen
Longer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/diff.rs	/^    Longer(usize, PutBack<J>),$/;"	e	enum:Diff
LowerAmPm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    LowerAmPm,$/;"	e	enum:Fixed
LpNorm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^impl<N: SimdComplexField> Norm<N> for LpNorm {$/;"	c
LpNorm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^pub struct LpNorm(pub i32);$/;"	s
M	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<M, N> PartialDiv<N> for M$/;"	c
MAX_LOG_LEVEL_FILTER	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^static MAX_LOG_LEVEL_FILTER: AtomicUsize = ATOMIC_USIZE_INIT;$/;"	v
MDL_TO_OL	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^static MDL_TO_OL: [i8; (MAX_MDL as usize + 1)] = [$/;"	v
Magenta	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    Magenta,$/;"	e	enum:Color
Many	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    Many(Vec<Hole>),$/;"	e	enum:Hole
MapInto	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^impl<I, R> DoubleEndedIterator for MapInto<I, R>$/;"	c
MapInto	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^impl<I, R> ExactSizeIterator for MapInto<I, R>$/;"	c
MapInto	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^impl<I, R> Iterator for MapInto<I, R>$/;"	c
MapInto	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub struct MapInto<I, R> {$/;"	s
MapResults	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^impl<I, F, T, U, E> Iterator for MapResults<I, F>$/;"	c
MapResults	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub struct MapResults<I, F> {$/;"	s
Mapped	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/functional.rs	/^    type Mapped = <S as MappedGenericSequence<T, U>>::Mapped;$/;"	t
Mapped	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/functional.rs	/^    type Mapped: GenericSequence<U, Length = Self::Length>;$/;"	t	interface:MappedGenericSequence
Mapped	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    type Mapped = GenericArray<U, N>;$/;"	t
MappedGenericSequence	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/functional.rs	/^pub unsafe trait MappedGenericSequence<T, U>: GenericSequence<T>$/;"	i
MappedSequence	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/functional.rs	/^pub type MappedSequence<S, T, U> =$/;"	t
Mask	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/utils.rs	/^    type Mask;$/;"	t	interface:FloatSIMDUtils
Match	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    Match(T),$/;"	e	enum:Result
Match	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    Match(usize),$/;"	e	enum:Inst
Match	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^impl<'t> Match<'t> {$/;"	c
Match	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^pub struct Match<'t> {$/;"	s
Match	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^impl<'t> Match<'t> {$/;"	c
Match	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^pub struct Match<'t> {$/;"	s
MatchLiteralType	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^enum MatchLiteralType {$/;"	g
MatchNfaType	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^enum MatchNfaType {$/;"	g
MatchType	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^enum MatchType {$/;"	g
Matcher	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^enum Matcher {$/;"	g
Matcher	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^impl Matcher {$/;"	c
Matches	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^impl<'r, 't> Iterator for Matches<'r, 't> {$/;"	c
Matches	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^pub struct Matches<'r, 't>(re_trait::Matches<'t, ExecNoSync<'r>>);$/;"	s
Matches	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_trait.rs	/^impl<'t, R> Iterator for Matches<'t, R>$/;"	c
Matches	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_trait.rs	/^impl<'t, R> Matches<'t, R>$/;"	c
Matches	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_trait.rs	/^pub struct Matches<'t, R>$/;"	s
Matches	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^impl<'r, 't> Iterator for Matches<'r, 't> {$/;"	c
Matches	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^pub struct Matches<'r, 't>(re_trait::Matches<'t, ExecNoSyncStr<'r>>);$/;"	s
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/matrix.rs	/^pub trait Matrix:$/;"	i
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^impl<N, R1: Dim, C1: Dim, S: StorageMut<N, R1, C1>> Matrix<N, R1, C1, S>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^impl<N, R: Dim, C: Dim, S: Storage<N, R, C>> Matrix<N, R, C, S>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^impl<N: ComplexField, R: Dim, C: Dim, S: Storage<N, R, C>> Matrix<N, R, C, S> {$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^impl<N: Scalar + PartialOrd + Signed, R: Dim, C: Dim, S: Storage<N, R, C>> Matrix<N, R, C, S> {$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs	/^impl<N, R: Dim, C: Dim, S: Storage<N, R, C>> Matrix<N, R, C, S>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs	/^impl<N: Scalar, R: Dim, C: Dim, S: Storage<N, R, C>> Matrix<N, R, C, S> {$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^impl<'a, N, C, RStride, CStride> From<MatrixSlice<'a, N, Dynamic, C, RStride, CStride>>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^impl<'a, N, C, RStride, CStride> From<MatrixSliceMut<'a, N, Dynamic, C, RStride, CStride>>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^impl<'a, N, R, C, RStride, CStride> From<MatrixSlice<'a, N, R, C, RStride, CStride>>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^impl<'a, N, R, C, RStride, CStride> From<MatrixSliceMut<'a, N, R, C, RStride, CStride>>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^impl<'a, N, R, RStride, CStride> From<MatrixSlice<'a, N, R, Dynamic, RStride, CStride>>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^impl<'a, N, R, RStride, CStride> From<MatrixSliceMut<'a, N, R, Dynamic, RStride, CStride>>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^impl<'a, N: Scalar + Copy, R: Dim, C: Dim, S: ContiguousStorage<N, R, C>> Into<&'a [N]>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^impl<'a, N: Scalar + Copy, R: Dim, C: Dim, S: ContiguousStorageMut<N, R, C>> Into<&'a mut [N]>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^impl<'a, N: Scalar, R: Dim, C: Dim, S: Storage<N, R, C>> IntoIterator for &'a Matrix<N, R, C, S>/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^impl<'a, N: Scalar, R: Dim, C: Dim, S: StorageMut<N, R, C>> IntoIterator$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^impl<N, R, S, RV, SV> Extend<Vector<N, RV, SV>> for Matrix<N, R, Dynamic, S>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^impl<N, R, S> Extend<N> for Matrix<N, R, Dynamic, S>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^impl<N, S> Extend<N> for Matrix<N, Dynamic, U1, S>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^impl<N: Scalar + Zero, R: Dim, C: Dim, S: Storage<N, R, C>> Matrix<N, R, C, S> {$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^impl<N: Scalar, D: Dim, S: StorageMut<N, D, D>> Matrix<N, D, D, S> {$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^impl<N: Scalar, R: Dim, C: Dim, S: Storage<N, R, C>> Matrix<N, R, C, S> {$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^impl<N: Scalar, R: Dim, C: Dim, S: StorageMut<N, R, C>> Matrix<N, R, C, S> {$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^impl<N: Scalar, R: Dim, C: Dim, S: Storage<N, R, C>> Matrix<N, R, C, S> {$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^impl<'de, N, R, C, S> Deserialize<'de> for Matrix<N, R, C, S>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^impl<N, R, C, S> Hash for Matrix<N, R, C, S>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^impl<N, R, C, S> Serialize for Matrix<N, R, C, S>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^impl<N, R, R2, C, C2, S, S2> PartialEq<Matrix<N, R2, C2, S2>> for Matrix<N, R, C, S>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^impl<N, R: Dim, C: Dim, S> AbsDiffEq for Matrix<N, R, C, S>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^impl<N, R: Dim, C: Dim, S> Eq for Matrix<N, R, C, S>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^impl<N, R: Dim, C: Dim, S> PartialOrd for Matrix<N, R, C, S>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^impl<N, R: Dim, C: Dim, S> RelativeEq for Matrix<N, R, C, S>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^impl<N, R: Dim, C: Dim, S> UlpsEq for Matrix<N, R, C, S>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^impl<N: Scalar + ClosedAdd + ClosedSub + ClosedMul, R: Dim, C: Dim, S: Storage<N, R, C>>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^impl<N: Scalar + Zero + One, D: DimAdd<U1> + IsNotStaticOne, S: Storage<N, D, D>>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^impl<N: Scalar, D: Dim, S: StorageMut<N, D, D>> Matrix<N, D, D, S> {$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^impl<N: Scalar, R: Dim, C: Dim, S: Abomonation> Abomonation for Matrix<N, R, C, S> {$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^impl<N: Scalar, R: Dim, C: Dim, S: ContiguousStorage<N, R, C>> Matrix<N, R, C, S> {$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^impl<N: Scalar, R: Dim, C: Dim, S: ContiguousStorageMut<N, R, C>> Matrix<N, R, C, S> {$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^impl<N: Scalar, R: Dim, C: Dim, S: Storage<N, R, C>> Matrix<N, R, C, S> {$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^impl<N: Scalar, R: Dim, C: Dim, S: StorageMut<N, R, C>> Matrix<N, R, C, S> {$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^impl<N: Scalar, R: Dim, C: Dim, S: fmt::Debug> fmt::Debug for Matrix<N, R, C, S> {$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^impl<N: Scalar, R: Dim, C: Dim, S> Matrix<N, R, C, S> {$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^impl<N: SimdComplexField, D: Dim, S: StorageMut<N, D, D>> Matrix<N, D, D, S> {$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^impl<N: SimdComplexField, R: Dim, C: Dim, S: Storage<N, R, C>> Matrix<N, R, C, S> {$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^impl<N: SimdComplexField, R: Dim, C: Dim, S: StorageMut<N, R, C>> Matrix<N, R, C, S> {$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^pub struct Matrix<N: Scalar, R: Dim, C: Dim, S> {$/;"	s
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^impl<N: Scalar, R: Dim, C: Dim, S: Storage<N, R, C>> Matrix<N, R, C, S> {$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^impl<N: Scalar, R: Dim, C: Dim, S: StorageMut<N, R, C>> Matrix<N, R, C, S> {$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^impl<N: ComplexField, R: Dim, C: Dim, S: Storage<N, R, C>> Matrix<N, R, C, S> {$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^impl<N: ComplexField, R: Dim, C: Dim, S: StorageMut<N, R, C>> Matrix<N, R, C, S> {$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^impl<N: SimdComplexField, R: Dim, C: Dim, S: Storage<N, R, C>> Matrix<N, R, C, S> {$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^impl<N: SimdComplexField, R: Dim, C: Dim, S: StorageMut<N, R, C>> Matrix<N, R, C, S> {$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^impl<'a, 'b, N, R1: Dim, C1: Dim, R2: Dim, C2: Dim, SA, SB> Mul<&'b Matrix<N, R2, C2, SB>>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^impl<'a, N, R1: Dim, C1: Dim, R2: Dim, C2: Dim, SA, SB> Mul<Matrix<N, R2, C2, SB>>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^impl<'a, N, R: Dim, C: Dim, S> Neg for &'a Matrix<N, R, C, S>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^impl<'b, N, R1, C1, R2, SA, SB> MulAssign<&'b Matrix<N, R2, C1, SB>> for Matrix<N, R1, C1, SA>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^impl<'b, N, R1: Dim, C1: Dim, R2: Dim, C2: Dim, SA, SB> Mul<&'b Matrix<N, R2, C2, SB>>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^impl<N, R1, C1, R2, SA, SB> MulAssign<Matrix<N, R2, C1, SB>> for Matrix<N, R1, C1, SA>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^impl<N, R1: Dim, C1: Dim, R2: Dim, C2: Dim, SA, SB> Mul<Matrix<N, R2, C2, SB>>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^impl<N, R1: Dim, C1: Dim, SA> Matrix<N, R1, C1, SA>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^impl<N, R: Dim, C: Dim, S> Index<(usize, usize)> for Matrix<N, R, C, S>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^impl<N, R: Dim, C: Dim, S> IndexMut<(usize, usize)> for Matrix<N, R, C, S>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^impl<N, R: Dim, C: Dim, S> Matrix<N, R, C, S>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^impl<N, R: Dim, C: Dim, S> Neg for Matrix<N, R, C, S>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^impl<N: Scalar + ClosedAdd, R: Dim, C: Dim, S: Storage<N, R, C>> Matrix<N, R, C, S> {$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^impl<N: Scalar, R: Dim, C: Dim, S: Storage<N, R, C>> Index<usize> for Matrix<N, R, C, S> {$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^impl<N: Scalar, R: Dim, C: Dim, S: Storage<N, R, C>> Matrix<N, R, C, S> {$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^impl<N: Scalar, R: Dim, C: Dim, S: StorageMut<N, R, C>> IndexMut<usize> for Matrix<N, R, C, S> {$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/properties.rs	/^impl<N: ComplexField, R: Dim, C: Dim, S: Storage<N, R, C>> Matrix<N, R, C, S> {$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/properties.rs	/^impl<N: Scalar, R: Dim, C: Dim, S: Storage<N, R, C>> Matrix<N, R, C, S> {$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs	/^impl<N: Scalar + ClosedAdd + Zero, R: Dim, C: Dim, S: Storage<N, R, C>> Matrix<N, R, C, S> {$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs	/^impl<N: Scalar + Field + SupersetOf<f64>, R: Dim, C: Dim, S: Storage<N, R, C>> Matrix<N, R, C, S/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs	/^impl<N: Scalar, R: Dim, C: Dim, S: Storage<N, R, C>> Matrix<N, R, C, S> {$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs	/^impl<N: ComplexField, R: DimMin<C>, C: Dim, S: Storage<N, R, C>> Matrix<N, R, C, S>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs	/^impl<N: ComplexField, R: DimMin<C>, C: Dim, S: Storage<N, R, C>> Matrix<N, R, C, S>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs	/^impl<N: ComplexField, R: DimMin<C>, C: Dim, S: Storage<N, R, C>> Matrix<N, R, C, S>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs	/^impl<N: ComplexField, R: DimMin<C>, C: Dim, S: Storage<N, R, C>> Matrix<N, R, C, S>$/;"	c
Matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs	/^impl<N: ComplexField, R: DimMin<C>, C: Dim, S: Storage<N, R, C>> Matrix<N, R, C, S>$/;"	c
Matrix1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Matrix1<N> = MatrixN<N, U1>;$/;"	t
Matrix1x2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Matrix1x2<N> = MatrixMN<N, U1, U2>;$/;"	t
Matrix1x3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Matrix1x3<N> = MatrixMN<N, U1, U3>;$/;"	t
Matrix1x4	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Matrix1x4<N> = MatrixMN<N, U1, U4>;$/;"	t
Matrix1x5	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Matrix1x5<N> = MatrixMN<N, U1, U5>;$/;"	t
Matrix1x6	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Matrix1x6<N> = MatrixMN<N, U1, U6>;$/;"	t
Matrix2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Matrix2<N> = MatrixN<N, U2>;$/;"	t
Matrix2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^impl<N: RealField> From<Rotation2<N>> for Matrix2<N> {$/;"	c
Matrix2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs	/^impl<N: SimdRealField> From<UnitComplex<N>> for Matrix2<N>$/;"	c
Matrix2x1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Matrix2x1<N> = MatrixMN<N, U2, U1>;$/;"	t
Matrix2x3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Matrix2x3<N> = MatrixMN<N, U2, U3>;$/;"	t
Matrix2x4	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Matrix2x4<N> = MatrixMN<N, U2, U4>;$/;"	t
Matrix2x5	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Matrix2x5<N> = MatrixMN<N, U2, U5>;$/;"	t
Matrix2x6	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Matrix2x6<N> = MatrixMN<N, U2, U6>;$/;"	t
Matrix3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Matrix3<N> = MatrixN<N, U3>;$/;"	t
Matrix3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs	/^impl<N: RealField> Matrix3<N> {$/;"	c
Matrix3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^impl<N: SimdRealField> From<UnitQuaternion<N>> for Matrix3<N>$/;"	c
Matrix3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^impl<N: RealField> From<Rotation2<N>> for Matrix3<N> {$/;"	c
Matrix3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^impl<N: RealField> From<Rotation3<N>> for Matrix3<N> {$/;"	c
Matrix3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs	/^impl<N: SimdRealField> From<UnitComplex<N>> for Matrix3<N>$/;"	c
Matrix3x1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Matrix3x1<N> = MatrixMN<N, U3, U1>;$/;"	t
Matrix3x2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Matrix3x2<N> = MatrixMN<N, U3, U2>;$/;"	t
Matrix3x4	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Matrix3x4<N> = MatrixMN<N, U3, U4>;$/;"	t
Matrix3x5	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Matrix3x5<N> = MatrixMN<N, U3, U5>;$/;"	t
Matrix3x6	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Matrix3x6<N> = MatrixMN<N, U3, U6>;$/;"	t
Matrix4	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Matrix4<N> = MatrixN<N, U4>;$/;"	t
Matrix4	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs	/^impl<N: RealField> Matrix4<N> {$/;"	c
Matrix4	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^impl<N: RealField> From<Orthographic3<N>> for Matrix4<N> {$/;"	c
Matrix4	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^impl<N: RealField> From<Perspective3<N>> for Matrix4<N> {$/;"	c
Matrix4	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^impl<N: SimdRealField> From<UnitQuaternion<N>> for Matrix4<N>$/;"	c
Matrix4	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^impl<N: RealField> From<Rotation3<N>> for Matrix4<N> {$/;"	c
Matrix4x1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Matrix4x1<N> = MatrixMN<N, U4, U1>;$/;"	t
Matrix4x2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Matrix4x2<N> = MatrixMN<N, U4, U2>;$/;"	t
Matrix4x3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Matrix4x3<N> = MatrixMN<N, U4, U3>;$/;"	t
Matrix4x5	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Matrix4x5<N> = MatrixMN<N, U4, U5>;$/;"	t
Matrix4x6	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Matrix4x6<N> = MatrixMN<N, U4, U6>;$/;"	t
Matrix5	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Matrix5<N> = MatrixN<N, U5>;$/;"	t
Matrix5x1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Matrix5x1<N> = MatrixMN<N, U5, U1>;$/;"	t
Matrix5x2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Matrix5x2<N> = MatrixMN<N, U5, U2>;$/;"	t
Matrix5x3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Matrix5x3<N> = MatrixMN<N, U5, U3>;$/;"	t
Matrix5x4	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Matrix5x4<N> = MatrixMN<N, U5, U4>;$/;"	t
Matrix5x6	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Matrix5x6<N> = MatrixMN<N, U5, U6>;$/;"	t
Matrix6	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Matrix6<N> = MatrixN<N, U6>;$/;"	t
Matrix6x1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Matrix6x1<N> = MatrixMN<N, U6, U1>;$/;"	t
Matrix6x2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Matrix6x2<N> = MatrixMN<N, U6, U2>;$/;"	t
Matrix6x3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Matrix6x3<N> = MatrixMN<N, U6, U3>;$/;"	t
Matrix6x4	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Matrix6x4<N> = MatrixMN<N, U6, U4>;$/;"	t
Matrix6x5	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Matrix6x5<N> = MatrixMN<N, U6, U5>;$/;"	t
MatrixArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^pub type MatrixArray<N, R, C> = ArrayStorage<N, R, C>;$/;"	t
MatrixComponentOp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs	/^pub type MatrixComponentOp<N, R1, C1, R2, C2> = MatrixSum<N, R1, C1, R2, C2>;$/;"	t
MatrixCross	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^pub type MatrixCross<N, R1, C1, R2, C2> =$/;"	t
MatrixIndex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^pub trait MatrixIndex<'a, N: Scalar, R: Dim, C: Dim, S: Storage<N, R, C>>: Sized {$/;"	i
MatrixIndexMut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^pub trait MatrixIndexMut<'a, N: Scalar, R: Dim, C: Dim, S: StorageMut<N, R, C>>:$/;"	i
MatrixMN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type MatrixMN<N, R, C> = Matrix<N, R, C, Owned<N, R, C>>;$/;"	t
MatrixMN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^impl<N, R, C> Arbitrary for MatrixMN<N, R, C>$/;"	c
MatrixMN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^impl<N, R: DimName, C: DimName> Bounded for MatrixMN<N, R, C>$/;"	c
MatrixMN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^impl<N, R: DimName, C: DimName> Zero for MatrixMN<N, R, C>$/;"	c
MatrixMN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^impl<N: Scalar, R: Dim, C: Dim> MatrixMN<N, R, C>$/;"	c
MatrixMN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^impl<N1, N2, R1, C1, R2, C2> SubsetOf<MatrixMN<N2, R2, C2>> for MatrixMN<N1, R1, C1>$/;"	c
MatrixMN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^impl<N: Scalar + PrimitiveSimdValue, R: Dim, C: Dim> From<[MatrixMN<N::Element, R, C>; 16]>$/;"	c
MatrixMN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^impl<N: Scalar + PrimitiveSimdValue, R: Dim, C: Dim> From<[MatrixMN<N::Element, R, C>; 2]>$/;"	c
MatrixMN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^impl<N: Scalar + PrimitiveSimdValue, R: Dim, C: Dim> From<[MatrixMN<N::Element, R, C>; 4]>$/;"	c
MatrixMN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^impl<N: Scalar + PrimitiveSimdValue, R: Dim, C: Dim> From<[MatrixMN<N::Element, R, C>; 8]>$/;"	c
MatrixMN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^impl<N: Scalar, C: Dim> MatrixMN<N, Dynamic, C>$/;"	c
MatrixMN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^impl<N: Scalar, R: Dim> MatrixMN<N, R, Dynamic>$/;"	c
MatrixMN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^impl<$/;"	c
MatrixMN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^impl<N, R: Dim, C: Dim> JoinSemilattice for MatrixMN<N, R, C>$/;"	c
MatrixMN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^impl<N, R: Dim, C: Dim> Lattice for MatrixMN<N, R, C>$/;"	c
MatrixMN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^impl<N, R: Dim, C: Dim> MeetSemilattice for MatrixMN<N, R, C>$/;"	c
MatrixMN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^impl<N, R: DimName, C: DimName> AbstractMagma<Additive> for MatrixMN<N, R, C>$/;"	c
MatrixMN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^impl<N, R: DimName, C: DimName> AbstractModule for MatrixMN<N, R, C>$/;"	c
MatrixMN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^impl<N, R: DimName, C: DimName> FiniteDimVectorSpace for MatrixMN<N, R, C>$/;"	c
MatrixMN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^impl<N, R: DimName, C: DimName> Identity<Additive> for MatrixMN<N, R, C>$/;"	c
MatrixMN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^impl<N, R: DimName, C: DimName> Module for MatrixMN<N, R, C>$/;"	c
MatrixMN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^impl<N, R: DimName, C: DimName> TwoSidedInverse<Additive> for MatrixMN<N, R, C>$/;"	c
MatrixMN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^impl<N, R: DimName, C: DimName> VectorSpace for MatrixMN<N, R, C>$/;"	c
MatrixMN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_simba.rs	/^impl<N, R, C> SimdValue for MatrixMN<N, R, C>$/;"	c
MatrixMN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^impl<N: SimdComplexField, R: Dim, C: Dim> Normed for MatrixMN<N, R, C>$/;"	c
MatrixMN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^impl<'a, N, C: Dim> iter::Sum<&'a MatrixMN<N, Dynamic, C>> for MatrixMN<N, Dynamic, C>$/;"	c
MatrixMN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^impl<'a, N, R: DimName, C: DimName> iter::Sum<&'a MatrixMN<N, R, C>> for MatrixMN<N, R, C>$/;"	c
MatrixMN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^impl<N, C: Dim> iter::Sum for MatrixMN<N, Dynamic, C>$/;"	c
MatrixMN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^impl<N, R: DimName, C: DimName> iter::Sum for MatrixMN<N, R, C>$/;"	c
MatrixMN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_conversion.rs	/^impl<'a, N: Scalar + Zero, R: Dim, C: Dim, S> From<CsMatrix<N, R, C, S>> for MatrixMN<N, R, C>$/;"	c
MatrixMarketParser	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/io/matrix_market.rs	/^struct MatrixMarketParser;$/;"	s
MatrixN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type MatrixN<N, D> = MatrixMN<N, D, D>;$/;"	t
MatrixN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs	/^impl<N, D: DimName> MatrixN<N, D>$/;"	c
MatrixN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^impl<N, D: Dim> MatrixN<N, D>$/;"	c
MatrixN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^impl<N, D: DimName> One for MatrixN<N, D>$/;"	c
MatrixN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^impl<N, D: DimName> AbstractMagma<Multiplicative> for MatrixN<N, D>$/;"	c
MatrixN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^impl<N, D: DimName> Identity<Multiplicative> for MatrixN<N, D>$/;"	c
MatrixN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^impl<'a, N, D: DimName> iter::Product<&'a MatrixN<N, D>> for MatrixN<N, D>$/;"	c
MatrixN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^impl<N, D: DimName> iter::Product for MatrixN<N, D>$/;"	c
MatrixN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_conversion.rs	/^impl<N: SimdRealField, D: DimName, R> From<Isometry<N, D, R>> for MatrixN<N, DimNameSum<D, U1>>$/;"	c
MatrixN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_conversion.rs	/^impl<N: SimdRealField, D: DimName, R> From<Similarity<N, D, R>> for MatrixN<N, DimNameSum<D, U1>/;"	c
MatrixN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_conversion.rs	/^impl<N: RealField, D: DimName, C> From<Transform<N, D, C>> for MatrixN<N, DimNameSum<D, U1>>$/;"	c
MatrixN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs	/^impl<N: Scalar + Zero + One, D: DimName> From<Translation<N, D>> for MatrixN<N, DimNameSum<D, U1/;"	c
MatrixNM	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type MatrixNM<N, R, C> = Matrix<N, R, C, Owned<N, R, C>>;$/;"	t
MatrixSlice	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^impl<'a, N, R, C, RSlice, CSlice, RStride, CStride, S> From<&'a Matrix<N, R, C, S>>$/;"	c
MatrixSlice	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^impl<'a, N, R, C, RSlice, CSlice, RStride, CStride, S> From<&'a mut Matrix<N, R, C, S>>$/;"	c
MatrixSlice	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^impl<'a, N, R, C, RStride, CStride> From<MatrixSliceMut<'a, N, R, C, RStride, CStride>>$/;"	c
MatrixSlice1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice1<'a, N, RStride = U1, CStride = U1> =$/;"	t
MatrixSlice1x2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice1x2<'a, N, RStride = U1, CStride = U1> =$/;"	t
MatrixSlice1x3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice1x3<'a, N, RStride = U1, CStride = U1> =$/;"	t
MatrixSlice1x4	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice1x4<'a, N, RStride = U1, CStride = U1> =$/;"	t
MatrixSlice1x5	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice1x5<'a, N, RStride = U1, CStride = U1> =$/;"	t
MatrixSlice1x6	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice1x6<'a, N, RStride = U1, CStride = U1> =$/;"	t
MatrixSlice1xX	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice1xX<'a, N, RStride = U1, CStride = U1> =$/;"	t
MatrixSlice2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice2<'a, N, RStride = U1, CStride = U2> =$/;"	t
MatrixSlice2x1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice2x1<'a, N, RStride = U1, CStride = U2> =$/;"	t
MatrixSlice2x3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice2x3<'a, N, RStride = U1, CStride = U2> =$/;"	t
MatrixSlice2x4	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice2x4<'a, N, RStride = U1, CStride = U2> =$/;"	t
MatrixSlice2x5	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice2x5<'a, N, RStride = U1, CStride = U2> =$/;"	t
MatrixSlice2x6	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice2x6<'a, N, RStride = U1, CStride = U2> =$/;"	t
MatrixSlice2xX	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice2xX<'a, N, RStride = U1, CStride = U2> =$/;"	t
MatrixSlice3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice3<'a, N, RStride = U1, CStride = U3> =$/;"	t
MatrixSlice3x1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice3x1<'a, N, RStride = U1, CStride = U3> =$/;"	t
MatrixSlice3x2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice3x2<'a, N, RStride = U1, CStride = U3> =$/;"	t
MatrixSlice3x4	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice3x4<'a, N, RStride = U1, CStride = U3> =$/;"	t
MatrixSlice3x5	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice3x5<'a, N, RStride = U1, CStride = U3> =$/;"	t
MatrixSlice3x6	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice3x6<'a, N, RStride = U1, CStride = U3> =$/;"	t
MatrixSlice3xX	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice3xX<'a, N, RStride = U1, CStride = U3> =$/;"	t
MatrixSlice4	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice4<'a, N, RStride = U1, CStride = U4> =$/;"	t
MatrixSlice4x1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice4x1<'a, N, RStride = U1, CStride = U4> =$/;"	t
MatrixSlice4x2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice4x2<'a, N, RStride = U1, CStride = U4> =$/;"	t
MatrixSlice4x3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice4x3<'a, N, RStride = U1, CStride = U4> =$/;"	t
MatrixSlice4x5	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice4x5<'a, N, RStride = U1, CStride = U4> =$/;"	t
MatrixSlice4x6	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice4x6<'a, N, RStride = U1, CStride = U4> =$/;"	t
MatrixSlice4xX	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice4xX<'a, N, RStride = U1, CStride = U4> =$/;"	t
MatrixSlice5	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice5<'a, N, RStride = U1, CStride = U5> =$/;"	t
MatrixSlice5x1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice5x1<'a, N, RStride = U1, CStride = U5> =$/;"	t
MatrixSlice5x2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice5x2<'a, N, RStride = U1, CStride = U5> =$/;"	t
MatrixSlice5x3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice5x3<'a, N, RStride = U1, CStride = U5> =$/;"	t
MatrixSlice5x4	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice5x4<'a, N, RStride = U1, CStride = U5> =$/;"	t
MatrixSlice5x6	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice5x6<'a, N, RStride = U1, CStride = U5> =$/;"	t
MatrixSlice5xX	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice5xX<'a, N, RStride = U1, CStride = U5> =$/;"	t
MatrixSlice6	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice6<'a, N, RStride = U1, CStride = U6> =$/;"	t
MatrixSlice6x1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice6x1<'a, N, RStride = U1, CStride = U6> =$/;"	t
MatrixSlice6x2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice6x2<'a, N, RStride = U1, CStride = U6> =$/;"	t
MatrixSlice6x3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice6x3<'a, N, RStride = U1, CStride = U6> =$/;"	t
MatrixSlice6x4	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice6x4<'a, N, RStride = U1, CStride = U6> =$/;"	t
MatrixSlice6x5	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice6x5<'a, N, RStride = U1, CStride = U6> =$/;"	t
MatrixSlice6xX	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSlice6xX<'a, N, RStride = U1, CStride = U6> =$/;"	t
MatrixSliceMN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMN<'a, N, R, C, RStride = U1, CStride = R> =$/;"	t
MatrixSliceMN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs	/^impl<'a, N: Scalar, R: Dim, C: Dim, RStride: Dim, CStride: Dim>$/;"	c
MatrixSliceMN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs	/^impl<'a, N: Scalar, R: Dim, C: Dim> MatrixSliceMN<'a, N, R, C> {$/;"	c
MatrixSliceMut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^impl<'a, N, R, C, RSlice, CSlice, RStride, CStride, S> From<&'a mut Matrix<N, R, C, S>>$/;"	c
MatrixSliceMut1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut1<'a, N, RStride = U1, CStride = U1> =$/;"	t
MatrixSliceMut1x2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut1x2<'a, N, RStride = U1, CStride = U1> =$/;"	t
MatrixSliceMut1x3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut1x3<'a, N, RStride = U1, CStride = U1> =$/;"	t
MatrixSliceMut1x4	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut1x4<'a, N, RStride = U1, CStride = U1> =$/;"	t
MatrixSliceMut1x5	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut1x5<'a, N, RStride = U1, CStride = U1> =$/;"	t
MatrixSliceMut1x6	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut1x6<'a, N, RStride = U1, CStride = U1> =$/;"	t
MatrixSliceMut1xX	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut1xX<'a, N, RStride = U1, CStride = U1> =$/;"	t
MatrixSliceMut2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut2<'a, N, RStride = U1, CStride = U2> =$/;"	t
MatrixSliceMut2x1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut2x1<'a, N, RStride = U1, CStride = U2> =$/;"	t
MatrixSliceMut2x3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut2x3<'a, N, RStride = U1, CStride = U2> =$/;"	t
MatrixSliceMut2x4	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut2x4<'a, N, RStride = U1, CStride = U2> =$/;"	t
MatrixSliceMut2x5	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut2x5<'a, N, RStride = U1, CStride = U2> =$/;"	t
MatrixSliceMut2x6	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut2x6<'a, N, RStride = U1, CStride = U2> =$/;"	t
MatrixSliceMut2xX	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut2xX<'a, N, RStride = U1, CStride = U2> =$/;"	t
MatrixSliceMut3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut3<'a, N, RStride = U1, CStride = U3> =$/;"	t
MatrixSliceMut3x1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut3x1<'a, N, RStride = U1, CStride = U3> =$/;"	t
MatrixSliceMut3x2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut3x2<'a, N, RStride = U1, CStride = U3> =$/;"	t
MatrixSliceMut3x4	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut3x4<'a, N, RStride = U1, CStride = U3> =$/;"	t
MatrixSliceMut3x5	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut3x5<'a, N, RStride = U1, CStride = U3> =$/;"	t
MatrixSliceMut3x6	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut3x6<'a, N, RStride = U1, CStride = U3> =$/;"	t
MatrixSliceMut3xX	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut3xX<'a, N, RStride = U1, CStride = U3> =$/;"	t
MatrixSliceMut4	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut4<'a, N, RStride = U1, CStride = U4> =$/;"	t
MatrixSliceMut4x1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut4x1<'a, N, RStride = U1, CStride = U4> =$/;"	t
MatrixSliceMut4x2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut4x2<'a, N, RStride = U1, CStride = U4> =$/;"	t
MatrixSliceMut4x3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut4x3<'a, N, RStride = U1, CStride = U4> =$/;"	t
MatrixSliceMut4x5	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut4x5<'a, N, RStride = U1, CStride = U4> =$/;"	t
MatrixSliceMut4x6	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut4x6<'a, N, RStride = U1, CStride = U4> =$/;"	t
MatrixSliceMut4xX	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut4xX<'a, N, RStride = U1, CStride = U4> =$/;"	t
MatrixSliceMut5	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut5<'a, N, RStride = U1, CStride = U5> =$/;"	t
MatrixSliceMut5x1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut5x1<'a, N, RStride = U1, CStride = U5> =$/;"	t
MatrixSliceMut5x2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut5x2<'a, N, RStride = U1, CStride = U5> =$/;"	t
MatrixSliceMut5x3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut5x3<'a, N, RStride = U1, CStride = U5> =$/;"	t
MatrixSliceMut5x4	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut5x4<'a, N, RStride = U1, CStride = U5> =$/;"	t
MatrixSliceMut5x6	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut5x6<'a, N, RStride = U1, CStride = U5> =$/;"	t
MatrixSliceMut5xX	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut5xX<'a, N, RStride = U1, CStride = U5> =$/;"	t
MatrixSliceMut6	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut6<'a, N, RStride = U1, CStride = U6> =$/;"	t
MatrixSliceMut6x1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut6x1<'a, N, RStride = U1, CStride = U6> =$/;"	t
MatrixSliceMut6x2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut6x2<'a, N, RStride = U1, CStride = U6> =$/;"	t
MatrixSliceMut6x3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut6x3<'a, N, RStride = U1, CStride = U6> =$/;"	t
MatrixSliceMut6x4	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut6x4<'a, N, RStride = U1, CStride = U6> =$/;"	t
MatrixSliceMut6x5	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut6x5<'a, N, RStride = U1, CStride = U6> =$/;"	t
MatrixSliceMut6xX	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMut6xX<'a, N, RStride = U1, CStride = U6> =$/;"	t
MatrixSliceMutMN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMutMN<'a, N, R, C, RStride = U1, CStride = R> =$/;"	t
MatrixSliceMutMN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs	/^impl<'a, N: Scalar, R: Dim, C: Dim, RStride: Dim, CStride: Dim>$/;"	c
MatrixSliceMutMN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs	/^impl<'a, N: Scalar, R: Dim, C: Dim> MatrixSliceMutMN<'a, N, R, C> {$/;"	c
MatrixSliceMutN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMutN<'a, N, D, RStride = U1, CStride = D> =$/;"	t
MatrixSliceMutXx1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMutXx1<'a, N, RStride = U1, CStride = Dynamic> =$/;"	t
MatrixSliceMutXx2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMutXx2<'a, N, RStride = U1, CStride = Dynamic> =$/;"	t
MatrixSliceMutXx3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMutXx3<'a, N, RStride = U1, CStride = Dynamic> =$/;"	t
MatrixSliceMutXx4	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMutXx4<'a, N, RStride = U1, CStride = Dynamic> =$/;"	t
MatrixSliceMutXx5	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMutXx5<'a, N, RStride = U1, CStride = Dynamic> =$/;"	t
MatrixSliceMutXx6	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceMutXx6<'a, N, RStride = U1, CStride = Dynamic> =$/;"	t
MatrixSliceN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceN<'a, N, D, RStride = U1, CStride = D> =$/;"	t
MatrixSliceXx1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceXx1<'a, N, RStride = U1, CStride = Dynamic> =$/;"	t
MatrixSliceXx2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceXx2<'a, N, RStride = U1, CStride = Dynamic> =$/;"	t
MatrixSliceXx3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceXx3<'a, N, RStride = U1, CStride = Dynamic> =$/;"	t
MatrixSliceXx4	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceXx4<'a, N, RStride = U1, CStride = Dynamic> =$/;"	t
MatrixSliceXx5	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceXx5<'a, N, RStride = U1, CStride = Dynamic> =$/;"	t
MatrixSliceXx6	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type MatrixSliceXx6<'a, N, RStride = U1, CStride = Dynamic> =$/;"	t
MatrixSum	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^pub type MatrixSum<N, R1, C1, R2, C2> =$/;"	t
MatrixVec	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^pub type MatrixVec<N, R, C> = VecStorage<N, R, C>;$/;"	t
Max	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^pub trait Max<Rhs = Self> {$/;"	i
Maximum	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/operator_aliases.rs	/^pub type Maximum<A, B> = <A as Max<B>>::Output;$/;"	t
MaybeInst	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^enum MaybeInst {$/;"	g
MaybeInst	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^impl MaybeInst {$/;"	c
MaybeStaticStr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^enum MaybeStaticStr<'a> {$/;"	g
MaybeStaticStr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^impl<'a> MaybeStaticStr<'a> {$/;"	c
Mdf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^impl Mdf {$/;"	c
Mdf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^impl fmt::Debug for Mdf {$/;"	c
Mdf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^pub struct Mdf(pub u32);$/;"	s
Medium	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^    Medium {$/;"	e	enum:UniformDurationMode
MeetSemilattice	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/lattice.rs	/^pub trait MeetSemilattice: Sized {$/;"	i
Merge	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub type Merge<I, J> = MergeBy<I, J, MergeLte>;$/;"	t
MergeBy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^impl<I, J, F> Clone for MergeBy<I, J, F>$/;"	c
MergeBy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^impl<I, J, F> Iterator for MergeBy<I, J, F>$/;"	c
MergeBy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^impl<I, J, F> fmt::Debug for MergeBy<I, J, F>$/;"	c
MergeBy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub struct MergeBy<I, J, F>$/;"	s
MergeJoinBy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/merge_join.rs	/^impl<I, J, F> Clone for MergeJoinBy<I, J, F>$/;"	c
MergeJoinBy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/merge_join.rs	/^impl<I, J, F> Iterator for MergeJoinBy<I, J, F>$/;"	c
MergeJoinBy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/merge_join.rs	/^impl<I, J, F> fmt::Debug for MergeJoinBy<I, J, F>$/;"	c
MergeJoinBy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/merge_join.rs	/^pub struct MergeJoinBy<I: Iterator, J: Iterator, F> {$/;"	s
MergeLte	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^impl<T: PartialOrd> MergePredicate<T> for MergeLte {$/;"	c
MergeLte	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub struct MergeLte;$/;"	s
MergePredicate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub trait MergePredicate<T> {$/;"	i
Metadata	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^impl<'a> Metadata<'a> {$/;"	c
Metadata	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^pub struct Metadata<'a> {$/;"	s
MetadataBuilder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^impl<'a> MetadataBuilder<'a> {$/;"	c
MetadataBuilder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^pub struct MetadataBuilder<'a> {$/;"	s
Micros	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    Micros,$/;"	e	enum:SecondsFormat
Micros	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    Micros,$/;"	e	enum:TimestampPrecision
MidIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs	/^    MidIter { on_first_iter: bool },$/;"	e	enum:MultiProductIterState
Middle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs	/^    Middle(T),$/;"	e	enum:Position
MilliSecondsTimestampVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^        impl<'de> de::Visitor<'de> for MilliSecondsTimestampVisitor {$/;"	c	module:serde::ts_milliseconds
MilliSecondsTimestampVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    pub struct MilliSecondsTimestampVisitor;$/;"	s	module:serde
Millis	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    Millis,$/;"	e	enum:SecondsFormat
Millis	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    Millis,$/;"	e	enum:TimestampPrecision
Min	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^pub trait Min<Rhs = Self> {$/;"	i
MinMax	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs	/^    MinMax(T, T)$/;"	e	enum:MinMaxResult
MinMaxResult	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs	/^impl<T: Clone> MinMaxResult<T> {$/;"	c
MinMaxResult	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs	/^pub enum MinMaxResult<T> {$/;"	g
Minimum	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/operator_aliases.rs	/^pub type Minimum<A, B> = <A as Min<B>>::Output;$/;"	t
Minute	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    Minute,$/;"	e	enum:Numeric
Mod	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/operator_aliases.rs	/^pub type Mod<A, B> = <A as Rem<B>>::Output;$/;"	t
Module	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/specialized.rs	/^pub trait Module:$/;"	i
Mon	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    Mon = 0,$/;"	e	enum:Weekday
MonomialIdeal	/Users/williamcashman/Honours/Program/n_poly/src/ideals/mod.rs	/^impl<'a, 'b, P: FPolyRing> MonomialIdeal<'a, 'b, P> {$/;"	c
MonomialIdeal	/Users/williamcashman/Honours/Program/n_poly/src/ideals/mod.rs	/^pub struct MonomialIdeal<'a, 'b, P: FPolyRing> {$/;"	s
MonomialOrdering	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^pub trait MonomialOrdering<I: Variate>: Clone + Eq {$/;"	i
Month	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    Month,$/;"	e	enum:Numeric
Msg	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/error.rs	/^    Msg(&'static str),$/;"	e	enum:Inner
MulAdd	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/mul_add.rs	/^pub trait MulAdd<A = Self, B = Self> {$/;"	i
MulAddAssign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/mul_add.rs	/^pub trait MulAddAssign<A = Self, B = Self> {$/;"	i
MultiIndex	/Users/williamcashman/Honours/Program/n_poly/src/polym.rs	/^impl<N: VarNumber + Debug> MultiIndexTrait for MultiIndex<N> {$/;"	c
MultiIndex	/Users/williamcashman/Honours/Program/n_poly/src/polym.rs	/^impl<N: VarNumber> FromIterator<usize> for MultiIndex<N> {$/;"	c
MultiIndex	/Users/williamcashman/Honours/Program/n_poly/src/polym.rs	/^impl<N: VarNumber> IntoIterator for MultiIndex<N> {$/;"	c
MultiIndex	/Users/williamcashman/Honours/Program/n_poly/src/polym.rs	/^impl<N: VarNumber> MultiIndex<N> {$/;"	c
MultiIndex	/Users/williamcashman/Honours/Program/n_poly/src/polym.rs	/^impl<N: VarNumber> Variate for MultiIndex<N> {$/;"	c
MultiIndex	/Users/williamcashman/Honours/Program/n_poly/src/polym.rs	/^impl<N: VarNumber> Zero for MultiIndex<N> {$/;"	c
MultiIndex	/Users/williamcashman/Honours/Program/n_poly/src/polym.rs	/^pub struct MultiIndex<N: VarNumber> {$/;"	s
MultiIndexTrait	/Users/williamcashman/Honours/Program/n_poly/src/polym.rs	/^pub trait MultiIndexTrait: Variate {$/;"	i
MultiPeek	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs	/^impl<I: Iterator> MultiPeek<I> {$/;"	c
MultiPeek	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs	/^impl<I> ExactSizeIterator for MultiPeek<I>$/;"	c
MultiPeek	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs	/^impl<I> Iterator for MultiPeek<I>$/;"	c
MultiPeek	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs	/^impl<I> MultiPeek<I>$/;"	c
MultiPeek	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs	/^impl<I> PeekingNext for MultiPeek<I>$/;"	c
MultiPeek	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs	/^pub struct MultiPeek<I>$/;"	s
MultiProduct	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs	/^impl<I> Iterator for MultiProduct<I>$/;"	c
MultiProduct	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs	/^impl<I> MultiProduct<I>$/;"	c
MultiProduct	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs	/^pub struct MultiProduct<I>(Vec<MultiProductIter<I>>)$/;"	s
MultiProductIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs	/^impl<I> MultiProductIter<I>$/;"	c
MultiProductIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs	/^struct MultiProductIter<I>$/;"	s
MultiProductIterState	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs	/^enum MultiProductIterState {$/;"	g
Multiplicative	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/operator.rs	/^impl Operator for Multiplicative {$/;"	c
Multiplicative	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/operator.rs	/^pub struct Multiplicative;$/;"	s
MyF32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^        impl SampleUniform for MyF32 {$/;"	c	function:tests::test_custom_uniform
MyF32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^        struct MyF32 {$/;"	s	function:tests::test_custom_uniform
MyFromStr	/Users/williamcashman/Honours/Program/n_poly/src/parse.rs	/^pub trait MyFromStr<P: PolyRing>: Sized {$/;"	i
N	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<N, I, B> SetBit<I, B> for N$/;"	c
N	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<N> Logarithm2 for N$/;"	c
N	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<N> SquareRoot for N$/;"	c
N	/Users/williamcashman/Honours/Program/n_poly/src/polym.rs	/^    type N = N;$/;"	t	implementation:MultiIndex
N	/Users/williamcashman/Honours/Program/n_poly/src/polym.rs	/^    type N: VarNumber;$/;"	t	interface:MultiIndexTrait
N1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/arr.rs	/^impl<T, N1, N2> AddLength<T, N2> for N1$/;"	c
N1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U: Unsigned> Pow<NInt<UInt<U, B0>>> for N1 {$/;"	c
N1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U: Unsigned> Pow<NInt<UInt<U, B1>>> for N1 {$/;"	c
NInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^impl<U> Mul<ATerm> for NInt<U>$/;"	c
NInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^impl<V, A, U> Mul<TArr<V, A>> for NInt<U>$/;"	c
NInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<Nl: Unsigned + NonZero, Nr: Cmp<Nl> + Unsigned + NonZero> Cmp<NInt<Nr>> for NInt<Nl> {$/;"	c
NInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<P: Unsigned + NonZero, N: Unsigned + NonZero> Cmp<PInt<P>> for NInt<N> {$/;"	c
NInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U1, U2> Gcd<NInt<U2>> for NInt<U1>$/;"	c
NInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U1, U2> Gcd<PInt<U2>> for NInt<U1>$/;"	c
NInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U: Unsigned + NonZero> Add<Z0> for NInt<U> {$/;"	c
NInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U: Unsigned + NonZero> Cmp<Z0> for NInt<U> {$/;"	c
NInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U: Unsigned + NonZero> Integer for NInt<U> {$/;"	c
NInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U: Unsigned + NonZero> Mul<Z0> for NInt<U> {$/;"	c
NInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U: Unsigned + NonZero> NInt<U> {$/;"	c
NInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U: Unsigned + NonZero> Neg for NInt<U> {$/;"	c
NInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U: Unsigned + NonZero> NonZero for NInt<U> {}$/;"	c
NInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U: Unsigned + NonZero> Pow<Z0> for NInt<U> {$/;"	c
NInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U: Unsigned + NonZero> Sub<Z0> for NInt<U> {$/;"	c
NInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U> Gcd<Z0> for NInt<U>$/;"	c
NInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U> Max<Z0> for NInt<U>$/;"	c
NInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U> Min<Z0> for NInt<U>$/;"	c
NInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<Ul, Ur> Max<NInt<Ur>> for NInt<Ul>$/;"	c
NInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<Ul, Ur> Max<PInt<Ur>> for NInt<Ul>$/;"	c
NInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<Ul, Ur> Min<NInt<Ur>> for NInt<Ul>$/;"	c
NInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<Ul, Ur> Min<PInt<Ur>> for NInt<Ul>$/;"	c
NInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<Ul: Unsigned + NonZero, Ur: Unsigned + NonZero> Add<NInt<Ur>> for NInt<Ul>$/;"	c
NInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<Ul: Unsigned + NonZero, Ur: Unsigned + NonZero> Add<PInt<Ur>> for NInt<Ul>$/;"	c
NInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<Ul: Unsigned + NonZero, Ur: Unsigned + NonZero> Mul<NInt<Ur>> for NInt<Ul>$/;"	c
NInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<Ul: Unsigned + NonZero, Ur: Unsigned + NonZero> Mul<PInt<Ur>> for NInt<Ul>$/;"	c
NInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<Ul: Unsigned + NonZero, Ur: Unsigned + NonZero> Sub<NInt<Ur>> for NInt<Ul>$/;"	c
NInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<Ul: Unsigned + NonZero, Ur: Unsigned + NonZero> Sub<PInt<Ur>> for NInt<Ul>$/;"	c
NInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<Ul: Unsigned + NonZero, Ur: Unsigned> Pow<PInt<UInt<Ur, B0>>> for NInt<Ul>$/;"	c
NInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<Ul: Unsigned + NonZero, Ur: Unsigned> Pow<PInt<UInt<Ur, B1>>> for NInt<Ul>$/;"	c
NInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^pub struct NInt<U: Unsigned + NonZero> {$/;"	s
NInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^impl<U: Unsigned + NonZero> Abs for NInt<U> {$/;"	c
NOP	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^            static NOP: NopLogger = NopLogger;$/;"	v	function:logger
NaiveDate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    impl Decodable for NaiveDate {$/;"	c	module:rustc_serialize
NaiveDate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    impl Encodable for NaiveDate {$/;"	c	module:rustc_serialize
NaiveDate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    impl ser::Serialize for NaiveDate {$/;"	c	module:serde
NaiveDate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    impl<'de> de::Deserialize<'de> for NaiveDate {$/;"	c	module:serde
NaiveDate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^impl Add<OldDuration> for NaiveDate {$/;"	c
NaiveDate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^impl AddAssign<OldDuration> for NaiveDate {$/;"	c
NaiveDate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^impl Datelike for NaiveDate {$/;"	c
NaiveDate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^impl NaiveDate {$/;"	c
NaiveDate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^impl Sub<NaiveDate> for NaiveDate {$/;"	c
NaiveDate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^impl Sub<OldDuration> for NaiveDate {$/;"	c
NaiveDate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^impl SubAssign<OldDuration> for NaiveDate {$/;"	c
NaiveDate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^impl fmt::Debug for NaiveDate {$/;"	c
NaiveDate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^impl fmt::Display for NaiveDate {$/;"	c
NaiveDate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^impl str::FromStr for NaiveDate {$/;"	c
NaiveDate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^pub struct NaiveDate {$/;"	s
NaiveDateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    impl Decodable for NaiveDateTime {$/;"	c	module:rustc_serialize
NaiveDateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    impl Encodable for NaiveDateTime {$/;"	c	module:rustc_serialize
NaiveDateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    impl From<TsSeconds> for NaiveDateTime {$/;"	c	module:rustc_serialize
NaiveDateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    impl ser::Serialize for NaiveDateTime {$/;"	c	module:serde
NaiveDateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    impl<'de> de::Deserialize<'de> for NaiveDateTime {$/;"	c	module:serde
NaiveDateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^impl Add<OldDuration> for NaiveDateTime {$/;"	c
NaiveDateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^impl AddAssign<OldDuration> for NaiveDateTime {$/;"	c
NaiveDateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^impl Datelike for NaiveDateTime {$/;"	c
NaiveDateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^impl NaiveDateTime {$/;"	c
NaiveDateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^impl Sub<NaiveDateTime> for NaiveDateTime {$/;"	c
NaiveDateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^impl Sub<OldDuration> for NaiveDateTime {$/;"	c
NaiveDateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^impl SubAssign<OldDuration> for NaiveDateTime {$/;"	c
NaiveDateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^impl Timelike for NaiveDateTime {$/;"	c
NaiveDateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^impl fmt::Debug for NaiveDateTime {$/;"	c
NaiveDateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^impl fmt::Display for NaiveDateTime {$/;"	c
NaiveDateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^impl hash::Hash for NaiveDateTime {$/;"	c
NaiveDateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^impl str::FromStr for NaiveDateTime {$/;"	c
NaiveDateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^pub struct NaiveDateTime {$/;"	s
NaiveDateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/fixed.rs	/^impl Add<FixedOffset> for NaiveDateTime {$/;"	c
NaiveDateTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/fixed.rs	/^impl Sub<FixedOffset> for NaiveDateTime {$/;"	c
NaiveDateTimeFromMilliSecondsVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^        impl<'de> de::Visitor<'de> for NaiveDateTimeFromMilliSecondsVisitor {$/;"	c	module:serde::ts_milliseconds
NaiveDateTimeFromMilliSecondsVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^        struct NaiveDateTimeFromMilliSecondsVisitor;$/;"	s	module:serde::ts_milliseconds
NaiveDateTimeFromNanoSecondsVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^        impl<'de> de::Visitor<'de> for NaiveDateTimeFromNanoSecondsVisitor {$/;"	c	module:serde::ts_nanoseconds
NaiveDateTimeFromNanoSecondsVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^        struct NaiveDateTimeFromNanoSecondsVisitor;$/;"	s	module:serde::ts_nanoseconds
NaiveDateTimeFromSecondsVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^        impl<'de> de::Visitor<'de> for NaiveDateTimeFromSecondsVisitor {$/;"	c	module:serde::ts_seconds
NaiveDateTimeFromSecondsVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^        struct NaiveDateTimeFromSecondsVisitor;$/;"	s	module:serde::ts_seconds
NaiveDateTimeVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    impl<'de> de::Visitor<'de> for NaiveDateTimeVisitor {$/;"	c	module:serde
NaiveDateTimeVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    struct NaiveDateTimeVisitor;$/;"	s	module:serde
NaiveDateVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    impl<'de> de::Visitor<'de> for NaiveDateVisitor {$/;"	c	module:serde
NaiveDateVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    struct NaiveDateVisitor;$/;"	s	module:serde
NaiveTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    impl Decodable for NaiveTime {$/;"	c	module:rustc_serialize
NaiveTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    impl Encodable for NaiveTime {$/;"	c	module:rustc_serialize
NaiveTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    impl ser::Serialize for NaiveTime {$/;"	c	module:serde
NaiveTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    impl<'de> de::Deserialize<'de> for NaiveTime {$/;"	c	module:serde
NaiveTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^impl Add<OldDuration> for NaiveTime {$/;"	c
NaiveTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^impl AddAssign<OldDuration> for NaiveTime {$/;"	c
NaiveTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^impl NaiveTime {$/;"	c
NaiveTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^impl Sub<NaiveTime> for NaiveTime {$/;"	c
NaiveTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^impl Sub<OldDuration> for NaiveTime {$/;"	c
NaiveTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^impl SubAssign<OldDuration> for NaiveTime {$/;"	c
NaiveTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^impl Timelike for NaiveTime {$/;"	c
NaiveTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^impl fmt::Debug for NaiveTime {$/;"	c
NaiveTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^impl fmt::Display for NaiveTime {$/;"	c
NaiveTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^impl hash::Hash for NaiveTime {$/;"	c
NaiveTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^impl str::FromStr for NaiveTime {$/;"	c
NaiveTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^pub struct NaiveTime {$/;"	s
NaiveTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/fixed.rs	/^impl Add<FixedOffset> for NaiveTime {$/;"	c
NaiveTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/fixed.rs	/^impl Sub<FixedOffset> for NaiveTime {$/;"	c
NaiveTimeVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    impl<'de> de::Visitor<'de> for NaiveTimeVisitor {$/;"	c	module:serde
NaiveTimeVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    struct NaiveTimeVisitor;$/;"	s	module:serde
Name	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^    type Name = Self;$/;"	t	implementation:UInt
Name	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^    type Name = U1;$/;"	t	implementation:U1
Name	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^    type Name = UInt<U, B>;$/;"	t	implementation:UInt
Name	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^    type Name: DimName<Value = Self>;$/;"	t	interface:NamedDim
Named	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/expand.rs	/^    Named(&'a str),$/;"	e	enum:Ref
NamedDim	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^pub trait NamedDim: Sized + Any + Unsigned {$/;"	i
NanoSecondsTimestampVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^        impl<'de> de::Visitor<'de> for NanoSecondsTimestampVisitor {$/;"	c	module:serde::ts_nanoseconds
NanoSecondsTimestampVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    pub struct NanoSecondsTimestampVisitor;$/;"	s	module:serde
Nanos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    Nanos,$/;"	e	enum:SecondsFormat
Nanos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    Nanos,$/;"	e	enum:TimestampPrecision
Nanosecond	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    Nanosecond,$/;"	e	enum:Fixed
Nanosecond	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    Nanosecond,$/;"	e	enum:Numeric
Nanosecond3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    Nanosecond3,$/;"	e	enum:Fixed
Nanosecond3NoDot	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    Nanosecond3NoDot,$/;"	e	enum:InternalInternal
Nanosecond6	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    Nanosecond6,$/;"	e	enum:Fixed
Nanosecond6NoDot	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    Nanosecond6NoDot,$/;"	e	enum:InternalInternal
Nanosecond9	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    Nanosecond9,$/;"	e	enum:Fixed
Nanosecond9NoDot	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    Nanosecond9NoDot,$/;"	e	enum:InternalInternal
Negate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/operator_aliases.rs	/^pub type Negate<A> = <A as Neg>::Output;$/;"	t
Never	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^    Never,$/;"	e	enum:WriteStyle
Nfa	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    Nfa(MatchNfaType),$/;"	e	enum:MatchType
NoElements	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs	/^    NoElements,$/;"	e	enum:MinMaxResult
NoExpand	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^impl<'t> Replacer for NoExpand<'t> {$/;"	c
NoExpand	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^pub struct NoExpand<'t>(pub &'t [u8]);$/;"	s
NoExpand	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^impl<'t> Replacer for NoExpand<'t> {$/;"	c
NoExpand	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^pub struct NoExpand<'t>(pub &'t str);$/;"	s
NoItem	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/mod.rs	/^    NoItem,$/;"	e	enum:WeightedError
NoMatch	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    NoMatch(usize),$/;"	e	enum:Result
NonExistent	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    NonExistent { timestamp: V },$/;"	e	enum:SerdeError
NonUniformScaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/id.rs	/^    type NonUniformScaling = Id;$/;"	t	implementation:Id
NonUniformScaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    type NonUniformScaling = R;$/;"	t
NonUniformScaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    type NonUniformScaling: AffineTransformation<E>;$/;"	t	interface:AffineTransformation
NonUniformScaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alga.rs	/^    type NonUniformScaling = Id;$/;"	t
NonUniformScaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    type NonUniformScaling = Id;$/;"	t	implementation:UnitQuaternion
NonUniformScaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alga.rs	/^    type NonUniformScaling = Id;$/;"	t
NonUniformScaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alga.rs	/^    type NonUniformScaling = N;$/;"	t
NonUniformScaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alga.rs	/^    type NonUniformScaling = Id;$/;"	t
NonUniformScaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_alga.rs	/^    type NonUniformScaling = Id;$/;"	t
NonZero	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/marker_traits.rs	/^pub trait NonZero {}$/;"	i
None	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    None,$/;"	e	enum:Pad
None	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^    None,$/;"	e	enum:LocalResult
None	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    None,$/;"	e	enum:Primitive
None	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/test.rs	/^    None,$/;"	e	enum:Token
None	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    None,$/;"	e	enum:Hole
NopLogger	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^impl Log for NopLogger {$/;"	c
NopLogger	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^struct NopLogger;$/;"	s
Norm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^    type Norm = N::SimdRealField;$/;"	t
Norm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^pub trait Norm<N: SimdComplexField> {$/;"	i
Norm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs	/^    type Norm: SimdRealField;$/;"	t	interface:Normed
Norm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    type Norm = N::SimdRealField;$/;"	t	implementation:Quaternion
Norm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs	/^    type Norm = N::SimdRealField;$/;"	t	implementation:Complex
Normal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/normal.rs	/^impl Distribution<f64> for Normal {$/;"	c
Normal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/normal.rs	/^impl Normal {$/;"	c
Normal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/normal.rs	/^pub struct Normal {$/;"	s
Normed	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs	/^pub trait Normed {$/;"	i
NormedSpace	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/vector.rs	/^pub trait NormedSpace: VectorSpace<Field = <Self as NormedSpace>::ComplexField> {$/;"	i
NotEnough	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    NotEnough,$/;"	e	enum:ParseErrorKind
NotEq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/operator_aliases.rs	/^pub type NotEq<A, B> = <A as IsNotEqual<B>>::Output;$/;"	t
NotFound	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    NotFound,$/;"	e	enum:Status
NotWordBoundary	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    NotWordBoundary,$/;"	e	enum:EmptyLook
NotWordBoundaryAscii	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    NotWordBoundaryAscii,$/;"	e	enum:EmptyLook
Nothing	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    Nothing,$/;"	e	enum:MatchType
Num	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^pub trait Num: PartialEq + Zero + One + NumOps {$/;"	i
NumAssign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^pub trait NumAssign: Num + NumAssignOps {}$/;"	i
NumAssignOps	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^pub trait NumAssignOps<Rhs = Self>:$/;"	i
NumAssignRef	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^pub trait NumAssignRef: NumAssign + for<'r> NumAssignOps<&'r Self> {}$/;"	i
NumCast	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^pub trait NumCast: Sized + ToPrimitive {$/;"	i
NumDaysFromSun	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    NumDaysFromSun,$/;"	e	enum:Numeric
NumOps	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^pub trait NumOps<Rhs = Self, Output = Self>:$/;"	i
NumRef	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^pub trait NumRef: Num + for<'r> NumOps<&'r Self> {}$/;"	i
NumVar	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    type NumVar: VarNumber;$/;"	t	interface:Variate
NumVar	/Users/williamcashman/Honours/Program/n_poly/src/polym.rs	/^    type NumVar = N;$/;"	t	implementation:MultiIndex
NumVar	/Users/williamcashman/Honours/Program/n_poly/src/polyu.rs	/^    type NumVar = U1;$/;"	t	implementation:UniIndex
Number	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/expand.rs	/^    Number(usize),$/;"	e	enum:Ref
Numeric	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    Numeric(Numeric, Pad),$/;"	e	enum:Item
Numeric	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^pub enum Numeric {$/;"	g
OL_TO_MDL	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^static OL_TO_MDL: [u8; (MAX_OL as usize + 1)] = [$/;"	v
Odd	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Xp, Yp> Gcd<Even<Yp>> for Odd<Xp>$/;"	c
Odd	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Xp, Yp> Gcd<Odd<Yp>> for Odd<Xp>$/;"	c
Odd	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^type Odd<N> = UInt<N, B1>;$/;"	t
Of	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^impl Of {$/;"	c
Of	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^impl fmt::Debug for Of {$/;"	c
Of	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^pub struct Of(pub u32);$/;"	s
Off	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    Off,$/;"	e	enum:LevelFilter
Offset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/fixed.rs	/^    type Offset = FixedOffset;$/;"	t	implementation:FixedOffset
Offset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/local.rs	/^    type Offset = FixedOffset;$/;"	t	implementation:Local
Offset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^    type Offset: Offset;$/;"	t	interface:TimeZone
Offset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^pub trait Offset: Sized + Clone + fmt::Debug {$/;"	i
Offset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/utc.rs	/^    type Offset = Utc;$/;"	t	implementation:Utc
One	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/identities.rs	/^pub trait One: Sized + Mul<Self, Output = Self> {$/;"	i
One	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    One(Exp),$/;"	e	enum:GammaRepr
One	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    One(InstPtr),$/;"	e	enum:Hole
One	/Users/williamcashman/Honours/Program/n_poly/src/algebras/mod.rs	/^pub trait One: Eq + PartialEq + Sized {$/;"	i
OneElement	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs	/^    OneElement(T),$/;"	e	enum:MinMaxResult
OnePair	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^        impl Source for OnePair {$/;"	c	function:tests::count
OnePair	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^        struct OnePair {$/;"	s	function:tests::count
Ongoing	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs	/^    Ongoing {$/;"	e	enum:CompleteState
OngoingUnknownLen	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs	/^    OngoingUnknownLen {$/;"	e	enum:PermutationState
Only	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs	/^    Only(T),$/;"	e	enum:Position
Open01	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/float.rs	/^pub struct Open01;$/;"	s
OpenClosed01	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/float.rs	/^pub struct OpenClosed01;$/;"	s
Operator	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/operator.rs	/^pub trait Operator: Copy {$/;"	i
Option	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^impl<S> Source for Option<S>$/;"	c
Option	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^impl<T> ToValue for Option<T>$/;"	c
OptionMilliSecondsTimestampVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^        impl<'de> de::Visitor<'de> for OptionMilliSecondsTimestampVisitor {$/;"	c	module:serde::ts_milliseconds_option
OptionMilliSecondsTimestampVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^        struct OptionMilliSecondsTimestampVisitor;$/;"	s	module:serde::ts_milliseconds_option
OptionNanoSecondsTimestampVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^        impl<'de> de::Visitor<'de> for OptionNanoSecondsTimestampVisitor {$/;"	c	module:serde::ts_nanoseconds_option
OptionNanoSecondsTimestampVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^        struct OptionNanoSecondsTimestampVisitor;$/;"	s	module:serde::ts_nanoseconds_option
OptionSecondsTimestampVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^        impl<'de> de::Visitor<'de> for OptionSecondsTimestampVisitor {$/;"	c	module:serde::ts_seconds_option
OptionSecondsTimestampVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^        struct OptionSecondsTimestampVisitor;$/;"	s	module:serde::ts_seconds_option
Or	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/operator_aliases.rs	/^pub type Or<A, B> = <A as BitOr<B>>::Output;$/;"	t
Ord	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/marker_traits.rs	/^pub trait Ord {$/;"	i
Ord	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    type Ord = M;$/;"	t
Ord	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    type Ord: MonomialOrdering<Self::Var>;$/;"	t	interface:PolyRing
Ordinal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    Ordinal,$/;"	e	enum:Numeric
OrthogonalTransformation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^pub trait OrthogonalTransformation<E: EuclideanSpace>: Isometry<E, Translation = Id> {}$/;"	i
Orthographic3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^impl<'a, N: RealField + Deserialize<'a>> Deserialize<'a> for Orthographic3<N> {$/;"	c
Orthographic3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^impl<N: RealField + Arbitrary> Arbitrary for Orthographic3<N>$/;"	c
Orthographic3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^impl<N: RealField + Serialize> Serialize for Orthographic3<N> {$/;"	c
Orthographic3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^impl<N: RealField> Clone for Orthographic3<N> {$/;"	c
Orthographic3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^impl<N: RealField> Copy for Orthographic3<N> {}$/;"	c
Orthographic3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^impl<N: RealField> Orthographic3<N> {$/;"	c
Orthographic3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^impl<N: RealField> PartialEq for Orthographic3<N> {$/;"	c
Orthographic3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^impl<N: RealField> fmt::Debug for Orthographic3<N> {$/;"	c
Orthographic3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^pub struct Orthographic3<N: RealField> {$/;"	s
OutOfRange	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    OutOfRange,$/;"	e	enum:ParseErrorKind
OutOfRangeError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^impl Error for OutOfRangeError {$/;"	c
OutOfRangeError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^impl OutOfRangeError {$/;"	c
OutOfRangeError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^impl fmt::Display for OutOfRangeError {$/;"	c
OutOfRangeError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^pub struct OutOfRangeError(());$/;"	s
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^    type Output = Id;$/;"	t	implementation:Id
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^    type Output = Id<Additive>;$/;"	t	implementation:Id
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/wrapper.rs	/^    type Output = Self;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    type Output = Date<Tz>;$/;"	t	implementation:Date
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    type Output = OldDuration;$/;"	t	implementation:Date
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    type Output = DateTime<Tz>;$/;"	t	implementation:DateTime
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    type Output = OldDuration;$/;"	t	implementation:DateTime
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    type Output = NaiveDate;$/;"	t	implementation:NaiveDate
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    type Output = OldDuration;$/;"	t	implementation:NaiveDate
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    type Output = NaiveDateTime;$/;"	t	implementation:NaiveDateTime
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    type Output = OldDuration;$/;"	t	implementation:NaiveDateTime
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    type Output = NaiveTime;$/;"	t	implementation:NaiveTime
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    type Output = OldDuration;$/;"	t	implementation:NaiveTime
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/fixed.rs	/^    type Output = DateTime<Tz>;$/;"	t	implementation:DateTime
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/fixed.rs	/^    type Output = NaiveDateTime;$/;"	t	implementation:NaiveDateTime
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/fixed.rs	/^    type Output = NaiveTime;$/;"	t	implementation:NaiveTime
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    type Output = Duration;$/;"	t	implementation:Duration
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/arr.rs	/^    type Output = <N1 as Add<N2>>::Output;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/arr.rs	/^    type Output: ArrayLength<T>;$/;"	t	interface:AddLength
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^    type Output = GenericArray<T, Sum<N, M>>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^    type Output: GenericSequence<T>;$/;"	t	interface:Concat
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lazy_buffer.rs	/^    type Output = <Vec<I::Item> as Index<J>>::Output;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^    type Output = Dynamic;$/;"	t	implementation:Dynamic
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    type Output = &'a N;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    type Output: 'a;$/;"	t	interface:MatrixIndex
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^    type Output = Unit<MatrixMN<N, R, C>>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^    type Output = MatrixMN<N, R, C>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^    type Output = MatrixMN<N, R1, C2>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^    type Output = N;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^    type Output = N;$/;"	t	implementation:Matrix
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_ops.rs	/^    type Output = N;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_ops.rs	/^    type Output = Point<N, D>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_ops.rs	/^    type Output = Self;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_ops.rs	/^    type Output = N;$/;"	t	implementation:Quaternion
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_ops.rs	/^    type Output = Quaternion<N>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_ops.rs	/^    type Output = N;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_ops.rs	/^    type Output = N;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs	/^    type Output = Self;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs	/^    type Output = Self;$/;"	t	implementation:UnitComplex
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs	/^    type Output = UnitComplex<N>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_ops.rs	/^    type Output = CsMatrix<N, R1, C2>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_ops.rs	/^    type Output = Self;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    type Output = Complex<T>;$/;"	t	implementation:Complex
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    type Output = Self;$/;"	t	implementation:Complex
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/pow.rs	/^    type Output = Complex<T>;$/;"	t	implementation:Complex
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/inv.rs	/^    type Output = f32;$/;"	t	implementation:f32
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/inv.rs	/^    type Output = f64;$/;"	t	implementation:f64
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/inv.rs	/^    type Output;$/;"	t	interface:Inv
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/mul_add.rs	/^    type Output = Self;$/;"	t	implementation:f32
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/mul_add.rs	/^    type Output = Self;$/;"	t	implementation:f64
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/mul_add.rs	/^    type Output;$/;"	t	interface:MulAdd
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/pow.rs	/^    type Output;$/;"	t	interface:Pow
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/utils.rs	/^    type Output;$/;"	t	interface:WideningMultiply
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    type Output = [u8];$/;"	t	implementation:Captures
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    type Output = str;$/;"	t	implementation:Captures
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^    type Output = ATerm;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^    type Output = ATerm;$/;"	t	implementation:ATerm
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^    type Output = ATerm;$/;"	t	implementation:Z0
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^    type Output = Add1<Length<A>>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^    type Output = TArr<Diff<Vl, Vr>, Diff<Al, Ar>>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^    type Output = TArr<Mod<V, Rhs>, Mod<A, Rhs>>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^    type Output = TArr<Negate<V>, Negate<A>>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^    type Output = TArr<PartialQuot<V, Rhs>, PartialQuot<A, Rhs>>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^    type Output = TArr<Prod<NInt<U>, V>, Prod<NInt<U>, A>>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^    type Output = TArr<Prod<PInt<U>, V>, Prod<PInt<U>, A>>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^    type Output = TArr<Prod<V, Rhs>, Prod<A, Rhs>>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^    type Output = TArr<Quot<V, Rhs>, Quot<A, Rhs>>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^    type Output = TArr<Sum<Vl, Vr>, Sum<Al, Ar>>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^    type Output = TArr<Z0, Prod<Z0, A>>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^    type Output = U0;$/;"	t	implementation:ATerm
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^    type Output = B0;$/;"	t	implementation:B0
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^    type Output = B0;$/;"	t	implementation:B1
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^    type Output = B1;$/;"	t	implementation:B0
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^    type Output = B1;$/;"	t	implementation:B1
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^    type Output = Equal;$/;"	t	implementation:B0
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^    type Output = Equal;$/;"	t	implementation:B1
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^    type Output = Greater;$/;"	t	implementation:B1
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^    type Output = Less;$/;"	t	implementation:B0
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = <Nr as Cmp<Nl>>::Output;$/;"	t	implementation:NInt
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = <Pl as Cmp<Pr>>::Output;$/;"	t	implementation:PInt
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = <Ul as PrivateIntegerAdd<<Ul as Cmp<Ur>>::Output, Ur>>::Output;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = <Ur as PrivateIntegerAdd<<Ur as Cmp<Ul>>::Output, Ul>>::Output;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = Equal;$/;"	t	implementation:Z0
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = Greater;$/;"	t	implementation:PInt
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = Greater;$/;"	t	implementation:Z0
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = I;$/;"	t	implementation:Z0
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = Less;$/;"	t	implementation:NInt
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = Less;$/;"	t	implementation:Z0
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = N1;$/;"	t	implementation:N1
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = NInt<<N as Sub<P>>::Output>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = NInt<<Ul as Add<Ur>>::Output>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = NInt<<Ul as Mul<Ur>>::Output>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = NInt<<Ul as Pow<UInt<Ur, B1>>>::Output>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = NInt<Maximum<Ul, Ur>>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = NInt<Minimum<Ul, Ur>>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = NInt<U>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = NInt<U>;$/;"	t	implementation:NInt
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = NInt<U>;$/;"	t	implementation:PInt
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = NInt<U>;$/;"	t	implementation:Z0
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = NInt<Ul>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = NInt<Ur>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = P1;$/;"	t	implementation:N1
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = P1;$/;"	t	implementation:NInt
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = P1;$/;"	t	implementation:P1
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = P1;$/;"	t	implementation:PInt
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = P1;$/;"	t	implementation:Z0
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = PInt<<P as Sub<N>>::Output>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = PInt<<Ul as Add<Ur>>::Output>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = PInt<<Ul as Mul<Ur>>::Output>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = PInt<<Ul as Pow<UInt<Ur, B0>>>::Output>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = PInt<<Ul as Pow<Ur>>::Output>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = PInt<Gcf<U1, U2>>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = PInt<Maximum<Ul, Ur>>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = PInt<Minimum<Ul, Ur>>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = PInt<U>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = PInt<U>;$/;"	t	implementation:NInt
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = PInt<U>;$/;"	t	implementation:PInt
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = PInt<U>;$/;"	t	implementation:Z0
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = PInt<Ul>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = PInt<Ur>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = Quot<M, N>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = Z0;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = Z0;$/;"	t	implementation:NInt
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = Z0;$/;"	t	implementation:P
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = Z0;$/;"	t	implementation:PInt
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    type Output = Z0;$/;"	t	implementation:Z0
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Output = <<<U as Invert>::Output as TrimTrailingZeros>::Output as Invert>::Output;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Output = <IU as PrivateInvert<UInt<U, B>>>::Output;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Output = <IU as PrivateInvert<UInt<UTerm, B>>>::Output;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Output = <IU as TrimTrailingZeros>::Output;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Output = False;$/;"	t	implementation:A
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Output = IU;$/;"	t	implementation:UTerm
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Output = InvertedUTerm;$/;"	t	implementation:InvertedUTerm
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Output = InvertedUTerm;$/;"	t	implementation:UTerm
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Output = PrivateInvertOut<U, InvertedUInt<IU, B>>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Output = PrivateInvertOut<U, InvertedUInt<InvertedUTerm, B>>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Output = Self;$/;"	t	implementation:InvertedUInt
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Output = True;$/;"	t	implementation:A
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Output = U;$/;"	t	implementation:InvertedUTerm
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Output = UTerm;$/;"	t	implementation:InvertedUTerm
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Output: Bit;$/;"	t	interface:IsEqualPrivate
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Output: Bit;$/;"	t	interface:IsGreaterOrEqualPrivate
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Output: Bit;$/;"	t	interface:IsGreaterPrivate
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Output: Bit;$/;"	t	interface:IsLessOrEqualPrivate
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Output: Bit;$/;"	t	interface:IsLessPrivate
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Output: Bit;$/;"	t	interface:IsNotEqualPrivate
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Output;$/;"	t	interface:BitDiff
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Output;$/;"	t	interface:Invert
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Output;$/;"	t	interface:PrivateAnd
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Output;$/;"	t	interface:PrivateCmp
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Output;$/;"	t	interface:PrivateDivInt
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Output;$/;"	t	interface:PrivateIntegerAdd
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Output;$/;"	t	interface:PrivateInvert
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Output;$/;"	t	interface:PrivateLogarithm2
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Output;$/;"	t	interface:PrivateMax
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Output;$/;"	t	interface:PrivateMin
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Output;$/;"	t	interface:PrivatePow
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Output;$/;"	t	interface:PrivateRem
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Output;$/;"	t	interface:PrivateSetBit
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Output;$/;"	t	interface:PrivateSquareRoot
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Output;$/;"	t	interface:PrivateSub
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Output;$/;"	t	interface:PrivateXor
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Output;$/;"	t	interface:ShiftDiff
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Output;$/;"	t	interface:Trim
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Output;$/;"	t	interface:TrimTrailingZeros
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    type Output = <A as IsEqualPrivate<B, Compare<A, B>>>::Output;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    type Output = <A as IsGreaterOrEqualPrivate<B, Compare<A, B>>>::Output;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    type Output = <A as IsGreaterPrivate<B, Compare<A, B>>>::Output;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    type Output = <A as IsLessOrEqualPrivate<B, Compare<A, B>>>::Output;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    type Output = <A as IsLessPrivate<B, Compare<A, B>>>::Output;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    type Output = <A as IsNotEqualPrivate<B, Compare<A, B>>>::Output;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    type Output = PInt<U>;$/;"	t	implementation:NInt
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    type Output = Self;$/;"	t	implementation:PInt
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    type Output = T;$/;"	t	implementation:T
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    type Output = Z0;$/;"	t	implementation:Z0
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    type Output: ::Unsigned;$/;"	t	interface:Len
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    type Output: Bit;$/;"	t	interface:IsEqual
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    type Output: Bit;$/;"	t	interface:IsGreater
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    type Output: Bit;$/;"	t	interface:IsGreaterOrEqual
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    type Output: Bit;$/;"	t	interface:IsLess
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    type Output: Bit;$/;"	t	interface:IsLessOrEqual
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    type Output: Bit;$/;"	t	interface:IsNotEqual
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    type Output;$/;"	t	interface:Abs
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    type Output;$/;"	t	interface:Cmp
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    type Output;$/;"	t	interface:Gcd
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    type Output;$/;"	t	interface:Logarithm2
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    type Output;$/;"	t	interface:Max
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    type Output;$/;"	t	interface:Min
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    type Output;$/;"	t	interface:PartialDiv
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    type Output;$/;"	t	interface:Pow
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    type Output;$/;"	t	interface:Same
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    type Output;$/;"	t	interface:SquareRoot
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = <Self as PrivateLogarithm2>::Output;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = <Self as PrivateSquareRoot>::Output;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = Add1<Length<U>>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = Add1<Log2<U>>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = B0;$/;"	t	implementation:UTerm
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = BitDiffOut<Ul, Ur>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = Bn;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = Equal;$/;"	t	implementation:UTerm
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = Gcf<Odd<Xp>, Yp>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = Gcf<Xp, Odd<Yp>>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = GetBitOut<Un, Sub1<UInt<Ui, Bi>>>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = Greater;$/;"	t	implementation:UInt
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = Length<Ul>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = Less;$/;"	t	implementation:UTerm
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = PrivateCmpOut<Ul, Ur, Equal>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = PrivateCmpOut<Ul, Ur, Greater>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = PrivateCmpOut<Ul, Ur, Less>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = PrivateCmpOut<Ul, Ur, SoFar>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = PrivateDivQuot<UInt<Ul, Bl>, UInt<Ur, Br>, U0, U0, Sub1<Length<UInt<Ul, Bl>>>>/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = PrivateDivRem<UInt<Ul, Bl>, UInt<Ur, Br>, U0, U0, Sub1<Length<UInt<Ul, Bl>>>>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = PrivateMaxOut<UInt<U, B>, Ur, Compare<UInt<U, B>, Ur>>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = PrivateMinOut<UInt<U, B>, Ur, Compare<UInt<U, B>, Ur>>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = PrivatePowOut<Square<X>, Prod<X, Y>, UInt<U, B>>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = PrivatePowOut<Square<X>, Y, UInt<U, B>>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = PrivatePowOut<X, U1, N>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = Prod<X, Y>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = Quot<UInt<Ul, Bl>, UInt<Ur, Br>>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = Self;$/;"	t	implementation:UInt
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = Shleft<U1, I>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = Shleft<UInt<UInt<U, B>, B0>, Sub1<UInt<Ur, Br>>>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = Shleft<Ul, BitDiffOut<Ur, Ul>>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = Shright<U, Sub1<UInt<Ur, Br>>>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = SoFar;$/;"	t	implementation:UTerm
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = Sum<Double<Sqrt<U>>, GrEq<Self, Square<Add1<Double<Sqrt<U>>>>>>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = Sum<UInt<Prod<Ul, UInt<Ur, B>>, B0>, UInt<Ur, B>>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = TrimOut<PrivateAndOut<UInt<Ul, Bl>, Ur>>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = TrimOut<PrivateSetBitOut<N, I, B>>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = TrimOut<PrivateSubOut<UInt<Ul, Bl>, Ur>>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = TrimOut<PrivateXorOut<UInt<Ul, Bl>, Ur>>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = U0;$/;"	t	implementation:U0
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = U0;$/;"	t	implementation:UInt
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = U0;$/;"	t	implementation:UTerm
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = U;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = U;$/;"	t	implementation:U
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = U;$/;"	t	implementation:UInt
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = U;$/;"	t	implementation:UTerm
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = UInt<<Ul as BitOr<Ur>>::Output, B0>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = UInt<Add1<Sum<Ul, Ur>>, B0>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = UInt<Add1<U>, B0>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = UInt<Gcf<Xp, Yp>, B0>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = UInt<Or<Ul, Ur>, B1>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = UInt<PrivateAndOut<Ul, Ur>, B0>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = UInt<PrivateAndOut<Ul, Ur>, B1>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = UInt<PrivateSetBitOut<Un, Sub1<UInt<Ui, Bi>>, B>, Bn>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = UInt<PrivateSubOut<Ul, Ur>, B0>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = UInt<PrivateSubOut<Ul, Ur>, B1>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = UInt<PrivateXorOut<Ul, Ur>, B0>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = UInt<PrivateXorOut<Ul, Ur>, B1>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = UInt<Prod<Ul, UInt<Ur, B>>, B0>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = UInt<Sub1<PrivateSubOut<Ul, Ur>>, B1>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = UInt<Sub1<U>, B1>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = UInt<Sum<Ul, Ur>, B0>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = UInt<Sum<Ul, Ur>, B1>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = UInt<U, B1>;$/;"	t	implementation:UInt
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = UInt<U, B>;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = UInt<U, B>;$/;"	t	implementation:UInt
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = UInt<UInt<U, B>, B0>;$/;"	t	implementation:UInt
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = UInt<UTerm, B1>;$/;"	t	implementation:UInt
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = UInt<UTerm, B1>;$/;"	t	implementation:UTerm
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = UInt<Un, B>;$/;"	t	implementation:UInt
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = UTerm;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = UTerm;$/;"	t	implementation:UInt
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = UTerm;$/;"	t	implementation:UTerm
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = Ur;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = Ur;$/;"	t	implementation:UTerm
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = X;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = Y;$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output = Y;$/;"	t	implementation:X
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output =$/;"	t
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output;$/;"	t	interface:GetBit
Output	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Output;$/;"	t	interface:SetBit
OutputMut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    type OutputMut = &'a mut N;$/;"	t
OutputMut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    type OutputMut: 'a;$/;"	t	interface:MatrixIndexMut
Overflow	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs	/^    Overflow,$/;"	e	enum:CompleteStateRemaining
Owned	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs	/^pub type Owned<N, R, C = U1> = <DefaultAllocator as Allocator<N, R, C>>::Buffer;$/;"	t
OwnedLiteral	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    OwnedLiteral(Box<str>),$/;"	e	enum:Item
OwnedSpace	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    OwnedSpace(Box<str>),$/;"	e	enum:Item
P	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<N: Unsigned, P: Unsigned> PrivateIntegerAdd<Equal, N> for P {$/;"	c
P	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<N: Unsigned, P: Unsigned> PrivateIntegerAdd<Greater, N> for P$/;"	c
P	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<N: Unsigned, P: Unsigned> PrivateIntegerAdd<Less, N> for P$/;"	c
P1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U: Unsigned + NonZero> Pow<NInt<U>> for P1 {$/;"	c
PInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^impl<U> Mul<ATerm> for PInt<U>$/;"	c
PInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^impl<V, A, U> Mul<TArr<V, A>> for PInt<U>$/;"	c
PInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<P: Unsigned + NonZero, N: Unsigned + NonZero> Cmp<NInt<N>> for PInt<P> {$/;"	c
PInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<Pl: Cmp<Pr> + Unsigned + NonZero, Pr: Unsigned + NonZero> Cmp<PInt<Pr>> for PInt<Pl> {$/;"	c
PInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U1, U2> Gcd<NInt<U2>> for PInt<U1>$/;"	c
PInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U1, U2> Gcd<PInt<U2>> for PInt<U1>$/;"	c
PInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U: Unsigned + NonZero + PowerOfTwo> PowerOfTwo for PInt<U> {}$/;"	c
PInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U: Unsigned + NonZero> Add<Z0> for PInt<U> {$/;"	c
PInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U: Unsigned + NonZero> Cmp<Z0> for PInt<U> {$/;"	c
PInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U: Unsigned + NonZero> Integer for PInt<U> {$/;"	c
PInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U: Unsigned + NonZero> Mul<Z0> for PInt<U> {$/;"	c
PInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U: Unsigned + NonZero> Neg for PInt<U> {$/;"	c
PInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U: Unsigned + NonZero> NonZero for PInt<U> {}$/;"	c
PInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U: Unsigned + NonZero> PInt<U> {$/;"	c
PInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U: Unsigned + NonZero> Pow<Z0> for PInt<U> {$/;"	c
PInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U: Unsigned + NonZero> Sub<Z0> for PInt<U> {$/;"	c
PInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U> Gcd<Z0> for PInt<U>$/;"	c
PInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U> Max<Z0> for PInt<U>$/;"	c
PInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U> Min<Z0> for PInt<U>$/;"	c
PInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<Ul, Ur> Max<NInt<Ur>> for PInt<Ul>$/;"	c
PInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<Ul, Ur> Max<PInt<Ur>> for PInt<Ul>$/;"	c
PInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<Ul, Ur> Min<NInt<Ur>> for PInt<Ul>$/;"	c
PInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<Ul, Ur> Min<PInt<Ur>> for PInt<Ul>$/;"	c
PInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<Ul: Unsigned + NonZero, Ur: Unsigned + NonZero> Add<NInt<Ur>> for PInt<Ul>$/;"	c
PInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<Ul: Unsigned + NonZero, Ur: Unsigned + NonZero> Add<PInt<Ur>> for PInt<Ul>$/;"	c
PInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<Ul: Unsigned + NonZero, Ur: Unsigned + NonZero> Mul<NInt<Ur>> for PInt<Ul>$/;"	c
PInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<Ul: Unsigned + NonZero, Ur: Unsigned + NonZero> Mul<PInt<Ur>> for PInt<Ul>$/;"	c
PInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<Ul: Unsigned + NonZero, Ur: Unsigned + NonZero> Pow<PInt<Ur>> for PInt<Ul>$/;"	c
PInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<Ul: Unsigned + NonZero, Ur: Unsigned + NonZero> Sub<NInt<Ur>> for PInt<Ul>$/;"	c
PInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<Ul: Unsigned + NonZero, Ur: Unsigned + NonZero> Sub<PInt<Ur>> for PInt<Ul>$/;"	c
PInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^pub struct PInt<U: Unsigned + NonZero> {$/;"	s
PInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^impl<U: Unsigned + NonZero> Abs for PInt<U> {$/;"	c
PRDomain	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^impl<F, U, M> FPolyRing for PRDomain<F, U, M>$/;"	c
PRDomain	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^impl<R, U, M> Debug for PRDomain<R, U, M>$/;"	c
PRDomain	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^impl<R, U, M> PRDomain<R, U, M>$/;"	c
PRDomain	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^impl<R, U, M> PolyRing for PRDomain<R, U, M>$/;"	c
PRDomain	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^pub struct PRDomain<R: ScalarRing, U: Variate, M: MonomialOrdering<U>> {$/;"	s
PRDomain	/Users/williamcashman/Honours/Program/n_poly/src/polyu.rs	/^impl<R: ScalarRing> PolyRingUni for PRDomain<R, UniIndex, UnivarOrder> {}$/;"	c
Packed	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    Packed { s: packed::Searcher, lits: Vec<Literal> },$/;"	e	enum:Matcher
Packed	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    Packed(&'a [Literal]),$/;"	e	enum:LiteralIter
Pad	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^pub enum Pad {$/;"	g
PadUsing	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/pad_tail.rs	/^impl<I, F> DoubleEndedIterator for PadUsing<I, F>$/;"	c
PadUsing	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/pad_tail.rs	/^impl<I, F> ExactSizeIterator for PadUsing<I, F>$/;"	c
PadUsing	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/pad_tail.rs	/^impl<I, F> Iterator for PadUsing<I, F>$/;"	c
PadUsing	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/pad_tail.rs	/^pub struct PadUsing<I, F> {$/;"	s
Pareto	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/pareto.rs	/^impl Distribution<f64> for Pareto {$/;"	c
Pareto	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/pareto.rs	/^impl Pareto {$/;"	c
Pareto	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/pareto.rs	/^pub struct Pareto {$/;"	s
Parse	/Users/williamcashman/Honours/Program/n_poly/src/error.rs	/^    Parse(num::ParseIntError),$/;"	e	enum:PolyErr
ParseComplexError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<E: Error> Error for ParseComplexError<E> {$/;"	c
ParseComplexError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<E: fmt::Display> fmt::Display for ParseComplexError<E> {$/;"	c
ParseComplexError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^impl<E> ParseComplexError<E> {$/;"	c
ParseComplexError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^pub struct ParseComplexError<E> {$/;"	s
ParseError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^impl Error for ParseError {$/;"	c
ParseError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^impl ParseError {$/;"	c
ParseError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^impl fmt::Display for ParseError {$/;"	c
ParseError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^pub struct ParseError(ParseErrorKind);$/;"	s
ParseError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    ParseError(E),$/;"	e	enum:ComplexErrorKind
ParseErrorKind	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^enum ParseErrorKind {$/;"	g
ParseFloatError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^impl fmt::Display for ParseFloatError {$/;"	c
ParseFloatError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^pub struct ParseFloatError {$/;"	s
ParseLevelError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^impl error::Error for ParseLevelError {$/;"	c
ParseLevelError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^impl fmt::Display for ParseLevelError {$/;"	c
ParseLevelError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^pub struct ParseLevelError(());$/;"	s
ParsePolyError	/Users/williamcashman/Honours/Program/n_poly/src/error.rs	/^    ParsePolyError,$/;"	e	enum:PolyErr
ParseResult	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^pub type ParseResult<T> = Result<T, ParseError>;$/;"	t
ParseWeekdayError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^impl fmt::Debug for ParseWeekdayError {$/;"	c
ParseWeekdayError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^pub struct ParseWeekdayError {$/;"	s
Parsed	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^impl Default for Parsed {$/;"	c
Parsed	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^impl Parsed {$/;"	c
Parsed	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^pub struct Parsed {$/;"	s
Parsed	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^struct Parsed {$/;"	s
PartialDiv	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^pub trait PartialDiv<Rhs = Self> {$/;"	i
PartialQuot	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/operator_aliases.rs	/^pub type PartialQuot<A, B> = <A as PartialDiv<B>>::Output;$/;"	t
Patch	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^struct Patch {$/;"	s
Peekable	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs	/^impl<I> PeekingNext for Peekable<I>$/;"	c
PeekingNext	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs	/^pub trait PeekingNext : Iterator {$/;"	i
PeekingTakeWhile	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs	/^impl<'a, I, F> Iterator for PeekingTakeWhile<'a, I, F>$/;"	c
PeekingTakeWhile	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs	/^pub struct PeekingTakeWhile<'a, I: 'a, F>$/;"	s
PermutationSequence	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs	/^impl PermutationSequence<Dynamic>$/;"	c
PermutationSequence	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs	/^impl<D: Dim> Copy for PermutationSequence<D>$/;"	c
PermutationSequence	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs	/^impl<D: Dim> PermutationSequence<D>$/;"	c
PermutationSequence	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs	/^impl<D: DimName> PermutationSequence<D>$/;"	c
PermutationSequence	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs	/^pub struct PermutationSequence<D: Dim>$/;"	s
PermutationState	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs	/^enum PermutationState {$/;"	g
Permutations	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs	/^impl<I> Clone for Permutations<I>$/;"	c
Permutations	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs	/^impl<I> Iterator for Permutations<I>$/;"	c
Permutations	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs	/^impl<I> Permutations<I>$/;"	c
Permutations	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs	/^impl<I> fmt::Debug for Permutations<I>$/;"	c
Permutations	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs	/^pub struct Permutations<I: Iterator> {$/;"	s
Perspective3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^impl<'a, N: RealField + Deserialize<'a>> Deserialize<'a> for Perspective3<N> {$/;"	c
Perspective3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^impl<N: RealField + Arbitrary> Arbitrary for Perspective3<N> {$/;"	c
Perspective3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^impl<N: RealField + Serialize> Serialize for Perspective3<N> {$/;"	c
Perspective3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^impl<N: RealField> Clone for Perspective3<N> {$/;"	c
Perspective3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^impl<N: RealField> Copy for Perspective3<N> {}$/;"	c
Perspective3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^impl<N: RealField> PartialEq for Perspective3<N> {$/;"	c
Perspective3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^impl<N: RealField> Perspective3<N> {$/;"	c
Perspective3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^impl<N: RealField> fmt::Debug for Perspective3<N> {$/;"	c
Perspective3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^pub struct Perspective3<N: Scalar> {$/;"	s
PikeVM	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    PikeVM,$/;"	e	enum:MatchNfaType
Point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^impl<'a, N: Scalar, D: DimName> Deserialize<'a> for Point<N, D>$/;"	c
Point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^impl<N, D> Abomonation for Point<N, D>$/;"	c
Point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^impl<N: Scalar + AbsDiffEq, D: DimName> AbsDiffEq for Point<N, D>$/;"	c
Point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^impl<N: Scalar + Copy, D: DimName> Copy for Point<N, D>$/;"	c
Point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^impl<N: Scalar + Eq, D: DimName> Eq for Point<N, D> where DefaultAllocator: Allocator<N, D> {}$/;"	c
Point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^impl<N: Scalar + PartialOrd, D: DimName> PartialOrd for Point<N, D>$/;"	c
Point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^impl<N: Scalar + RelativeEq, D: DimName> RelativeEq for Point<N, D>$/;"	c
Point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^impl<N: Scalar + SimdPartialOrd, D: DimName> Point<N, D>$/;"	c
Point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^impl<N: Scalar + UlpsEq, D: DimName> UlpsEq for Point<N, D>$/;"	c
Point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^impl<N: Scalar + fmt::Display, D: DimName> fmt::Display for Point<N, D>$/;"	c
Point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^impl<N: Scalar + hash::Hash, D: DimName + hash::Hash> hash::Hash for Point<N, D>$/;"	c
Point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^impl<N: Scalar, D: DimName> PartialEq for Point<N, D>$/;"	c
Point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^impl<N: Scalar, D: DimName> Point<N, D>$/;"	c
Point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^impl<N: Scalar, D: DimName> Serialize for Point<N, D>$/;"	c
Point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^pub struct Point<N: Scalar, D: DimName>$/;"	s
Point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_alga.rs	/^impl<N, D: DimName> JoinSemilattice for Point<N, D>$/;"	c
Point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_alga.rs	/^impl<N, D: DimName> Lattice for Point<N, D>$/;"	c
Point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_alga.rs	/^impl<N, D: DimName> MeetSemilattice for Point<N, D>$/;"	c
Point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_alga.rs	/^impl<N: RealField + simba::scalar::RealField, D: DimName> EuclideanSpace for Point<N, D>$/;"	c
Point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_alga.rs	/^impl<N: Scalar + Field, D: DimName> AffineSpace for Point<N, D>$/;"	c
Point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs	/^impl<N: Scalar + Arbitrary + Send, D: DimName> Arbitrary for Point<N, D>$/;"	c
Point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs	/^impl<N: Scalar + Bounded, D: DimName> Bounded for Point<N, D>$/;"	c
Point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs	/^impl<N: Scalar, D: DimName> Point<N, D>$/;"	c
Point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_conversion.rs	/^impl<N1, N2, D> SubsetOf<Point<N2, D>> for Point<N1, D>$/;"	c
Point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_conversion.rs	/^impl<N1, N2, D> SubsetOf<VectorN<N2, DimNameSum<D, U1>>> for Point<N1, D>$/;"	c
Point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_conversion.rs	/^impl<N: Scalar + Copy + PrimitiveSimdValue, D: DimName> From<[Point<N::Element, D>; 16]>$/;"	c
Point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_conversion.rs	/^impl<N: Scalar + Copy + PrimitiveSimdValue, D: DimName> From<[Point<N::Element, D>; 2]>$/;"	c
Point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_conversion.rs	/^impl<N: Scalar + Copy + PrimitiveSimdValue, D: DimName> From<[Point<N::Element, D>; 4]>$/;"	c
Point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_conversion.rs	/^impl<N: Scalar + Copy + PrimitiveSimdValue, D: DimName> From<[Point<N::Element, D>; 8]>$/;"	c
Point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_conversion.rs	/^impl<N: Scalar, D: DimName> From<VectorN<N, D>> for Point<N, D>$/;"	c
Point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_ops.rs	/^impl<'a, N: Scalar + ClosedNeg, D: DimName> Neg for &'a Point<N, D>$/;"	c
Point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_ops.rs	/^impl<N: Scalar + ClosedNeg, D: DimName> Neg for Point<N, D>$/;"	c
Point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_ops.rs	/^impl<N: Scalar, D: DimName> Index<usize> for Point<N, D>$/;"	c
Point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_ops.rs	/^impl<N: Scalar, D: DimName> IndexMut<usize> for Point<N, D>$/;"	c
Point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_simba.rs	/^impl<N: Scalar + SimdValue, D: DimName> SimdValue for Point<N, D>$/;"	c
Point1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_alias.rs	/^pub type Point1<N> = Point<N, U1>;$/;"	t
Point2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_alias.rs	/^pub type Point2<N> = Point<N, U2>;$/;"	t
Point3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_alias.rs	/^pub type Point3<N> = Point<N, U3>;$/;"	t
Point4	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_alias.rs	/^pub type Point4<N> = Point<N, U4>;$/;"	t
Point5	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_alias.rs	/^pub type Point5<N> = Point<N, U5>;$/;"	t
Point6	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_alias.rs	/^pub type Point6<N> = Point<N, U6>;$/;"	t
Poisson	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/poisson.rs	/^impl Distribution<u64> for Poisson {$/;"	c
Poisson	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/poisson.rs	/^impl Poisson {$/;"	c
Poisson	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/poisson.rs	/^pub struct Poisson {$/;"	s
Poly	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^impl<'a, P: FPolyRing> EuclideanDomain for Poly<'a, P> {$/;"	c
Poly	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^impl<'a, P: PolyRing> Group for Poly<'a, P> {$/;"	c
Poly	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^impl<'a, P: PolyRing> One for Poly<'a, P> {$/;"	c
Poly	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^impl<'a, P: PolyRing> Poly<'a, P> {$/;"	c
Poly	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^impl<'a, P: PolyRing> Ring for Poly<'a, P> {$/;"	c
Poly	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^impl<'a, P: PolyRing> Zero for Poly<'a, P> {$/;"	c
Poly	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^pub struct Poly<'a, P: PolyRing> {$/;"	s
Poly	/Users/williamcashman/Honours/Program/n_poly/src/ideals/mod.rs	/^impl<'a, P: FPolyRing> Poly<'a, P> {$/;"	c
Poly	/Users/williamcashman/Honours/Program/n_poly/src/parse.rs	/^impl<P: PolyRing> MyFromStr<P> for Poly<P> {$/;"	c
Poly	/Users/williamcashman/Honours/Program/n_poly/src/polyu.rs	/^impl<P: PolyRing> fmt::Display for Poly<P> {$/;"	c
Poly	/Users/williamcashman/Honours/Program/n_poly/src/polyu.rs	/^impl<P: PolyRingUni> Poly<P> {$/;"	c
PolyErr	/Users/williamcashman/Honours/Program/n_poly/src/error.rs	/^impl From<io::Error> for PolyErr {$/;"	c
PolyErr	/Users/williamcashman/Honours/Program/n_poly/src/error.rs	/^impl From<io::ErrorKind> for PolyErr {$/;"	c
PolyErr	/Users/williamcashman/Honours/Program/n_poly/src/error.rs	/^impl From<num::ParseIntError> for PolyErr {$/;"	c
PolyErr	/Users/williamcashman/Honours/Program/n_poly/src/error.rs	/^impl fmt::Display for PolyErr {$/;"	c
PolyErr	/Users/williamcashman/Honours/Program/n_poly/src/error.rs	/^pub enum PolyErr {$/;"	g
PolyRing	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^pub trait PolyRing: Eq + PartialEq + Clone + std::fmt::Debug {$/;"	i
PolyRingUni	/Users/williamcashman/Honours/Program/n_poly/src/polyu.rs	/^pub trait PolyRingUni: PolyRing<Var = UniIndex, Ord = UnivarOrder> {}$/;"	i
PolyU	/Users/williamcashman/Honours/Program/n_poly/src/fast_mult.rs	/^impl<'a, T: SupportsFFT> FastMult for PolyU<'a, T> {$/;"	c
PolyU	/Users/williamcashman/Honours/Program/n_poly/src/polyu.rs	/^impl<'a, F: Field> PolyU<'a, F> {$/;"	c
PolyU	/Users/williamcashman/Honours/Program/n_poly/src/polyu.rs	/^pub type PolyU<'a, R> = Poly<PRDomain<R, UniIndex, UnivarOrder>>;$/;"	t
Position	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs	/^impl<T> Position<T> {$/;"	c
Position	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs	/^pub enum Position<T> {$/;"	g
Positions	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^impl<I, F> DoubleEndedIterator for Positions<I, F>$/;"	c
Positions	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^impl<I, F> Iterator for Positions<I, F>$/;"	c
Positions	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub struct Positions<I, F> {$/;"	s
Pow	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/pow.rs	/^pub trait Pow<RHS> {$/;"	i
Pow	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^pub trait Pow<Exp> {$/;"	i
PowerOfTwo	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/marker_traits.rs	/^pub trait PowerOfTwo {}$/;"	i
PrimInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/int.rs	/^pub trait PrimInt:$/;"	i
Prime	/Users/williamcashman/Honours/Program/n_poly/src/algebras/finite_field.rs	/^trait Prime: Unsigned + Copy + Eq {}$/;"	i
Primitive	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    Primitive(Primitive<'v>),$/;"	e	enum:Inner
Primitive	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^pub(super) enum Primitive<'v> {$/;"	g
PrivateAnd	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub trait PrivateAnd<Rhs = Self> {$/;"	i
PrivateAndOut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub type PrivateAndOut<A, Rhs> = <A as PrivateAnd<Rhs>>::Output;$/;"	t
PrivateCmp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub trait PrivateCmp<Rhs, SoFar> {$/;"	i
PrivateCmpOut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub type PrivateCmpOut<A, Rhs, SoFar> = <A as PrivateCmp<Rhs, SoFar>>::Output;$/;"	t
PrivateDiv	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub trait PrivateDiv<N, D, Q, R, I> {$/;"	i
PrivateDiv	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<N, D, Q, I> PrivateDiv<N, D, Q, U0, I> for ()$/;"	c
PrivateDiv	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<N, D, Q, Ur, Br, I> PrivateDiv<N, D, Q, UInt<Ur, Br>, I> for ()$/;"	c
PrivateDivIf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub trait PrivateDivIf<N, D, Q, R, I, RcmpD> {$/;"	i
PrivateDivIf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<N, D, Q, R, Ui, Bi> PrivateDivIf<N, D, Q, R, UInt<Ui, Bi>, Equal> for ()$/;"	c
PrivateDivIf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<N, D, Q, R, Ui, Bi> PrivateDivIf<N, D, Q, R, UInt<Ui, Bi>, Greater> for ()$/;"	c
PrivateDivIf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<N, D, Q, R, Ui, Bi> PrivateDivIf<N, D, Q, R, UInt<Ui, Bi>, Less> for ()$/;"	c
PrivateDivIf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<N, D, Q, R> PrivateDivIf<N, D, Q, R, U0, Equal> for ()$/;"	c
PrivateDivIf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<N, D, Q, R> PrivateDivIf<N, D, Q, R, U0, Greater> for ()$/;"	c
PrivateDivIf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<N, D, Q, R> PrivateDivIf<N, D, Q, R, U0, Less> for () {$/;"	c
PrivateDivIfQuot	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub type PrivateDivIfQuot<N, D, Q, R, I, RcmpD> =$/;"	t
PrivateDivIfRem	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub type PrivateDivIfRem<N, D, Q, R, I, RcmpD> =$/;"	t
PrivateDivInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub trait PrivateDivInt<C, Divisor> {$/;"	i
PrivateDivIntOut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub type PrivateDivIntOut<A, C, Divisor> = <A as PrivateDivInt<C, Divisor>>::Output;$/;"	t
PrivateDivQuot	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub type PrivateDivQuot<N, D, Q, R, I> = <() as PrivateDiv<N, D, Q, R, I>>::Quotient;$/;"	t
PrivateDivRem	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub type PrivateDivRem<N, D, Q, R, I> = <() as PrivateDiv<N, D, Q, R, I>>::Remainder;$/;"	t
PrivateIntegerAdd	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub trait PrivateIntegerAdd<C, N> {$/;"	i
PrivateIntegerAddOut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub type PrivateIntegerAddOut<P, C, N> = <P as PrivateIntegerAdd<C, N>>::Output;$/;"	t
PrivateInvert	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub trait PrivateInvert<Rhs> {$/;"	i
PrivateInvertOut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub type PrivateInvertOut<A, Rhs> = <A as PrivateInvert<Rhs>>::Output;$/;"	t
PrivateLogarithm2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub trait PrivateLogarithm2 {$/;"	i
PrivateMax	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub trait PrivateMax<Rhs, CmpResult> {$/;"	i
PrivateMaxOut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub type PrivateMaxOut<A, B, CmpResult> = <A as PrivateMax<B, CmpResult>>::Output;$/;"	t
PrivateMin	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub trait PrivateMin<Rhs, CmpResult> {$/;"	i
PrivateMinOut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub type PrivateMinOut<A, B, CmpResult> = <A as PrivateMin<B, CmpResult>>::Output;$/;"	t
PrivatePow	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub trait PrivatePow<Y, N> {$/;"	i
PrivatePowOut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub type PrivatePowOut<A, Y, N> = <A as PrivatePow<Y, N>>::Output;$/;"	t
PrivateRem	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub trait PrivateRem<URem, Divisor> {$/;"	i
PrivateRemOut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub type PrivateRemOut<A, URem, Divisor> = <A as PrivateRem<URem, Divisor>>::Output;$/;"	t
PrivateSetBit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub trait PrivateSetBit<I, B> {$/;"	i
PrivateSetBitOut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub type PrivateSetBitOut<N, I, B> = <N as PrivateSetBit<I, B>>::Output;$/;"	t
PrivateSquareRoot	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub trait PrivateSquareRoot {$/;"	i
PrivateSub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub trait PrivateSub<Rhs = Self> {$/;"	i
PrivateSubOut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub type PrivateSubOut<A, Rhs> = <A as PrivateSub<Rhs>>::Output;$/;"	t
PrivateXor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub trait PrivateXor<Rhs = Self> {$/;"	i
PrivateXorOut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub type PrivateXorOut<A, Rhs> = <A as PrivateXor<Rhs>>::Output;$/;"	t
ProcessResults	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs	/^impl<'a, I, T, E> Iterator for ProcessResults<'a, I, E>$/;"	c
ProcessResults	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs	/^pub struct ProcessResults<'a, I, E: 'a> {$/;"	s
Prod	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/operator_aliases.rs	/^pub type Prod<A, B> = <A as Mul<B>>::Output;$/;"	t
Product	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^impl<I, J> Iterator for Product<I, J>$/;"	c
Product	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub struct Product<I, J>$/;"	s
Program	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^impl Deref for Program {$/;"	c
Program	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^impl Program {$/;"	c
Program	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^impl fmt::Debug for Program {$/;"	c
Program	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^impl<'a> IntoIterator for &'a Program {$/;"	c
Program	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^pub struct Program {$/;"	s
ProgramCache	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^pub type ProgramCache = RefCell<ProgramCacheInner>;$/;"	t
ProgramCacheInner	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^impl ProgramCacheInner {$/;"	c
ProgramCacheInner	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^pub struct ProgramCacheInner {$/;"	s
Projective2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_alias.rs	/^pub type Projective2<N> = Transform<N, U2, TProjective>;$/;"	t
Projective3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_alias.rs	/^pub type Projective3<N> = Transform<N, U3, TProjective>;$/;"	t
ProjectiveTransformation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^pub trait ProjectiveTransformation<E: EuclideanSpace>:$/;"	i
PutBack	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^impl<I> Iterator for PutBack<I>$/;"	c
PutBack	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^impl<I> PutBack<I>$/;"	c
PutBack	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub struct PutBack<I>$/;"	s
PutBack	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs	/^impl<I> PeekingNext for PutBack<I>$/;"	c
PutBackN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs	/^impl<I> PeekingNext for PutBackN<I>$/;"	c
PutBackN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs	/^impl<I: Iterator> Iterator for PutBackN<I> {$/;"	c
PutBackN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs	/^impl<I: Iterator> PutBackN<I> {$/;"	c
PutBackN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs	/^pub struct PutBackN<I: Iterator> {$/;"	s
QR	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs	/^impl<N: ComplexField, D: DimMin<D, Output = D>> QR<N, D, D>$/;"	c
QR	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs	/^impl<N: ComplexField, R: DimMin<C>, C: Dim> Copy for QR<N, R, C>$/;"	c
QR	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs	/^impl<N: ComplexField, R: DimMin<C>, C: Dim> QR<N, R, C>$/;"	c
QR	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs	/^pub struct QR<N: ComplexField, R: DimMin<C>, C: Dim>$/;"	s
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^impl<'a, N: SimdRealField> Deserialize<'a> for Quaternion<N>$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^impl<N: RealField + AbsDiffEq<Epsilon = N>> AbsDiffEq for Quaternion<N> {$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^impl<N: RealField + RelativeEq<Epsilon = N>> RelativeEq for Quaternion<N> {$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^impl<N: RealField + UlpsEq<Epsilon = N>> UlpsEq for Quaternion<N> {$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^impl<N: RealField + fmt::Display> fmt::Display for Quaternion<N> {$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^impl<N: Scalar + Copy + SimdValue> Copy for Quaternion<N> {}$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^impl<N: Scalar + SimdValue> Clone for Quaternion<N> {$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^impl<N: SimdRealField + Eq> Eq for Quaternion<N> where N::Element: SimdRealField {}$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^impl<N: SimdRealField + hash::Hash> hash::Hash for Quaternion<N> {$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^impl<N: SimdRealField> Abomonation for Quaternion<N>$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^impl<N: SimdRealField> Normed for Quaternion<N> {$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^impl<N: SimdRealField> PartialEq for Quaternion<N>$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^impl<N: SimdRealField> Quaternion<N>$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^impl<N: SimdRealField> Serialize for Quaternion<N>$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^pub struct Quaternion<N: Scalar + SimdValue> {$/;"	s
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^impl<N: RealField + simba::scalar::RealField> AbstractMagma<Additive> for Quaternion<N> {$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^impl<N: RealField + simba::scalar::RealField> AbstractMagma<Multiplicative> for Quaternion<N> {$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^impl<N: RealField + simba::scalar::RealField> AbstractModule for Quaternion<N> {$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^impl<N: RealField + simba::scalar::RealField> FiniteDimVectorSpace for Quaternion<N> {$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^impl<N: RealField + simba::scalar::RealField> Identity<Additive> for Quaternion<N> {$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^impl<N: RealField + simba::scalar::RealField> Identity<Multiplicative> for Quaternion<N> {$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^impl<N: RealField + simba::scalar::RealField> Module for Quaternion<N> {$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^impl<N: RealField + simba::scalar::RealField> NormedSpace for Quaternion<N> {$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^impl<N: RealField + simba::scalar::RealField> TwoSidedInverse<Additive> for Quaternion<N> {$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^impl<N: RealField + simba::scalar::RealField> VectorSpace for Quaternion<N> {$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^impl<N: Scalar + SimdValue> Quaternion<N> {$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^impl<N: SimdRealField + Arbitrary> Arbitrary for Quaternion<N>$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^impl<N: SimdRealField> One for Quaternion<N>$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^impl<N: SimdRealField> Quaternion<N> {$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^impl<N: SimdRealField> Quaternion<N>$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^impl<N: SimdRealField> Zero for Quaternion<N>$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^impl<N1, N2> SubsetOf<Quaternion<N2>> for Quaternion<N1>$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^impl<N: Scalar + PrimitiveSimdValue> From<[Quaternion<N::Element>; 16]> for Quaternion<N>$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^impl<N: Scalar + PrimitiveSimdValue> From<[Quaternion<N::Element>; 2]> for Quaternion<N>$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^impl<N: Scalar + PrimitiveSimdValue> From<[Quaternion<N::Element>; 4]> for Quaternion<N>$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^impl<N: Scalar + PrimitiveSimdValue> From<[Quaternion<N::Element>; 8]> for Quaternion<N>$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^impl<N: Scalar + SimdValue> From<Vector4<N>> for Quaternion<N> {$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^impl<N: SimdRealField> From<mint::Quaternion<N>> for Quaternion<N> {$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^impl<N: SimdRealField> Into<mint::Quaternion<N>> for Quaternion<N> {$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_coordinates.rs	/^impl<N: Scalar + SimdValue> Deref for Quaternion<N> {$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_coordinates.rs	/^impl<N: Scalar + SimdValue> DerefMut for Quaternion<N> {$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_ops.rs	/^impl<'a, N: SimdRealField> Neg for &'a Quaternion<N>$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_ops.rs	/^impl<N: SimdRealField> Index<usize> for Quaternion<N> {$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_ops.rs	/^impl<N: SimdRealField> IndexMut<usize> for Quaternion<N> {$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_ops.rs	/^impl<N: SimdRealField> Neg for Quaternion<N>$/;"	c
Quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_simba.rs	/^impl<N: Scalar + SimdValue> SimdValue for Quaternion<N>$/;"	c
Quit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    Quit,$/;"	e	enum:Result
Quot	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/operator_aliases.rs	/^pub type Quot<A, B> = <A as Div<B>>::Output;$/;"	t
Quotient	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Quotient;$/;"	t	interface:PrivateDiv
Quotient	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Quotient;$/;"	t	interface:PrivateDivIf
Quotient	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Quotient = PrivateDivIfQuot<$/;"	t
Quotient	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Quotient = PrivateDivQuot<N, D, Q, R, Sub1<UInt<Ui, Bi>>>;$/;"	t
Quotient	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Quotient = PrivateDivQuot<N, D, SetBitOut<Q, UInt<Ui, Bi>, B1>, U0, Sub1<UInt<Ui, Bi>>>/;"	t
Quotient	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Quotient = Q;$/;"	t	implementation:PrivateDivIf
Quotient	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Quotient = SetBitOut<Q, U0, B1>;$/;"	t
Quotient	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Quotient =$/;"	t
R	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^impl<R, E> AffineTransformation<E> for R$/;"	c
R	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^impl<R, E> ProjectiveTransformation<E> for R$/;"	c
R	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^impl<R, E> Scaling<E> for R$/;"	c
R	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^impl<R, E> Similarity<E> for R$/;"	c
R	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^impl<R, E> Transformation<E> for R$/;"	c
R	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^impl<R: RngCore + ?Sized> Rng for R {}$/;"	c
REGISTER	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/reseeding.rs	/^        static REGISTER: Once = Once::new();$/;"	v	function:fork::register_fork_handler
RESEEDING_RNG_FORK_COUNTER	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/reseeding.rs	/^    static RESEEDING_RNG_FORK_COUNTER: AtomicUsize = AtomicUsize::new(0);$/;"	v	module:fork
RFC2822	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    RFC2822,$/;"	e	enum:Fixed
RFC3339	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    RFC3339,$/;"	e	enum:Fixed
RFC850_FMT	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parse.rs	/^    static RFC850_FMT: &'static str =  "%A, %d-%b-%y %T GMT";$/;"	v	function:parse_rfc850
RR	/Users/williamcashman/Honours/Program/n_poly/src/algebras/real.rs	/^impl Field for RR {$/;"	c
RR	/Users/williamcashman/Honours/Program/n_poly/src/algebras/real.rs	/^impl Group for RR {$/;"	c
RR	/Users/williamcashman/Honours/Program/n_poly/src/algebras/real.rs	/^impl One for RR {$/;"	c
RR	/Users/williamcashman/Honours/Program/n_poly/src/algebras/real.rs	/^impl PartialEq for RR {$/;"	c
RR	/Users/williamcashman/Honours/Program/n_poly/src/algebras/real.rs	/^impl RR {$/;"	c
RR	/Users/williamcashman/Honours/Program/n_poly/src/algebras/real.rs	/^impl Ring for RR {$/;"	c
RR	/Users/williamcashman/Honours/Program/n_poly/src/algebras/real.rs	/^impl ScalarRing for RR {$/;"	c
RR	/Users/williamcashman/Honours/Program/n_poly/src/algebras/real.rs	/^impl Zero for RR {$/;"	c
RR	/Users/williamcashman/Honours/Program/n_poly/src/algebras/real.rs	/^impl fmt::Display for RR {$/;"	c
RR	/Users/williamcashman/Honours/Program/n_poly/src/algebras/real.rs	/^impl std::cmp::Eq for RR {}$/;"	c
RR	/Users/williamcashman/Honours/Program/n_poly/src/algebras/real.rs	/^impl std::str::FromStr for RR {$/;"	c
RR	/Users/williamcashman/Honours/Program/n_poly/src/algebras/real.rs	/^pub struct RR(pub f64);$/;"	s
RStride	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^    type RStride = U1;$/;"	t
RStride	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs	/^    type RStride: Dim;$/;"	t	interface:Storage
RStride	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs	/^pub type RStride<N, R, C = U1> =$/;"	t
RStride	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^    type RStride = U1;$/;"	t
RandomOrthogonal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/debug/random_orthogonal.rs	/^impl<N: ComplexField + Arbitrary + Send, D: Dim> Arbitrary for RandomOrthogonal<N, D>$/;"	c
RandomOrthogonal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/debug/random_orthogonal.rs	/^impl<N: ComplexField, D: Dim> RandomOrthogonal<N, D>$/;"	c
RandomOrthogonal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/debug/random_orthogonal.rs	/^pub struct RandomOrthogonal<N: Scalar, D: Dim = Dynamic>$/;"	s
RandomSDP	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/debug/random_sdp.rs	/^impl<N: ComplexField + Arbitrary + Send, D: Dim> Arbitrary for RandomSDP<N, D>$/;"	c
RandomSDP	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/debug/random_sdp.rs	/^impl<N: ComplexField, D: Dim> RandomSDP<N, D>$/;"	c
RandomSDP	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/debug/random_sdp.rs	/^pub struct RandomSDP<N: Scalar, D: Dim = Dynamic>$/;"	s
Range	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^impl<D: Dim> DimRange<D> for ops::Range<usize> {$/;"	c
Range	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^impl<D: Dim> SliceRange<D> for Range<usize> {$/;"	c
Range	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^impl<'t> From<Match<'t>> for Range<usize> {$/;"	c
Range	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^impl<'t> From<Match<'t>> for Range<usize> {$/;"	c
RangeFrom	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^impl<D: Dim, T: Dim> DimRange<D> for ops::RangeFrom<T>$/;"	c
RangeFrom	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^impl<D: Dim> DimRange<D> for ops::RangeFrom<usize> {$/;"	c
RangeFrom	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^impl<D: Dim> SliceRange<D> for RangeFrom<usize> {$/;"	c
RangeFull	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^impl<D: Dim> DimRange<D> for ops::RangeFull {$/;"	c
RangeFull	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^impl<D: Dim> SliceRange<D> for RangeFull {$/;"	c
RangeInclusive	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^impl<D: Dim> DimRange<D> for ops::RangeInclusive<usize> {$/;"	c
RangeTo	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^impl<D: Dim> DimRange<D> for ops::RangeTo<usize> {$/;"	c
RangeTo	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^impl<D: Dim> SliceRange<D> for RangeTo<usize> {$/;"	c
RangeToInclusive	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^impl<D: Dim> DimRange<D> for ops::RangeToInclusive<usize> {$/;"	c
Ranges	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    Ranges { ranges: Vec<(char, char)> },$/;"	e	enum:InstHole
Ranges	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    Ranges(InstRanges),$/;"	e	enum:Inst
RcIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs	/^impl<'a, I> IntoIterator for &'a RcIter<I>$/;"	c
RcIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs	/^impl<A, I> Iterator for RcIter<I>$/;"	c
RcIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs	/^impl<I> Clone for RcIter<I> {$/;"	c
RcIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs	/^impl<I> DoubleEndedIterator for RcIter<I>$/;"	c
RcIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs	/^pub struct RcIter<I> {$/;"	s
ReadError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/read.rs	/^impl fmt::Display for ReadError {$/;"	c
ReadError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/read.rs	/^impl std::error::Error for ReadError {$/;"	c
ReadError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/read.rs	/^pub struct ReadError(std::io::Error);$/;"	s
ReadRng	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/read.rs	/^impl<R: Read> ReadRng<R> {$/;"	c
ReadRng	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/read.rs	/^impl<R: Read> RngCore for ReadRng<R> {$/;"	c
ReadRng	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/read.rs	/^pub struct ReadRng<R> {$/;"	s
Real	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/mod.rs	/^pub trait Real: RealField {}$/;"	i
Real	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^pub trait Real: Num + Copy + NumCast + PartialOrd + Neg<Output = Self> {$/;"	i
RealField	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    type RealField = N;$/;"	t	implementation:Complex
RealField	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    type RealField: RealField;$/;"	t	interface:ComplexField
RealField	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/real.rs	/^pub trait RealField:$/;"	i
RealField	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/vector.rs	/^    type RealField: RealField;$/;"	t	interface:NormedSpace
RealField	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^    type RealField = <N as ComplexField>::RealField;$/;"	t
RealField	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_alga.rs	/^    type RealField = N;$/;"	t
RealField	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    type RealField = N;$/;"	t	implementation:Quaternion
Reallocator	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs	/^pub trait Reallocator<N: Scalar, RFrom: Dim, CFrom: Dim, RTo: Dim, CTo: Dim>:$/;"	i
Record	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^impl<'a> Record<'a> {$/;"	c
Record	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^pub struct Record<'a> {$/;"	s
RecordBuilder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^impl<'a> RecordBuilder<'a> {$/;"	c
RecordBuilder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^pub struct RecordBuilder<'a> {$/;"	s
Red	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    Red,$/;"	e	enum:Color
Ref	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/expand.rs	/^enum Ref<'a> {$/;"	g
Ref	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/expand.rs	/^impl From<usize> for Ref<'static> {$/;"	c
Ref	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/expand.rs	/^impl<'a> From<&'a str> for Ref<'a> {$/;"	c
RefNum	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^pub trait RefNum<Base>: NumOps<Base, Base> + for<'r> NumOps<&'r Base, Base> {}$/;"	i
Reflection	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/reflection.rs	/^impl<N: ComplexField, D: Dim, S: Storage<N, D>> Reflection<N, D, S> {$/;"	c
Reflection	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/reflection.rs	/^pub struct Reflection<N: Scalar, D: Dim, S: Storage<N, D>> {$/;"	s
Regex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/pattern.rs	/^impl<'r, 't> Pattern<'t> for &'r Regex {$/;"	c
Regex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^impl From<Exec> for Regex {$/;"	c
Regex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^impl FromStr for Regex {$/;"	c
Regex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^impl Regex {$/;"	c
Regex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^impl fmt::Debug for Regex {$/;"	c
Regex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^impl fmt::Display for Regex {$/;"	c
Regex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^pub struct Regex(Exec);$/;"	s
Regex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^impl From<Exec> for Regex {$/;"	c
Regex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^impl FromStr for Regex {$/;"	c
Regex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^impl Regex {$/;"	c
Regex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^impl fmt::Debug for Regex {$/;"	c
Regex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^impl fmt::Display for Regex {$/;"	c
Regex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^pub struct Regex(Exec);$/;"	s
RegexOptions	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_builder.rs	/^impl Default for RegexOptions {$/;"	c
RegexOptions	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_builder.rs	/^pub struct RegexOptions {$/;"	s
RegexSearcher	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/pattern.rs	/^pub struct RegexSearcher<'r, 't> {$/;"	s
RegexSearcher	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/pattern.rs	/^unsafe impl<'r, 't> Searcher<'t> for RegexSearcher<'r, 't> {$/;"	c
RegularExpression	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_trait.rs	/^pub trait RegularExpression: Sized {$/;"	i
Remainder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Remainder;$/;"	t	interface:PrivateDiv
Remainder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Remainder;$/;"	t	interface:PrivateDivIf
Remainder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Remainder = Diff<R, D>;$/;"	t
Remainder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Remainder = PrivateDivIfRem<$/;"	t
Remainder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Remainder = PrivateDivRem<N, D, Q, R, Sub1<UInt<Ui, Bi>>>;$/;"	t
Remainder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Remainder = PrivateDivRem<N, D, SetBitOut<Q, UInt<Ui, Bi>, B1>, U0, Sub1<UInt<Ui, Bi>>>/;"	t
Remainder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Remainder = R;$/;"	t	implementation:PrivateDivIf
Remainder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Remainder = U0;$/;"	t
Remainder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type Remainder =$/;"	t
RepeatCall	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs	/^impl<A, F> Iterator for RepeatCall<F>$/;"	c
RepeatCall	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs	/^impl<F> fmt::Debug for RepeatCall<F>$/;"	c
RepeatCall	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs	/^pub struct RepeatCall<F> {$/;"	s
RepeatN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/repeatn.rs	/^impl<A> DoubleEndedIterator for RepeatN<A>$/;"	c
RepeatN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/repeatn.rs	/^impl<A> ExactSizeIterator for RepeatN<A>$/;"	c
RepeatN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/repeatn.rs	/^impl<A> Iterator for RepeatN<A>$/;"	c
RepeatN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/repeatn.rs	/^pub struct RepeatN<A> {$/;"	s
Replacer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^pub trait Replacer {$/;"	i
Replacer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^pub trait Replacer {$/;"	i
ReplacerRef	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^impl<'a, R: Replacer + ?Sized + 'a> Replacer for ReplacerRef<'a, R> {$/;"	c
ReplacerRef	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^pub struct ReplacerRef<'a, R: ?Sized + 'a>(&'a mut R);$/;"	s
ReplacerRef	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^impl<'a, R: Replacer + ?Sized + 'a> Replacer for ReplacerRef<'a, R> {$/;"	c
ReplacerRef	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^pub struct ReplacerRef<'a, R: ?Sized + 'a>(&'a mut R);$/;"	s
Representative	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs	/^    type Representative = D;$/;"	t	implementation:ShapeConstraint
Representative	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs	/^    type Representative: Dim;$/;"	t	interface:DimEq
Representative	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs	/^    type Representative: Dim;$/;"	t	interface:SameDimension
Representative	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^    type Representative = T;$/;"	t	implementation:T
Representative	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^    type Representative: TCategory;$/;"	t	interface:TCategoryMul
ReseedingCore	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/reseeding.rs	/^impl<R, Rsdr> BlockRngCore for ReseedingCore<R, Rsdr>$/;"	c
ReseedingCore	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/reseeding.rs	/^impl<R, Rsdr> Clone for ReseedingCore<R, Rsdr>$/;"	c
ReseedingCore	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/reseeding.rs	/^impl<R, Rsdr> CryptoRng for ReseedingCore<R, Rsdr>$/;"	c
ReseedingCore	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/reseeding.rs	/^impl<R, Rsdr> ReseedingCore<R, Rsdr>$/;"	c
ReseedingCore	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/reseeding.rs	/^struct ReseedingCore<R, Rsdr> {$/;"	s
ReseedingRng	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/reseeding.rs	/^impl<R, Rsdr: RngCore> RngCore for ReseedingRng<R, Rsdr>$/;"	c
ReseedingRng	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/reseeding.rs	/^impl<R, Rsdr> Clone for ReseedingRng<R, Rsdr>$/;"	c
ReseedingRng	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/reseeding.rs	/^impl<R, Rsdr> CryptoRng for ReseedingRng<R, Rsdr>$/;"	c
ReseedingRng	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/reseeding.rs	/^impl<R, Rsdr> ReseedingRng<R, Rsdr>$/;"	c
ReseedingRng	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/reseeding.rs	/^pub struct ReseedingRng<R, Rsdr>(BlockRng<ReseedingCore<R, Rsdr>>)$/;"	s
Rest	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^    type Rest = GenericArray<T, M>;$/;"	t
Rest	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^    type Rest: GenericSequence<T, Length = M>;$/;"	t	interface:Concat
Result	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^type Result = result::Result<Patch, Error>;$/;"	t
Result	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^impl<T> Result<T> {$/;"	c
Result	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^pub enum Result<T> {$/;"	g
Results	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/reseeding.rs	/^    type Results = <R as BlockRngCore>::Results;$/;"	t
Rgb	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    Rgb(u8, u8, u8),$/;"	e	enum:Color
Right	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs	/^    Right(B),$/;"	e	enum:EitherOrBoth
Ring	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^    type Ring = N;$/;"	t
Ring	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    type Ring = N;$/;"	t	implementation:Quaternion
Ring	/Users/williamcashman/Honours/Program/n_poly/src/algebras/mod.rs	/^pub trait Ring: Group + One {$/;"	i
Rng	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^pub trait Rng: RngCore {$/;"	i
Rng	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/small.rs	/^type Rng = rand_pcg::Pcg32;$/;"	t
Rng	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/small.rs	/^type Rng = rand_pcg::Pcg64Mcg;$/;"	t
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/id.rs	/^    type Rotation = Id;$/;"	t	implementation:Id
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    type Rotation = Id;$/;"	t
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    type Rotation: Rotation<E>;$/;"	t	interface:AffineTransformation
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^pub trait Rotation<E: EuclideanSpace>:$/;"	i
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs	/^impl<N: SimdRealField, D: DimName> AbstractRotation<N, D> for Rotation<N, D>$/;"	c
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alga.rs	/^    type Rotation = R;$/;"	t
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    type Rotation = Self;$/;"	t	implementation:UnitQuaternion
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^impl<'a, N: Scalar, D: DimName> Deserialize<'a> for Rotation<N, D>$/;"	c
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^impl<N, D: DimName> AbsDiffEq for Rotation<N, D>$/;"	c
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^impl<N, D: DimName> RelativeEq for Rotation<N, D>$/;"	c
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^impl<N, D: DimName> UlpsEq for Rotation<N, D>$/;"	c
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^impl<N, D: DimName> fmt::Display for Rotation<N, D>$/;"	c
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^impl<N, D> Abomonation for Rotation<N, D>$/;"	c
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^impl<N: Scalar + Copy, D: DimName> Copy for Rotation<N, D>$/;"	c
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^impl<N: Scalar + Eq, D: DimName> Eq for Rotation<N, D> where DefaultAllocator: Allocator<N, D, D/;"	c
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^impl<N: Scalar + PartialEq, D: DimName> PartialEq for Rotation<N, D>$/;"	c
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^impl<N: Scalar + hash::Hash, D: DimName + hash::Hash> hash::Hash for Rotation<N, D>$/;"	c
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^impl<N: Scalar, D: DimName> Clone for Rotation<N, D>$/;"	c
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^impl<N: Scalar, D: DimName> Rotation<N, D>$/;"	c
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^impl<N: Scalar, D: DimName> Serialize for Rotation<N, D>$/;"	c
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^impl<N: SimdRealField, D: DimName> Rotation<N, D>$/;"	c
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^pub struct Rotation<N: Scalar, D: DimName>$/;"	s
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alga.rs	/^    type Rotation = Self;$/;"	t
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alga.rs	/^impl<N: RealField + simba::scalar::RealField, D: DimName> AbstractMagma<Multiplicative>$/;"	c
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alga.rs	/^impl<N: RealField + simba::scalar::RealField, D: DimName> AffineTransformation<Point<N, D>>$/;"	c
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alga.rs	/^impl<N: RealField + simba::scalar::RealField, D: DimName> Identity<Multiplicative>$/;"	c
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alga.rs	/^impl<N: RealField + simba::scalar::RealField, D: DimName> ProjectiveTransformation<Point<N, D>>$/;"	c
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alga.rs	/^impl<N: RealField + simba::scalar::RealField, D: DimName> Similarity<Point<N, D>> for Rotation<N/;"	c
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alga.rs	/^impl<N: RealField + simba::scalar::RealField, D: DimName> Transformation<Point<N, D>>$/;"	c
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alga.rs	/^impl<N: RealField + simba::scalar::RealField, D: DimName> TwoSidedInverse<Multiplicative>$/;"	c
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alga.rs	/^impl<N: RealField + simba::scalar::RealField, D: DimName> linear::Rotation<Point<N, D>>$/;"	c
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_construction.rs	/^impl<N, D: DimName> One for Rotation<N, D>$/;"	c
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_construction.rs	/^impl<N, D: DimName> Rotation<N, D>$/;"	c
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^impl<N1, N2, D, C> SubsetOf<Transform<N2, D, C>> for Rotation<N1, D>$/;"	c
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^impl<N1, N2, D: DimName, R> SubsetOf<Isometry<N2, D, R>> for Rotation<N1, D>$/;"	c
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^impl<N1, N2, D: DimName, R> SubsetOf<Similarity<N2, D, R>> for Rotation<N1, D>$/;"	c
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^impl<N1, N2, D: DimName> SubsetOf<Rotation<N2, D>> for Rotation<N1, D>$/;"	c
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^impl<N1, N2, D> SubsetOf<MatrixN<N2, DimNameSum<D, U1>>> for Rotation<N1, D>$/;"	c
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^impl<N: Scalar + PrimitiveSimdValue, D: DimName> From<[Rotation<N::Element, D>; 16]>$/;"	c
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^impl<N: Scalar + PrimitiveSimdValue, D: DimName> From<[Rotation<N::Element, D>; 2]>$/;"	c
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^impl<N: Scalar + PrimitiveSimdValue, D: DimName> From<[Rotation<N::Element, D>; 4]>$/;"	c
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^impl<N: Scalar + PrimitiveSimdValue, D: DimName> From<[Rotation<N::Element, D>; 8]>$/;"	c
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_ops.rs	/^impl<N: Scalar, D: DimName> Index<(usize, usize)> for Rotation<N, D>$/;"	c
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_simba.rs	/^impl<N, D> SimdValue for Rotation<N, D>$/;"	c
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alga.rs	/^    type Rotation = R;$/;"	t
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alga.rs	/^    type Rotation = Id;$/;"	t
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_alga.rs	/^    type Rotation = Self;$/;"	t
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs	/^impl<'b, N: SimdRealField> DivAssign<&'b UnitComplex<N>> for Rotation<N, U2>$/;"	c
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs	/^impl<'b, N: SimdRealField> MulAssign<&'b UnitComplex<N>> for Rotation<N, U2>$/;"	c
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs	/^impl<N: SimdRealField> DivAssign<UnitComplex<N>> for Rotation<N, U2>$/;"	c
Rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs	/^impl<N: SimdRealField> MulAssign<UnitComplex<N>> for Rotation<N, U2>$/;"	c
Rotation2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alias.rs	/^pub type Rotation2<N> = Rotation<N, U2>;$/;"	t
Rotation2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^impl<N1, N2> SubsetOf<UnitComplex<N2>> for Rotation2<N1>$/;"	c
Rotation2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^impl<N: SimdRealField + Arbitrary> Arbitrary for Rotation2<N>$/;"	c
Rotation2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^impl<N: SimdRealField> Rotation2<N> {$/;"	c
Rotation2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs	/^impl<N: SimdRealField> From<UnitComplex<N>> for Rotation2<N>$/;"	c
Rotation3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^impl<N: SimdRealField> From<UnitQuaternion<N>> for Rotation3<N>$/;"	c
Rotation3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alias.rs	/^pub type Rotation3<N> = Rotation<N, U3>;$/;"	t
Rotation3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^impl<N1, N2> SubsetOf<UnitQuaternion<N2>> for Rotation3<N1>$/;"	c
Rotation3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^impl<N: RealField> From<mint::EulerAngles<N, mint::IntraXYZ>> for Rotation3<N> {$/;"	c
Rotation3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^impl<N: SimdRealField + Arbitrary> Arbitrary for Rotation3<N>$/;"	c
Rotation3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^impl<N: SimdRealField> Rotation3<N>$/;"	c
RowDVector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type RowDVector<N> = Matrix<N, U1, Dynamic, VecStorage<N, U1, Dynamic>>;$/;"	t
RowIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^impl<'a, N: Scalar, R: Dim, C: Dim, S: 'a + Storage<N, R, C>> ExactSizeIterator$/;"	c
RowIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^impl<'a, N: Scalar, R: Dim, C: Dim, S: 'a + Storage<N, R, C>> Iterator for RowIter<'a, N, R, C, /;"	c
RowIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^impl<'a, N: Scalar, R: Dim, C: Dim, S: 'a + Storage<N, R, C>> RowIter<'a, N, R, C, S> {$/;"	c
RowIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^pub struct RowIter<'a, N: Scalar, R: Dim, C: Dim, S: Storage<N, R, C>> {$/;"	s
RowIterMut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^impl<'a, N: Scalar, R: Dim, C: Dim, S: 'a + StorageMut<N, R, C>> ExactSizeIterator$/;"	c
RowIterMut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^impl<'a, N: Scalar, R: Dim, C: Dim, S: 'a + StorageMut<N, R, C>> Iterator$/;"	c
RowIterMut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^impl<'a, N: Scalar, R: Dim, C: Dim, S: 'a + StorageMut<N, R, C>> RowIterMut<'a, N, R, C, S> {$/;"	c
RowIterMut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^pub struct RowIterMut<'a, N: Scalar, R: Dim, C: Dim, S: StorageMut<N, R, C>> {$/;"	s
RowVector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^pub type RowVector<N, D, S> = Matrix<N, U1, D, S>;$/;"	t
RowVector1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type RowVector1<N> = RowVectorN<N, U1>;$/;"	t
RowVector2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type RowVector2<N> = RowVectorN<N, U2>;$/;"	t
RowVector3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type RowVector3<N> = RowVectorN<N, U3>;$/;"	t
RowVector4	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type RowVector4<N> = RowVectorN<N, U4>;$/;"	t
RowVector5	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type RowVector5<N> = RowVectorN<N, U5>;$/;"	t
RowVector6	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type RowVector6<N> = RowVectorN<N, U6>;$/;"	t
RowVectorN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type RowVectorN<N, D> = MatrixMN<N, U1, D>;$/;"	t
S	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/functional.rs	/^unsafe impl<'a, T, S: GenericSequence<T>> FunctionalSequence<T> for &'a S$/;"	c
S	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/functional.rs	/^unsafe impl<'a, T, S: GenericSequence<T>> FunctionalSequence<T> for &'a mut S$/;"	c
S	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/functional.rs	/^unsafe impl<'a, T, U, S: MappedGenericSequence<T, U>> MappedGenericSequence<T, U> for &'a S$/;"	c
S	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/functional.rs	/^unsafe impl<'a, T, U, S: MappedGenericSequence<T, U>> MappedGenericSequence<T, U> for &'a mut S$/;"	c
S	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^unsafe impl<'a, T: 'a, S: GenericSequence<T>> GenericSequence<T> for &'a S$/;"	c
S	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^unsafe impl<'a, T: 'a, S: GenericSequence<T>> GenericSequence<T> for &'a mut S$/;"	c
S	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^impl<S> Source for [S]$/;"	c
SCALE	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/scan.rs	/^    static SCALE: [i64; 10] = [0, 100_000_000, 10_000_000, 1_000_000, 100_000, 10_000,$/;"	v	function:nanosecond
SCALE	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/scan.rs	/^    static SCALE: [i64; 10] = [0, 100_000_000, 10_000_000, 1_000_000, 100_000, 10_000,$/;"	v	function:nanosecond_fixed
SET_LOGGER_ERROR	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^static SET_LOGGER_ERROR: &'static str = "attempted to set a logger after the logging system \\$/;"	v
SHORT_MONTHS	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    static SHORT_MONTHS: [&'static str; 12] =$/;"	v	function:format
SHORT_WEEKDAYS	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    static SHORT_WEEKDAYS: [&'static str; 7] =$/;"	v	function:format
SP	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/subset.rs	/^impl<SS: SubsetOf<SP>, SP> SupersetOf<SS> for SP {$/;"	c
STATE	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^static STATE: AtomicUsize = ATOMIC_USIZE_INIT;$/;"	v
SVD	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs	/^impl<N: ComplexField, R: DimMin<C>, C: Dim> Copy for SVD<N, R, C>$/;"	c
SVD	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs	/^impl<N: ComplexField, R: DimMin<C>, C: Dim> SVD<N, R, C>$/;"	c
SVD	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs	/^pub struct SVD<N: ComplexField, R: DimMin<C>, C: Dim>$/;"	s
Same	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^pub trait Same<Rhs = Self> {$/;"	i
SameDimension	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs	/^pub trait SameDimension<D1: Dim, D2: Dim>:$/;"	i
SameShapeAllocator	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs	/^pub trait SameShapeAllocator<N, R1, C1, R2, C2>:$/;"	i
SameShapeC	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs	/^pub type SameShapeC<C1, C2> = <ShapeConstraint as SameNumberOfColumns<C1, C2>>::Representative;$/;"	t
SameShapeR	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs	/^pub type SameShapeR<R1, R2> = <ShapeConstraint as SameNumberOfRows<R1, R2>>::Representative;$/;"	t
SameShapeStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs	/^pub type SameShapeStorage<N, R1, C1, R2, C2> =$/;"	t
SameShapeVectorAllocator	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs	/^pub trait SameShapeVectorAllocator<N, R1, R2>:$/;"	i
SampleBorrow	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^pub trait SampleBorrow<Borrowed> {$/;"	i
SampleUniform	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^pub trait SampleUniform: Sized {$/;"	i
Sampler	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^            type Sampler = UniformMyF32;$/;"	t	implementation:tests::test_custom_uniform::MyF32
Sampler	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^    type Sampler = UniformDuration;$/;"	t	implementation:Duration
Sampler	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^    type Sampler: UniformSampler<X = Self>;$/;"	t	interface:SampleUniform
Sat	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    Sat = 5,$/;"	e	enum:Weekday
Saturating	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/saturating.rs	/^pub trait Saturating {$/;"	i
Save	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    Save { slot: usize },$/;"	e	enum:InstHole
Save	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    Save(InstSave),$/;"	e	enum:Inst
SaveRestore	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/backtrack.rs	/^    SaveRestore { slot: usize, old_pos: Option<usize> },$/;"	e	enum:Job
Scalar	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/scalar.rs	/^pub trait Scalar: Clone + PartialEq + Debug + Any {$/;"	i
ScalarRing	/Users/williamcashman/Honours/Program/n_poly/src/algebras/mod.rs	/^pub trait ScalarRing:$/;"	i
Scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/id.rs	/^    type Scaling = Id;$/;"	t	implementation:Id
Scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    type Scaling = R;$/;"	t
Scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    type Scaling: Scaling<E>;$/;"	t	interface:Similarity
Scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^pub trait Scaling<E: EuclideanSpace>:$/;"	i
Scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alga.rs	/^    type Scaling = Id;$/;"	t
Scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    type Scaling = Id;$/;"	t	implementation:UnitQuaternion
Scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alga.rs	/^    type Scaling = Id;$/;"	t
Scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alga.rs	/^    type Scaling = N;$/;"	t
Scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alga.rs	/^    type Scaling = Id;$/;"	t
Scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_alga.rs	/^    type Scaling = Id;$/;"	t
Schur	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs	/^impl<N: ComplexField, D: Dim> Copy for Schur<N, D>$/;"	c
Schur	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs	/^impl<N: ComplexField, D: Dim> Schur<N, D>$/;"	c
Schur	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs	/^pub struct Schur<N: ComplexField, D: Dim>$/;"	s
Searcher	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/pattern.rs	/^    type Searcher = RegexSearcher<'r, 't>;$/;"	t	implementation:Regex
Second	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    Second,$/;"	e	enum:Numeric
Second	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^    type Second = &'a GenericArray<T, Diff<N, K>>;$/;"	t
Second	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^    type Second = &'a mut GenericArray<T, Diff<N, K>>;$/;"	t
Second	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^    type Second = GenericArray<T, Diff<N, K>>;$/;"	t
Second	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^    type Second: GenericSequence<T>;$/;"	t	interface:Split
Seconds	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    Seconds,$/;"	e	enum:TimestampPrecision
SecondsFormat	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^pub enum SecondsFormat {$/;"	g
SecondsTimestampVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^        impl<'de> de::Visitor<'de> for SecondsTimestampVisitor {$/;"	c	module:serde::ts_seconds
SecondsTimestampVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    pub struct SecondsTimestampVisitor;$/;"	s	module:serde
Secs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    Secs,$/;"	e	enum:SecondsFormat
Seed	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/small.rs	/^    type Seed = <Rng as SeedableRng>::Seed;$/;"	t	implementation:SmallRng
Seed	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/std.rs	/^    type Seed = <Rng as SeedableRng>::Seed;$/;"	t	implementation:StdRng
Sequence	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    type Sequence = Self;$/;"	t
Sequence	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^    type Sequence = S::Sequence;$/;"	t
Sequence	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^    type Sequence: GenericSequence<T, Length = Self::Length> + FromIterator<T>;$/;"	t	interface:GenericSequence
SequenceItem	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^pub type SequenceItem<T> = <T as IntoIterator>::Item;$/;"	t
SerdeError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^enum SerdeError<V: fmt::Display, D: fmt::Display> {$/;"	g
SerdeError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^impl<V: fmt::Display, D: fmt::Display> fmt::Debug for SerdeError<V, D> {$/;"	c
SerdeError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^impl<V: fmt::Display, D: fmt::Display> fmt::Display for SerdeError<V, D> {$/;"	c
SetBit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^pub trait SetBit<I, B> {$/;"	i
SetBitOut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^pub type SetBitOut<N, I, B> = <N as SetBit<I, B>>::Output;$/;"	t
SetLoggerError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^impl error::Error for SetLoggerError {$/;"	c
SetLoggerError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^impl fmt::Display for SetLoggerError {$/;"	c
SetLoggerError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^pub struct SetLoggerError(());$/;"	s
Setter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parse.rs	/^                type Setter = fn(&mut Parsed, i64) -> ParseResult<()>;$/;"	t	function:parse
ShapeConstraint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs	/^impl<D: Dim> DimEq<D, D> for ShapeConstraint {$/;"	c
ShapeConstraint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs	/^impl<D: Dim> SameDimension<D, D> for ShapeConstraint {$/;"	c
ShapeConstraint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs	/^impl<D: DimName> DimEq<D, Dynamic> for ShapeConstraint {$/;"	c
ShapeConstraint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs	/^impl<D: DimName> DimEq<Dynamic, D> for ShapeConstraint {$/;"	c
ShapeConstraint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs	/^impl<D: DimName> SameDimension<D, Dynamic> for ShapeConstraint {$/;"	c
ShapeConstraint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs	/^impl<D: DimName> SameDimension<Dynamic, D> for ShapeConstraint {$/;"	c
ShapeConstraint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs	/^impl<R1: Dim, C1: Dim, R2: Dim, C2: Dim> AreMultipliable<R1, C1, R2, C2> for ShapeConstraint whe/;"	c
ShapeConstraint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs	/^pub struct ShapeConstraint;$/;"	s
ShiftDiff	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub trait ShiftDiff<Rhs> {$/;"	i
ShiftDiffOut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub type ShiftDiffOut<A, Rhs> = <A as ShiftDiff<Rhs>>::Output;$/;"	t
Shleft	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/operator_aliases.rs	/^pub type Shleft<A, B> = <A as Shl<B>>::Output;$/;"	t
ShortMonthName	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    ShortMonthName,$/;"	e	enum:Fixed
ShortWeekdayName	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    ShortWeekdayName,$/;"	e	enum:Fixed
Shorten	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^pub unsafe trait Shorten<T>: Sized + GenericSequence<T> {$/;"	i
Shorter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^    type Shorter = GenericArray<T, Sub1<N>>;$/;"	t
Shorter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^    type Shorter: Lengthen<T, Longer = Self>;$/;"	t	interface:Shorten
Shorter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/diff.rs	/^    Shorter(usize, PutBack<I>),$/;"	e	enum:Diff
Shright	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/operator_aliases.rs	/^pub type Shright<A, B> = <A as Shr<B>>::Output;$/;"	t
Signed	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    Signed(i64),$/;"	e	enum:Primitive
Signed	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/sign.rs	/^pub trait Signed: Sized + Num + Neg<Output = Self> {$/;"	i
SimdBool	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_simba.rs	/^    type SimdBool = N::SimdBool;$/;"	t
SimdBool	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_simba.rs	/^    type SimdBool = N::SimdBool;$/;"	t
SimdBool	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_simba.rs	/^    type SimdBool = N::SimdBool;$/;"	t
SimdBool	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_simba.rs	/^    type SimdBool = N::SimdBool;$/;"	t
SimdBool	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_simba.rs	/^    type SimdBool = N::SimdBool;$/;"	t
SimdBool	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_simba.rs	/^    type SimdBool = N::SimdBool;$/;"	t
SimdBool	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_simba.rs	/^    type SimdBool = N::SimdBool;$/;"	t
SimdBool	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_simba.rs	/^    type SimdBool = N::SimdBool;$/;"	t
SimdBool	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_simba.rs	/^    type SimdBool = N::SimdBool;$/;"	t
Similarity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^pub trait Similarity<E: EuclideanSpace>:$/;"	i
Similarity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^impl<N, D: DimName, R> fmt::Display for Similarity<N, D, R>$/;"	c
Similarity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^impl<N: RealField, D: DimName, R> AbsDiffEq for Similarity<N, D, R>$/;"	c
Similarity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^impl<N: RealField, D: DimName, R> RelativeEq for Similarity<N, D, R>$/;"	c
Similarity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^impl<N: RealField, D: DimName, R> UlpsEq for Similarity<N, D, R>$/;"	c
Similarity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^impl<N: Scalar + Copy + Zero, D: DimName + Copy, R: AbstractRotation<N, D> + Copy> Copy$/;"	c
Similarity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^impl<N: Scalar + Zero, D: DimName, R: AbstractRotation<N, D> + Clone> Clone for Similarity<N, D,/;"	c
Similarity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^impl<N: Scalar + Zero, D: DimName, R> Similarity<N, D, R>$/;"	c
Similarity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^impl<N: Scalar + hash::Hash, D: DimName + hash::Hash, R: hash::Hash> hash::Hash$/;"	c
Similarity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^impl<N: Scalar, D: DimName, R> Abomonation for Similarity<N, D, R>$/;"	c
Similarity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^impl<N: Scalar, D: DimName, R> Similarity<N, D, R>$/;"	c
Similarity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^impl<N: SimdRealField, D: DimName, R> Eq for Similarity<N, D, R>$/;"	c
Similarity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^impl<N: SimdRealField, D: DimName, R> PartialEq for Similarity<N, D, R>$/;"	c
Similarity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^impl<N: SimdRealField, D: DimName, R> Similarity<N, D, R>$/;"	c
Similarity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^pub struct Similarity<N: Scalar, D: DimName, R>$/;"	s
Similarity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alga.rs	/^impl<N: RealField + simba::scalar::RealField, D: DimName, R> AbstractMagma<Multiplicative>$/;"	c
Similarity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alga.rs	/^impl<N: RealField + simba::scalar::RealField, D: DimName, R> AffineTransformation<Point<N, D>>$/;"	c
Similarity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alga.rs	/^impl<N: RealField + simba::scalar::RealField, D: DimName, R> AlgaSimilarity<Point<N, D>>$/;"	c
Similarity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alga.rs	/^impl<N: RealField + simba::scalar::RealField, D: DimName, R> Identity<Multiplicative>$/;"	c
Similarity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alga.rs	/^impl<N: RealField + simba::scalar::RealField, D: DimName, R> ProjectiveTransformation<Point<N, D/;"	c
Similarity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alga.rs	/^impl<N: RealField + simba::scalar::RealField, D: DimName, R> Transformation<Point<N, D>>$/;"	c
Similarity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alga.rs	/^impl<N: RealField + simba::scalar::RealField, D: DimName, R> TwoSidedInverse<Multiplicative>$/;"	c
Similarity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs	/^impl<N, D: DimName, R> Arbitrary for Similarity<N, D, R>$/;"	c
Similarity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs	/^impl<N: SimdRealField, D: DimName, R> One for Similarity<N, D, R>$/;"	c
Similarity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs	/^impl<N: SimdRealField, D: DimName, R> Similarity<N, D, R>$/;"	c
Similarity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs	/^impl<N: SimdRealField> Similarity<N, U2, Rotation2<N>>$/;"	c
Similarity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs	/^impl<N: SimdRealField> Similarity<N, U2, UnitComplex<N>>$/;"	c
Similarity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_conversion.rs	/^impl<N1, N2, D, R, C> SubsetOf<Transform<N2, D, C>> for Similarity<N1, D, R>$/;"	c
Similarity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_conversion.rs	/^impl<N1, N2, D, R> SubsetOf<MatrixN<N2, DimNameSum<D, U1>>> for Similarity<N1, D, R>$/;"	c
Similarity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_conversion.rs	/^impl<N1, N2, D: DimName, R1, R2> SubsetOf<Similarity<N2, D, R2>> for Similarity<N1, D, R1>$/;"	c
Similarity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_conversion.rs	/^impl<N: Scalar + Zero + PrimitiveSimdValue, D: DimName, R>$/;"	c
Similarity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_simba.rs	/^impl<N: SimdRealField, D: DimName, R> SimdValue for Similarity<N, D, R>$/;"	c
Similarity2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alias.rs	/^pub type Similarity2<N> = Similarity<N, U2, UnitComplex<N>>;$/;"	t
Similarity3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alias.rs	/^pub type Similarity3<N> = Similarity<N, U3, UnitQuaternion<N>>;$/;"	t
SimilarityMatrix2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alias.rs	/^pub type SimilarityMatrix2<N> = Similarity<N, U2, Rotation2<N>>;$/;"	t
SimilarityMatrix3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alias.rs	/^pub type SimilarityMatrix3<N> = Similarity<N, U3, Rotation3<N>>;$/;"	t
Single	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^    Single(T),$/;"	e	enum:LocalResult
Single	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    Single(&'a [u8]),$/;"	e	enum:LiteralIter
SingleByteSet	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^impl SingleByteSet {$/;"	c
SingleByteSet	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^struct SingleByteSet {$/;"	s
Size	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^    type Size = D;$/;"	t	implementation:RangeFull
Size	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^    type Size = Dynamic;$/;"	t	implementation:Range
Size	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^    type Size = Dynamic;$/;"	t	implementation:RangeFrom
Size	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^    type Size = Dynamic;$/;"	t	implementation:RangeTo
Size	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^    type Size = U1;$/;"	t	implementation:usize
Size	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^    type Size: Dim;$/;"	t	interface:SliceRange
SizeHint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/size_hint.rs	/^pub type SizeHint = (usize, Option<usize>);$/;"	t
SizedCache	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^impl<K: Hash + Eq + Clone, V> Cached<K, V> for SizedCache<K, V> {$/;"	c
SizedCache	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^impl<K: Hash + Eq, V> SizedCache<K, V> {$/;"	c
SizedCache	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^pub struct SizedCache<K, V> {$/;"	s
SliceChooseIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^impl<'a, S: Index<usize, Output = T> + ?Sized + 'a, T: 'a> ExactSizeIterator$/;"	c
SliceChooseIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^impl<'a, S: Index<usize, Output = T> + ?Sized + 'a, T: 'a> Iterator for SliceChooseIter<'a, S, T/;"	c
SliceChooseIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^pub struct SliceChooseIter<'a, S: ?Sized + 'a, T: 'a> {$/;"	s
SliceRandom	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^pub trait SliceRandom {$/;"	i
SliceRange	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^pub trait SliceRange<D: Dim> {$/;"	i
SliceStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^impl<'a, N: Scalar, R: Dim, C: Dim, RStride: Dim, CStride: Dim> Clone$/;"	c
SliceStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^impl<'a, N: Scalar, R: Dim, C: Dim, RStride: Dim, CStride: Dim> Copy$/;"	c
SliceStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^unsafe impl<'a, N: Scalar, R: Dim, CStride: Dim> ContiguousStorage<N, R, U1>$/;"	c
SliceStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^unsafe impl<'a, N: Scalar, R: DimName, C: Dim + IsNotStaticOne> ContiguousStorage<N, R, C>$/;"	c
SliceStorageMut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^unsafe impl<'a, N: Scalar, R: Dim, C: Dim, RStride: Dim, CStride: Dim> StorageMut<N, R, C>$/;"	c
SliceStorageMut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^unsafe impl<'a, N: Scalar, R: Dim, CStride: Dim> ContiguousStorage<N, R, U1>$/;"	c
SliceStorageMut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^unsafe impl<'a, N: Scalar, R: Dim, CStride: Dim> ContiguousStorageMut<N, R, U1>$/;"	c
SliceStorageMut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^unsafe impl<'a, N: Scalar, R: DimName, C: Dim + IsNotStaticOne> ContiguousStorage<N, R, C>$/;"	c
SliceStorageMut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^unsafe impl<'a, N: Scalar, R: DimName, C: Dim + IsNotStaticOne> ContiguousStorageMut<N, R, C>$/;"	c
Slot	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^impl<'a> Slot<'a> {$/;"	c
Slot	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^impl<'a> fmt::Debug for Slot<'a> {$/;"	c
Slot	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^pub struct Slot<'a> {$/;"	s
Slot	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_trait.rs	/^pub type Slot = Option<usize>;$/;"	t
Small	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    Small(GammaSmallShape),$/;"	e	enum:GammaRepr
Small	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^    Small {$/;"	e	enum:UniformDurationMode
SmallRng	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/small.rs	/^impl RngCore for SmallRng {$/;"	c
SmallRng	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/small.rs	/^impl SeedableRng for SmallRng {$/;"	c
SmallRng	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/small.rs	/^pub struct SmallRng(Rng);$/;"	s
Source	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^pub trait Source {$/;"	i
Space	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    Space(&'a str),$/;"	e	enum:Item
Space	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    Space,$/;"	e	enum:Pad
SparseSet	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/sparse.rs	/^impl Deref for SparseSet {$/;"	c
SparseSet	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/sparse.rs	/^impl SparseSet {$/;"	c
SparseSet	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/sparse.rs	/^impl fmt::Debug for SparseSet {$/;"	c
SparseSet	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/sparse.rs	/^impl<'a> IntoIterator for &'a SparseSet {$/;"	c
SparseSet	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/sparse.rs	/^pub struct SparseSet {$/;"	s
Split	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^pub unsafe trait Split<T, K>: GenericSequence<T>$/;"	i
Split	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    Split,$/;"	e	enum:MaybeInst
Split	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    Split(InstSplit),$/;"	e	enum:Inst
Split	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^impl<'r, 't> Iterator for Split<'r, 't> {$/;"	c
Split	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^pub struct Split<'r, 't> {$/;"	s
Split	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^impl<'r, 't> Iterator for Split<'r, 't> {$/;"	c
Split	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^pub struct Split<'r, 't> {$/;"	s
Split1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    Split1(InstPtr),$/;"	e	enum:MaybeInst
Split2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    Split2(InstPtr),$/;"	e	enum:MaybeInst
SplitN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^impl<'r, 't> Iterator for SplitN<'r, 't> {$/;"	c
SplitN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^pub struct SplitN<'r, 't> {$/;"	s
SplitN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^impl<'r, 't> Iterator for SplitN<'r, 't> {$/;"	c
SplitN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^pub struct SplitN<'r, 't> {$/;"	s
Sqrt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/operator_aliases.rs	/^pub type Sqrt<A> = <A as SquareRoot>::Output;$/;"	t
Square	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/operator_aliases.rs	/^pub type Square<A> = <A as Mul>::Output;$/;"	t
SquareMatrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/matrix.rs	/^pub trait SquareMatrix:$/;"	i
SquareMatrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^impl<N, D1: Dim, S: StorageMut<N, D1, D1>> SquareMatrix<N, D1, S>$/;"	c
SquareMatrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs	/^impl<N: RealField, D: DimNameSub<U1>, S: Storage<N, D, D>> SquareMatrix<N, D, S>$/;"	c
SquareMatrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs	/^impl<N: Scalar + Zero + One + ClosedMul + ClosedAdd, D: DimName, S: Storage<N, D, D>>$/;"	c
SquareMatrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs	/^impl<N: Scalar + Zero + One + ClosedMul + ClosedAdd, D: DimName, S: StorageMut<N, D, D>>$/;"	c
SquareMatrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^impl<N: Scalar, D: Dim, S: Storage<N, D, D>> SquareMatrix<N, D, S> {$/;"	c
SquareMatrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^impl<N: SimdComplexField, D: Dim, S: Storage<N, D, D>> SquareMatrix<N, D, S> {$/;"	c
SquareMatrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^pub type SquareMatrix<N, D, S> = Matrix<N, D, D, S>;$/;"	t
SquareMatrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/properties.rs	/^impl<N: RealField, D: Dim, S: Storage<N, D, D>> SquareMatrix<N, D, S>$/;"	c
SquareMatrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs	/^impl<N: ComplexField, D: DimSub<Dynamic>, S: Storage<N, D, D>> SquareMatrix<N, D, S>$/;"	c
SquareMatrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/determinant.rs	/^impl<N: ComplexField, D: DimMin<D, Output = D>, S: Storage<N, D, D>> SquareMatrix<N, D, S> {$/;"	c
SquareMatrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs	/^impl<N: ComplexField, D: DimSub<U1>, S: Storage<N, D, D>> SquareMatrix<N, D, S>$/;"	c
SquareMatrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/inverse.rs	/^impl<N: ComplexField, D: Dim, S: Storage<N, D, D>> SquareMatrix<N, D, S> {$/;"	c
SquareMatrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/inverse.rs	/^impl<N: ComplexField, D: Dim, S: StorageMut<N, D, D>> SquareMatrix<N, D, S> {$/;"	c
SquareMatrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs	/^impl<N: ComplexField, D: Dim, S: Storage<N, D, D>> SquareMatrix<N, D, S>$/;"	c
SquareMatrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs	/^impl<N: ComplexField, D: Dim, S: Storage<N, D, D>> SquareMatrix<N, D, S> {$/;"	c
SquareMatrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs	/^impl<N: ComplexField, D: DimSub<U1>, S: Storage<N, D, D>> SquareMatrix<N, D, S>$/;"	c
SquareMatrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs	/^impl<N: ComplexField, D: DimSub<U1>, S: Storage<N, D, D>> SquareMatrix<N, D, S>$/;"	c
SquareMatrixMut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/matrix.rs	/^pub trait SquareMatrixMut:$/;"	i
SquareRoot	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^pub trait SquareRoot {$/;"	i
Standard	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^impl<N: RealField, D: DimName> Distribution<Unit<VectorN<N, D>>> for Standard$/;"	c
Standard	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^impl<N: Scalar, R: Dim, C: Dim> Distribution<MatrixMN<N, R, C>> for Standard$/;"	c
Standard	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs	/^impl<N: RealField, D: DimName, R> Distribution<Isometry<N, D, R>> for Standard$/;"	c
Standard	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^impl<N: RealField> Distribution<Orthographic3<N>> for Standard$/;"	c
Standard	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^impl<N: RealField> Distribution<Perspective3<N>> for Standard$/;"	c
Standard	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs	/^impl<N: Scalar, D: DimName> Distribution<Point<N, D>> for Standard$/;"	c
Standard	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^impl<N: SimdRealField> Distribution<Quaternion<N>> for Standard$/;"	c
Standard	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^impl<N: SimdRealField> Distribution<UnitQuaternion<N>> for Standard$/;"	c
Standard	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^impl<N: SimdRealField> Distribution<Rotation2<N>> for Standard$/;"	c
Standard	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^impl<N: SimdRealField> Distribution<Rotation3<N>> for Standard$/;"	c
Standard	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs	/^impl<N: RealField, D: DimName, R> Distribution<Similarity<N, D, R>> for Standard$/;"	c
Standard	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_construction.rs	/^impl<N: Scalar, D: DimName> Distribution<Translation<N, D>> for Standard$/;"	c
Standard	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs	/^impl<N: SimdRealField> Distribution<UnitComplex<N>> for Standard$/;"	c
Standard	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/crand.rs	/^impl<T> Distribution<Complex<T>> for Standard$/;"	c
Standard	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/integer.rs	/^impl Distribution<u128> for Standard {$/;"	c
Standard	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/integer.rs	/^impl Distribution<u16> for Standard {$/;"	c
Standard	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/integer.rs	/^impl Distribution<u32> for Standard {$/;"	c
Standard	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/integer.rs	/^impl Distribution<u64> for Standard {$/;"	c
Standard	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/integer.rs	/^impl Distribution<u8> for Standard {$/;"	c
Standard	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/integer.rs	/^impl Distribution<usize> for Standard {$/;"	c
Standard	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^pub struct Standard;$/;"	s
Standard	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/other.rs	/^impl Distribution<()> for Standard {$/;"	c
Standard	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/other.rs	/^impl Distribution<bool> for Standard {$/;"	c
Standard	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/other.rs	/^impl Distribution<char> for Standard {$/;"	c
Standard	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/other.rs	/^impl<T> Distribution<Option<T>> for Standard$/;"	c
Standard	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/other.rs	/^impl<T> Distribution<Wrapping<T>> for Standard$/;"	c
StandardNormal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/normal.rs	/^impl Distribution<f64> for StandardNormal {$/;"	c
StandardNormal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/normal.rs	/^pub struct StandardNormal;$/;"	s
Start	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs	/^    Start {$/;"	e	enum:CompleteState
StartLine	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    StartLine,$/;"	e	enum:EmptyLook
StartOfIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs	/^    StartOfIter,$/;"	e	enum:MultiProductIterState
StartText	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    StartText,$/;"	e	enum:EmptyLook
StartUnknownLen	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs	/^    StartUnknownLen {$/;"	e	enum:PermutationState
State	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^        type State<T> = Result<T, Option<T>>;$/;"	t	method:Itertools::tree_fold1
State	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^impl State {$/;"	c
State	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^impl fmt::Debug for State {$/;"	c
State	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^struct State {$/;"	s
StateFlags	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^impl StateFlags {$/;"	c
StateFlags	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^impl fmt::Debug for StateFlags {$/;"	c
StateFlags	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^struct StateFlags(u8);$/;"	s
StateMap	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^impl StateMap {$/;"	c
StateMap	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^struct StateMap {$/;"	s
StatePtr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^type StatePtr = u32;$/;"	t
Static	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    Static(&'static str),$/;"	e	enum:MaybeStaticStr
Status	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^enum Status {$/;"	g
StdRng	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/std.rs	/^impl CryptoRng for StdRng {}$/;"	c
StdRng	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/std.rs	/^impl RngCore for StdRng {$/;"	c
StdRng	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/std.rs	/^impl SeedableRng for StdRng {$/;"	c
StdRng	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/std.rs	/^pub struct StdRng(Rng);$/;"	s
Stderr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^    Stderr,$/;"	e	enum:Target
Stdout	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^    Stdout,$/;"	e	enum:Target
Step	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^impl<I> ExactSizeIterator for Step<I>$/;"	c
Step	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^impl<I> Iterator for Step<I>$/;"	c
Step	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub struct Step<I> {$/;"	s
StepRng	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/mock.rs	/^impl RngCore for StepRng {$/;"	c
StepRng	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/mock.rs	/^impl StepRng {$/;"	c
StepRng	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/mock.rs	/^pub struct StepRng {$/;"	s
Storage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs	/^pub unsafe trait Storage<N: Scalar, R: Dim, C: Dim = U1>: Debug + Sized {$/;"	i
StorageMut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs	/^pub unsafe trait StorageMut<N: Scalar, R: Dim, C: Dim = U1>: Storage<N, R, C> {$/;"	i
Str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    Str(&'v str),$/;"	e	enum:Primitive
Str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/test.rs	/^    Str(String),$/;"	e	enum:Token
StrftimeItems	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/strftime.rs	/^impl<'a> Iterator for StrftimeItems<'a> {$/;"	c
StrftimeItems	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/strftime.rs	/^impl<'a> StrftimeItems<'a> {$/;"	c
StrftimeItems	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/strftime.rs	/^pub struct StrftimeItems<'a> {$/;"	s
String	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^    impl ToKey for String {$/;"	c	module:std_support
String	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    impl ToValue for String {$/;"	c	module:std_support
StudentT	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^impl Distribution<f64> for StudentT {$/;"	c
StudentT	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^impl StudentT {$/;"	c
StudentT	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^pub struct StudentT {$/;"	s
Style	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^impl Style {$/;"	c
Style	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^impl fmt::Debug for Style {$/;"	c
Style	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^pub struct Style {$/;"	s
StyledValue	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^impl<'a, T> StyledValue<'a, T> {$/;"	c
StyledValue	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^pub struct StyledValue<'a, T> {$/;"	s
Sub1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/operator_aliases.rs	/^pub type Sub1<A> = <A as Sub<::bit::B1>>::Output;$/;"	t
SubCaptureMatches	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^impl<'c, 't> Iterator for SubCaptureMatches<'c, 't> {$/;"	c
SubCaptureMatches	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^pub struct SubCaptureMatches<'c, 't: 'c> {$/;"	s
SubCaptureMatches	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^impl<'c, 't> Iterator for SubCaptureMatches<'c, 't> {$/;"	c
SubCaptureMatches	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^pub struct SubCaptureMatches<'c, 't: 'c> {$/;"	s
SubCapturesPosIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_trait.rs	/^impl<'c> Iterator for SubCapturesPosIter<'c> {$/;"	c
SubCapturesPosIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_trait.rs	/^pub struct SubCapturesPosIter<'c> {$/;"	s
SubTCategoryOf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^pub trait SubTCategoryOf<Other: TCategory>: TCategory {}$/;"	i
SubsecRound	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/round.rs	/^pub trait SubsecRound {$/;"	i
SubsetOf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/subset.rs	/^pub trait SubsetOf<T>: Sized {$/;"	i
SubtleStyle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^type SubtleStyle = &'static str;$/;"	t
SubtleStyle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^type SubtleStyle = StyledValue<'static, &'static str>;$/;"	t
SuffixCache	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^impl SuffixCache {$/;"	c
SuffixCache	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^struct SuffixCache {$/;"	s
SuffixCacheEntry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^struct SuffixCacheEntry {$/;"	s
SuffixCacheKey	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^struct SuffixCacheKey {$/;"	s
Sum	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/operator_aliases.rs	/^pub type Sum<A, B> = <A as Add<B>>::Output;$/;"	t
Sun	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    Sun = 6,$/;"	e	enum:Weekday
SuperTCategoryOf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^pub trait SuperTCategoryOf<Other: TCategory>: TCategory {}$/;"	i
SupersetOf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/subset.rs	/^pub trait SupersetOf<T>: Sized {$/;"	i
SupportsFFT	/Users/williamcashman/Honours/Program/n_poly/src/fft.rs	/^pub trait SupportsFFT: Field {$/;"	i
Sval	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    Sval(&'v sval_support::Value),$/;"	e	enum:Inner
Sval	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/test.rs	/^    Sval,$/;"	e	enum:Token
SvalVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    impl<'a, 'b: 'a> Visitor for SvalVisitor<'a, 'b> {$/;"	c	module:sval_support
SvalVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    struct SvalVisitor<'a, 'b: 'a>(&'a mut sval::value::Stream<'b>);$/;"	s	module:sval_support
SymmetricEigen	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs	/^impl<N: ComplexField, D: Dim> Copy for SymmetricEigen<N, D>$/;"	c
SymmetricEigen	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs	/^impl<N: ComplexField, D: Dim> SymmetricEigen<N, D>$/;"	c
SymmetricEigen	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs	/^pub struct SymmetricEigen<N: ComplexField, D: Dim>$/;"	s
SymmetricTridiagonal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs	/^impl<N: ComplexField, D: DimSub<U1>> Copy for SymmetricTridiagonal<N, D>$/;"	c
SymmetricTridiagonal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs	/^impl<N: ComplexField, D: DimSub<U1>> SymmetricTridiagonal<N, D>$/;"	c
SymmetricTridiagonal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs	/^pub struct SymmetricTridiagonal<N: ComplexField, D: DimSub<U1>>$/;"	s
Syntax	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/error.rs	/^    Syntax(String),$/;"	e	enum:Error
SystemTime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^impl<Tz: TimeZone> From<DateTime<Tz>> for SystemTime {$/;"	c
T	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/mod.rs	/^impl<T: RealField> Real for T {}$/;"	c
T	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/operator.rs	/^impl<T, Right> ClosedAdd<Right> for T where T: Add<Right, Output = T> + AddAssign<Right> {}$/;"	c
T	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/operator.rs	/^impl<T, Right> ClosedDiv<Right> for T where T: Div<Right, Output = T> + DivAssign<Right> {}$/;"	c
T	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/operator.rs	/^impl<T, Right> ClosedMul<Right> for T where T: Mul<Right, Output = T> + MulAssign<Right> {}$/;"	c
T	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/operator.rs	/^impl<T, Right> ClosedSub<Right> for T where T: Sub<Right, Output = T> + SubAssign<Right> {}$/;"	c
T	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/operator.rs	/^impl<T> ClosedNeg for T where T: Neg<Output = T> {}$/;"	c
T	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/round.rs	/^impl<T> SubsecRound for T$/;"	c
T	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^impl<T: ?Sized> Itertools for T where T: Iterator { }$/;"	c
T	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs	/^impl<T: TupleCollect> HomogeneousTuple for T {}$/;"	c
T	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^impl<'a, T> ToKey for &'a T$/;"	c
T	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^impl<'a, 'kvs, T> Visitor<'kvs> for &'a mut T$/;"	c
T	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^impl<'a, T> Source for &'a T$/;"	c
T	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^impl<'a, T> Fill for &'a T$/;"	c
T	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^impl<'a, T> ToValue for &'a T$/;"	c
T	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/scalar.rs	/^impl<T: Copy + PartialEq + Debug + Any> Scalar for T {$/;"	c
T	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^impl<T: TCategory> SuperTCategoryOf<T> for T {}$/;"	c
T	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^impl<T: TCategory> TCategoryMul<T> for T {$/;"	c
T	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^impl<T, Base> RefNum<Base> for T where T: NumOps<Base, Base> + for<'r> NumOps<&'r Base, Base> {}$/;"	c
T	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^impl<T, Rhs, Output> NumOps<Rhs, Output> for T where$/;"	c
T	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^impl<T, Rhs> NumAssignOps<Rhs> for T where$/;"	c
T	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^impl<T> NumAssign for T where T: Num + NumAssignOps {}$/;"	c
T	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^impl<T> NumAssignRef for T where T: NumAssign + for<'r> NumAssignOps<&'r T> {}$/;"	c
T	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^impl<T> NumRef for T where T: Num + for<'r> NumOps<&'r T> {}$/;"	c
T	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^impl<T: Float> Real for T {$/;"	c
T	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^impl<T> SliceRandom for [T] {$/;"	c
T	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^impl<'a, T: Input> Input for &'a T {$/;"	c
T	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^impl<T> Same<T> for T {$/;"	c
T	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^        type T = <SetBitOut<U0, U1, B1> as Same<U2>>::Output;$/;"	t	function:tests::test_div
T1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^impl<T1, T2> SubTCategoryOf<T2> for T1$/;"	c
T1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type T1 = <GetBitOut<U2, U0> as Same<B0>>::Output;$/;"	t	function:test_get_bit
T1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type T1 = <SetBitOut<U2, U0, B0> as Same<U2>>::Output;$/;"	t	function:test_set_bit
T10	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type T10 = <SetBitOut<U2, U4, B1> as Same<U18>>::Output;$/;"	t	function:test_set_bit
T11	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type T11 = <SetBitOut<U3, U0, B0> as Same<U2>>::Output;$/;"	t	function:test_set_bit
T2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type T2 = <GetBitOut<U2, U1> as Same<B1>>::Output;$/;"	t	function:test_get_bit
T2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type T2 = <SetBitOut<U2, U0, B1> as Same<U3>>::Output;$/;"	t	function:test_set_bit
T3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type T3 = <GetBitOut<U2, U2> as Same<B0>>::Output;$/;"	t	function:test_get_bit
T3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type T3 = <SetBitOut<U2, U1, B0> as Same<U0>>::Output;$/;"	t	function:test_set_bit
T4	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type T4 = <SetBitOut<U2, U1, B1> as Same<U2>>::Output;$/;"	t	function:test_set_bit
T5	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type T5 = <SetBitOut<U2, U2, B0> as Same<U2>>::Output;$/;"	t	function:test_set_bit
T6	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type T6 = <SetBitOut<U2, U2, B1> as Same<U6>>::Output;$/;"	t	function:test_set_bit
T7	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type T7 = <SetBitOut<U2, U3, B0> as Same<U2>>::Output;$/;"	t	function:test_set_bit
T8	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type T8 = <SetBitOut<U2, U3, B1> as Same<U10>>::Output;$/;"	t	function:test_set_bit
T9	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    type T9 = <SetBitOut<U2, U4, B0> as Same<U2>>::Output;$/;"	t	function:test_set_bit
TAffine	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^impl TCategory for TAffine {$/;"	c
TAffine	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^pub enum TAffine {}$/;"	g
TArr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^impl<Al, Vl, Ar, Vr> Add<TArr<Vr, Ar>> for TArr<Vl, Al>$/;"	c
TArr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^impl<V, A, Rhs> Div<Rhs> for TArr<V, A>$/;"	c
TArr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^impl<V, A, Rhs> Mul<Rhs> for TArr<V, A>$/;"	c
TArr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^impl<V, A, Rhs> PartialDiv<Rhs> for TArr<V, A>$/;"	c
TArr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^impl<V, A, Rhs> Rem<Rhs> for TArr<V, A>$/;"	c
TArr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^impl<V, A> Len for TArr<V, A>$/;"	c
TArr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^impl<V, A> Neg for TArr<V, A>$/;"	c
TArr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^impl<V, A> TypeArray for TArr<V, A> {}$/;"	c
TArr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^impl<Vl, Al, Vr, Ar> Sub<TArr<Vr, Ar>> for TArr<Vl, Al>$/;"	c
TArr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^pub struct TArr<V, A> {$/;"	s
TCategory	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^pub trait TCategory: Any + Debug + Copy + PartialEq + Send {$/;"	i
TCategoryMul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^pub trait TCategoryMul<Other: TCategory>: TCategory {$/;"	i
TGeneral	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^impl TCategory for TGeneral {$/;"	c
TGeneral	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^pub enum TGeneral {}$/;"	g
TProjective	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^impl TCategory for TProjective {$/;"	c
TProjective	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^pub enum TProjective {}$/;"	g
TakeWhileRef	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^impl<'a, I, F> Iterator for TakeWhileRef<'a, I, F>$/;"	c
TakeWhileRef	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^impl<'a, I, F> fmt::Debug for TakeWhileRef<'a, I, F>$/;"	c
TakeWhileRef	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub struct TakeWhileRef<'a, I: 'a, F> {$/;"	s
Target	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^        type Target = DateTime<Tz>;$/;"	t	implementation:rustc_serialize::TsSeconds
Target	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^        type Target = NaiveDateTime;$/;"	t	implementation:rustc_serialize::TsSeconds
Target	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^impl Default for Target {$/;"	c
Target	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^pub enum Target {$/;"	g
Target	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    type Target = [T];$/;"	t
Target	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^    type Target = GenericArray<N, Prod<R::Value, C::Value>>;$/;"	t
Target	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs	/^    type Target = T;$/;"	t	implementation:Unit
Target	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_coordinates.rs	/^    type Target = IJKW<N>;$/;"	t	implementation:Quaternion
Target	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    type Target = [u8];$/;"	t	implementation:ByteInput
Target	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    type Target = [u8];$/;"	t	implementation:CharInput
Target	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    type Target = [Inst];$/;"	t	implementation:Program
Target	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/sparse.rs	/^    type Target = [usize];$/;"	t	implementation:SparseSet
Tee	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tee.rs	/^impl<I> ExactSizeIterator for Tee<I>$/;"	c
Tee	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tee.rs	/^impl<I> Iterator for Tee<I>$/;"	c
Tee	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tee.rs	/^pub struct Tee<I>$/;"	s
TeeBuffer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tee.rs	/^struct TeeBuffer<A, I> {$/;"	s
Term	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^impl<P: FPolyRing> Term<P> {$/;"	c
Term	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^impl<P: PolyRing> Group for Term<P> {$/;"	c
Term	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^impl<P: PolyRing> One for Term<P> {$/;"	c
Term	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^impl<P: PolyRing> Ord for Term<P> {$/;"	c
Term	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^impl<P: PolyRing> PartialOrd for Term<P> {$/;"	c
Term	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^impl<P: PolyRing> Ring for Term<P> {$/;"	c
Term	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^impl<P: PolyRing> Term<P> {$/;"	c
Term	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^impl<P: PolyRing> Zero for Term<P> {$/;"	c
Term	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^pub struct Term<P: PolyRing> {$/;"	s
Test12	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Test12 = <::consts::U12 as Invert>::Output;$/;"	t	function:test_inversion
Test12	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Test12 = <<::consts::U12 as Invert>::Output as Invert>::Output;$/;"	t	function:test_double_inversion
Test16	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Test16 = <::consts::U16 as Invert>::Output;$/;"	t	function:test_inversion
Test16	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Test16 = <<::consts::U16 as Invert>::Output as Invert>::Output;$/;"	t	function:test_double_inversion
Test4	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Test4 = <::consts::U4 as Invert>::Output;$/;"	t	function:test_inversion
Test4	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Test4 = <<::consts::U4 as Invert>::Output as Invert>::Output;$/;"	t	function:test_double_inversion
Test5	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Test5 = <::consts::U5 as Invert>::Output;$/;"	t	function:test_inversion
Test5	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    type Test5 = <<::consts::U5 as Invert>::Output as Invert>::Output;$/;"	t	function:test_double_inversion
TestFill	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^        impl Fill for TestFill {$/;"	c	function:tests::fill_value
TestFill	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^        struct TestFill;$/;"	s	function:tests::fill_value
TestVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/test.rs	/^        impl internal::Visitor for TestVisitor {$/;"	c	method:Value::to_token
TestVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/test.rs	/^        struct TestVisitor(Option<Token>);$/;"	s	method:Value::to_token
TestVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^        impl<'kvs> Visitor<'kvs> for TestVisitor {$/;"	c	function:tests::test_record_key_values_builder
TestVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^        struct TestVisitor {$/;"	s	function:tests::test_record_key_values_builder
Text	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    type Text = [u8];$/;"	t	implementation:ExecNoSync
Text	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    type Text = str;$/;"	t	implementation:ExecNoSyncStr
Text	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_trait.rs	/^    type Text: ?Sized;$/;"	t	interface:RegularExpression
ThreadRng	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/thread.rs	/^impl CryptoRng for ThreadRng {}$/;"	c
ThreadRng	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/thread.rs	/^impl Default for ThreadRng {$/;"	c
ThreadRng	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/thread.rs	/^impl RngCore for ThreadRng {$/;"	c
ThreadRng	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/thread.rs	/^pub struct ThreadRng {$/;"	s
Threads	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/pikevm.rs	/^impl Threads {$/;"	c
Threads	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/pikevm.rs	/^struct Threads {$/;"	s
Thu	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    Thu = 3,$/;"	e	enum:Weekday
TimeZone	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^pub trait TimeZone: Sized + Clone {$/;"	i
TimedCache	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^impl<K: Hash + Eq, V> Cached<K, V> for TimedCache<K, V> {$/;"	c
TimedCache	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^impl<K: Hash + Eq, V> TimedCache<K, V> {$/;"	c
TimedCache	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^pub struct TimedCache<K, V> {$/;"	s
Timelike	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^pub trait Timelike: Sized {$/;"	i
Timestamp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    Timestamp,$/;"	e	enum:Numeric
Timestamp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/humantime/extern_impl.rs	/^impl fmt::Debug for Timestamp {$/;"	c
Timestamp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/humantime/extern_impl.rs	/^impl fmt::Display for Timestamp {$/;"	c
Timestamp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/humantime/extern_impl.rs	/^pub struct Timestamp {$/;"	s
TimestampPrecision	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^impl Default for TimestampPrecision {$/;"	c
TimestampPrecision	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^pub enum TimestampPrecision {$/;"	g
TimestampValue	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/humantime/extern_impl.rs	/^        impl<'a> fmt::Debug for TimestampValue<'a> {$/;"	c	method:Timestamp::fmt
TimestampValue	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/humantime/extern_impl.rs	/^        struct TimestampValue<'a>(&'a Timestamp);$/;"	s	method:Timestamp::fmt
TimezoneName	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    TimezoneName,$/;"	e	enum:Fixed
TimezoneOffset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    TimezoneOffset,$/;"	e	enum:Fixed
TimezoneOffsetColon	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    TimezoneOffsetColon,$/;"	e	enum:Fixed
TimezoneOffsetColonZ	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    TimezoneOffsetColonZ,$/;"	e	enum:Fixed
TimezoneOffsetPermissive	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    TimezoneOffsetPermissive,$/;"	e	enum:InternalInternal
TimezoneOffsetZ	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    TimezoneOffsetZ,$/;"	e	enum:Fixed
ToKey	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^pub trait ToKey {$/;"	i
ToPrimitive	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^pub trait ToPrimitive {$/;"	i
ToValue	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^impl ToValue for () {$/;"	c
ToValue	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^pub trait ToValue {$/;"	i
Token	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/test.rs	/^pub(in kv) enum Token {$/;"	g
TooLong	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    TooLong,$/;"	e	enum:ParseErrorKind
TooMany	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/mod.rs	/^    TooMany,$/;"	e	enum:WeightedError
TooShort	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    TooShort,$/;"	e	enum:ParseErrorKind
Trace	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    Trace,$/;"	e	enum:Level
Trace	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    Trace,$/;"	e	enum:LevelFilter
Transform	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^impl<'a, N: RealField, D: DimNameAdd<U1>, C: TCategory> Deserialize<'a> for Transform<N, D, C>$/;"	c
Transform	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^impl<N, D: DimNameAdd<U1>, C> Transform<N, D, C>$/;"	c
Transform	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^impl<N: RealField + Eq, D: DimNameAdd<U1>, C: TCategory> Eq for Transform<N, D, C> where$/;"	c
Transform	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^impl<N: RealField, D: DimNameAdd<U1> + Copy, C: TCategory> Copy for Transform<N, D, C>$/;"	c
Transform	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^impl<N: RealField, D: DimNameAdd<U1>, C: TCategory> AbsDiffEq for Transform<N, D, C>$/;"	c
Transform	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^impl<N: RealField, D: DimNameAdd<U1>, C: TCategory> Clone for Transform<N, D, C>$/;"	c
Transform	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^impl<N: RealField, D: DimNameAdd<U1>, C: TCategory> PartialEq for Transform<N, D, C>$/;"	c
Transform	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^impl<N: RealField, D: DimNameAdd<U1>, C: TCategory> RelativeEq for Transform<N, D, C>$/;"	c
Transform	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^impl<N: RealField, D: DimNameAdd<U1>, C: TCategory> Serialize for Transform<N, D, C>$/;"	c
Transform	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^impl<N: RealField, D: DimNameAdd<U1>, C: TCategory> Transform<N, D, C>$/;"	c
Transform	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^impl<N: RealField, D: DimNameAdd<U1>, C: TCategory> UlpsEq for Transform<N, D, C>$/;"	c
Transform	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^impl<N: RealField, D: DimNameAdd<U1>> Transform<N, D, TGeneral>$/;"	c
Transform	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^pub struct Transform<N: RealField, D: DimNameAdd<U1>, C: TCategory>$/;"	s
Transform	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_alga.rs	/^impl<N, D: DimNameAdd<U1>, C> ProjectiveTransformation<Point<N, D>> for Transform<N, D, C>$/;"	c
Transform	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_alga.rs	/^impl<N, D: DimNameAdd<U1>, C> Transformation<Point<N, D>> for Transform<N, D, C>$/;"	c
Transform	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_alga.rs	/^impl<N: RealField + simba::scalar::RealField, D: DimNameAdd<U1>, C> AbstractMagma<Multiplicative/;"	c
Transform	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_alga.rs	/^impl<N: RealField + simba::scalar::RealField, D: DimNameAdd<U1>, C> Identity<Multiplicative>$/;"	c
Transform	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_alga.rs	/^impl<N: RealField + simba::scalar::RealField, D: DimNameAdd<U1>, C> TwoSidedInverse<Multiplicati/;"	c
Transform	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_construction.rs	/^impl<N: RealField, D: DimNameAdd<U1>, C: TCategory> One for Transform<N, D, C>$/;"	c
Transform	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_construction.rs	/^impl<N: RealField, D: DimNameAdd<U1>, C: TCategory> Transform<N, D, C>$/;"	c
Transform	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_conversion.rs	/^impl<N1, N2, D: DimName, C1, C2> SubsetOf<Transform<N2, D, C2>> for Transform<N1, D, C1>$/;"	c
Transform	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_conversion.rs	/^impl<N1, N2, D: DimName, C> SubsetOf<MatrixN<N2, DimNameSum<D, U1>>> for Transform<N1, D, C>$/;"	c
Transform	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_ops.rs	/^impl<N: RealField, D, C: TCategory> Index<(usize, usize)> for Transform<N, D, C>$/;"	c
Transform	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_ops.rs	/^impl<N: RealField, D> IndexMut<(usize, usize)> for Transform<N, D, TGeneral>$/;"	c
Transform	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_simba.rs	/^impl<N: RealField, D: DimNameAdd<U1>, C> SimdValue for Transform<N, D, C>$/;"	c
Transform2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_alias.rs	/^pub type Transform2<N> = Transform<N, U2, TGeneral>;$/;"	t
Transform3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_alias.rs	/^pub type Transform3<N> = Transform<N, U3, TGeneral>;$/;"	t
Transformation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^pub trait Transformation<E: EuclideanSpace>: MultiplicativeMonoid {$/;"	i
Transitions	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^impl Transitions {$/;"	c
Transitions	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^impl fmt::Debug for Transitions {$/;"	c
Transitions	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^struct Transitions {$/;"	s
TransitionsRow	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^impl<'a> fmt::Debug for TransitionsRow<'a> {$/;"	c
TransitionsRow	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^struct TransitionsRow<'a>(&'a [StatePtr]);$/;"	s
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/id.rs	/^    type Translation = Id;$/;"	t	implementation:Id
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    type Translation = Id;$/;"	t
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    type Translation: Translation<E>;$/;"	t	interface:AffineTransformation
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^pub trait Translation<E: EuclideanSpace>:$/;"	i
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alga.rs	/^    type Translation = Translation<N, D>;$/;"	t
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_alga.rs	/^    type Translation = VectorN<N, D>;$/;"	t
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    type Translation = Id;$/;"	t	implementation:UnitQuaternion
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alga.rs	/^    type Translation = Id;$/;"	t
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alga.rs	/^    type Translation = Translation<N, D>;$/;"	t
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs	/^impl<'a, N: Scalar, D: DimName> Deserialize<'a> for Translation<N, D>$/;"	c
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs	/^impl<N, D> Abomonation for Translation<N, D>$/;"	c
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs	/^impl<N: Scalar + AbsDiffEq, D: DimName> AbsDiffEq for Translation<N, D>$/;"	c
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs	/^impl<N: Scalar + ClosedAdd, D: DimName> Translation<N, D>$/;"	c
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs	/^impl<N: Scalar + ClosedSub, D: DimName> Translation<N, D>$/;"	c
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs	/^impl<N: Scalar + Copy, D: DimName> Copy for Translation<N, D>$/;"	c
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs	/^impl<N: Scalar + Eq, D: DimName> Eq for Translation<N, D> where DefaultAllocator: Allocator<N, D/;"	c
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs	/^impl<N: Scalar + PartialEq, D: DimName> PartialEq for Translation<N, D>$/;"	c
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs	/^impl<N: Scalar + RelativeEq, D: DimName> RelativeEq for Translation<N, D>$/;"	c
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs	/^impl<N: Scalar + UlpsEq, D: DimName> UlpsEq for Translation<N, D>$/;"	c
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs	/^impl<N: Scalar + fmt::Display, D: DimName> fmt::Display for Translation<N, D>$/;"	c
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs	/^impl<N: Scalar + hash::Hash, D: DimName + hash::Hash> hash::Hash for Translation<N, D>$/;"	c
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs	/^impl<N: Scalar, D: DimName> Clone for Translation<N, D>$/;"	c
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs	/^impl<N: Scalar, D: DimName> Serialize for Translation<N, D>$/;"	c
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs	/^impl<N: Scalar, D: DimName> Translation<N, D>$/;"	c
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs	/^pub struct Translation<N: Scalar, D: DimName>$/;"	s
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alga.rs	/^    type Translation = Self;$/;"	t
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alga.rs	/^impl<N: RealField + simba::scalar::RealField, D: DimName> AbstractMagma<Multiplicative>$/;"	c
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alga.rs	/^impl<N: RealField + simba::scalar::RealField, D: DimName> AffineTransformation<Point<N, D>>$/;"	c
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alga.rs	/^impl<N: RealField + simba::scalar::RealField, D: DimName> AlgaTranslation<Point<N, D>>$/;"	c
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alga.rs	/^impl<N: RealField + simba::scalar::RealField, D: DimName> Identity<Multiplicative>$/;"	c
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alga.rs	/^impl<N: RealField + simba::scalar::RealField, D: DimName> ProjectiveTransformation<Point<N, D>>$/;"	c
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alga.rs	/^impl<N: RealField + simba::scalar::RealField, D: DimName> Similarity<Point<N, D>>$/;"	c
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alga.rs	/^impl<N: RealField + simba::scalar::RealField, D: DimName> Transformation<Point<N, D>>$/;"	c
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alga.rs	/^impl<N: RealField + simba::scalar::RealField, D: DimName> TwoSidedInverse<Multiplicative>$/;"	c
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_construction.rs	/^impl<N: Scalar + Arbitrary, D: DimName> Arbitrary for Translation<N, D>$/;"	c
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_construction.rs	/^impl<N: Scalar + Zero + ClosedAdd, D: DimName> One for Translation<N, D>$/;"	c
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_construction.rs	/^impl<N: Scalar + Zero, D: DimName> Translation<N, D>$/;"	c
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs	/^impl<N1, N2, D, C> SubsetOf<Transform<N2, D, C>> for Translation<N1, D>$/;"	c
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs	/^impl<N1, N2, D: DimName, R> SubsetOf<Isometry<N2, D, R>> for Translation<N1, D>$/;"	c
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs	/^impl<N1, N2, D: DimName, R> SubsetOf<Similarity<N2, D, R>> for Translation<N1, D>$/;"	c
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs	/^impl<N1, N2, D: DimName> SubsetOf<Translation<N2, D>> for Translation<N1, D>$/;"	c
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs	/^impl<N1, N2, D> SubsetOf<MatrixN<N2, DimNameSum<D, U1>>> for Translation<N1, D>$/;"	c
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs	/^impl<N: Scalar + PrimitiveSimdValue, D: DimName> From<[Translation<N::Element, D>; 16]>$/;"	c
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs	/^impl<N: Scalar + PrimitiveSimdValue, D: DimName> From<[Translation<N::Element, D>; 2]>$/;"	c
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs	/^impl<N: Scalar + PrimitiveSimdValue, D: DimName> From<[Translation<N::Element, D>; 4]>$/;"	c
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs	/^impl<N: Scalar + PrimitiveSimdValue, D: DimName> From<[Translation<N::Element, D>; 8]>$/;"	c
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs	/^impl<N: Scalar, D: DimName> From<VectorN<N, D>> for Translation<N, D>$/;"	c
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_simba.rs	/^impl<N: Scalar + SimdValue, D: DimName> SimdValue for Translation<N, D>$/;"	c
Translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_alga.rs	/^    type Translation = Id;$/;"	t
Translation1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alias.rs	/^pub type Translation1<N> = Translation<N, U1>;$/;"	t
Translation2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alias.rs	/^pub type Translation2<N> = Translation<N, U2>;$/;"	t
Translation3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alias.rs	/^pub type Translation3<N> = Translation<N, U3>;$/;"	t
Translation4	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alias.rs	/^pub type Translation4<N> = Translation<N, U4>;$/;"	t
Translation5	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alias.rs	/^pub type Translation5<N> = Translation<N, U5>;$/;"	t
Translation6	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alias.rs	/^pub type Translation6<N> = Translation<N, U6>;$/;"	t
Triangular	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/triangular.rs	/^impl Distribution<f64> for Triangular {$/;"	c
Triangular	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/triangular.rs	/^impl Triangular {$/;"	c
Triangular	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/triangular.rs	/^pub struct Triangular {$/;"	s
Trim	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub trait Trim {$/;"	i
TrimOut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub type TrimOut<A> = <A as Trim>::Output;$/;"	t
TrimTrailingZeros	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub trait TrimTrailingZeros {$/;"	i
TrimTrailingZerosOut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^pub type TrimTrailingZerosOut<A> = <A as TrimTrailingZeros>::Output;$/;"	t
TsSeconds	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    impl Decodable for TsSeconds<FixedOffset> {$/;"	c	module:rustc_serialize
TsSeconds	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    impl Decodable for TsSeconds<Local> {$/;"	c	module:rustc_serialize
TsSeconds	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    impl Decodable for TsSeconds<Utc> {$/;"	c	module:rustc_serialize
TsSeconds	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    impl<Tz: TimeZone> Deref for TsSeconds<Tz> {$/;"	c	module:rustc_serialize
TsSeconds	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    pub struct TsSeconds<Tz: TimeZone>(DateTime<Tz>);$/;"	s	module:rustc_serialize
TsSeconds	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    impl Decodable for TsSeconds {$/;"	c	module:rustc_serialize
TsSeconds	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    impl Deref for TsSeconds {$/;"	c	module:rustc_serialize
TsSeconds	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    pub struct TsSeconds(NaiveDateTime);$/;"	s	module:rustc_serialize
Tue	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    Tue = 1,$/;"	e	enum:Weekday
Tuple1Combination	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^impl<I: Iterator> Iterator for Tuple1Combination<I> {$/;"	c
Tuple1Combination	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^impl<I> From<I> for Tuple1Combination<I> {$/;"	c
Tuple1Combination	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub struct Tuple1Combination<I> {$/;"	s
TupleBuffer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs	/^impl<T> ExactSizeIterator for TupleBuffer<T>$/;"	c
TupleBuffer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs	/^impl<T> Iterator for TupleBuffer<T>$/;"	c
TupleBuffer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs	/^impl<T> TupleBuffer<T>$/;"	c
TupleBuffer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs	/^pub struct TupleBuffer<T>$/;"	s
TupleCollect	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs	/^pub trait TupleCollect: Sized {$/;"	i
TupleCombinations	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^impl<I, T> Iterator for TupleCombinations<I, T>$/;"	c
TupleCombinations	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub struct TupleCombinations<I, T>$/;"	s
TupleWindows	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs	/^impl<I, T> Iterator for TupleWindows<I, T>$/;"	c
TupleWindows	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs	/^pub struct TupleWindows<I, T>$/;"	s
Tuples	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs	/^impl<I, T> Iterator for Tuples<I, T>$/;"	c
Tuples	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs	/^impl<I, T> Tuples<I, T>$/;"	c
Tuples	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs	/^pub struct Tuples<I, T>$/;"	s
TwoSidedInverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/operator.rs	/^pub trait TwoSidedInverse<O: Operator>: Sized {$/;"	i
TypeArray	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/marker_traits.rs	/^pub trait TypeArray {}$/;"	i
U	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^impl<U: Unsigned> Trim for U$/;"	c
U	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U: Unsigned> PrivateSub<UTerm> for U {$/;"	c
U0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl Gcd<U0> for U0 {$/;"	c
U0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Y> Gcd<Y> for U0$/;"	c
U1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^impl Dim for U1 {$/;"	c
U1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^impl DimName for U1 {$/;"	c
U1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^impl NamedDim for typenum::U1 {$/;"	c
U1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^pub struct U1;$/;"	s
U1	/Users/williamcashman/Honours/Program/n_poly/src/polyu.rs	/^impl VarNumber for U1 {}$/;"	c
U2	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^impl VarNumber for U2 {}$/;"	c
U3	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^impl VarNumber for U3 {}$/;"	c
U32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^    U32(Vec<u32>),$/;"	e	enum:IndexVec
U32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^    U32(slice::Iter<'a, u32>),$/;"	e	enum:IndexVecIter
U32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^    U32(vec::IntoIter<u32>),$/;"	e	enum:IndexVecIntoIter
U64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/test.rs	/^    U64(u64),$/;"	e	enum:Token
U7	/Users/williamcashman/Honours/Program/n_poly/src/algebras/finite_field.rs	/^impl Prime for U7 {}$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^unsafe impl<T, N: ArrayLength<T>> ArrayLength<T> for UInt<N, B0> {$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^unsafe impl<T, N: ArrayLength<T>> ArrayLength<T> for UInt<N, B1> {$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^impl<$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^impl<U: Unsigned + DimName, B: Bit + Any + Debug + Copy + PartialEq + Send + Sync> Dim$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^impl<U: Unsigned + DimName, B: Bit + Any + Debug + Copy + PartialEq + Send + Sync> DimName$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^impl<U: Unsigned + DimName, B: Bit + Any + Debug + Copy + PartialEq + Send + Sync> IsNotStaticOn/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^impl<U: Unsigned + DimName, B: Bit + Any + Debug + Copy + PartialEq + Send + Sync> NamedDim$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/utils.rs	/^    type UInt;$/;"	t	interface:FloatSIMDUtils
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^trait UInt: Copy + PartialOrd + Ord + PartialEq + Eq + SampleUniform + core::hash::Hash {$/;"	i
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^impl<IU: InvertedUnsigned, U: Unsigned, B: Bit> PrivateInvert<IU> for UInt<U, B>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^impl<U: Unsigned, B: Bit> Invert for UInt<U, B>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl PowerOfTwo for UInt<UTerm, B1> {}$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl PrivateLogarithm2 for UInt<UTerm, B1> {$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl PrivateSquareRoot for UInt<UTerm, B1> {$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl Sub<B1> for UInt<UTerm, B1> {$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<B: Bit, U: Unsigned> BitOr<UTerm> for UInt<U, B> {$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<B: Bit, U: Unsigned> PrivateAnd<UTerm> for UInt<U, B> {$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<B: Bit, U: Unsigned> PrivateXor<UTerm> for UInt<U, B> {$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U, B, Ur> Max<Ur> for UInt<U, B>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U, B, Ur> Min<Ur> for UInt<U, B>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U, B, Ur> PrivateMax<Ur, Equal> for UInt<U, B>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U, B, Ur> PrivateMax<Ur, Greater> for UInt<U, B>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U, B, Ur> PrivateMax<Ur, Less> for UInt<U, B>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U, B, Ur> PrivateMin<Ur, Equal> for UInt<U, B>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U, B, Ur> PrivateMin<Ur, Greater> for UInt<U, B>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U, B, Ur> PrivateMin<Ur, Less> for UInt<U, B>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U, B> PrivateLogarithm2 for UInt<U, B>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U, Ba, Bb> PrivateSquareRoot for UInt<UInt<U, Ba>, Bb>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U: Unsigned + PowerOfTwo> PowerOfTwo for UInt<U, B0> {}$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U: Unsigned, B: Bit, SoFar: Ord> PrivateCmp<UTerm, SoFar> for UInt<U, B> {$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U: Unsigned, B: Bit, Ur: Unsigned, Br: Bit> Shl<UInt<Ur, Br>> for UInt<U, B>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U: Unsigned, B: Bit, Ur: Unsigned, Br: Bit> Shr<UInt<Ur, Br>> for UInt<U, B>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U: Unsigned, B: Bit> Add<B0> for UInt<U, B> {$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U: Unsigned, B: Bit> Add<UTerm> for UInt<U, B> {$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U: Unsigned, B: Bit> Cmp<UTerm> for UInt<U, B> {$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U: Unsigned, B: Bit> Len for UInt<U, B>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U: Unsigned, B: Bit> Mul<B0> for UInt<U, B> {$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U: Unsigned, B: Bit> Mul<B1> for UInt<U, B> {$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U: Unsigned, B: Bit> Mul<UTerm> for UInt<U, B> {$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U: Unsigned, B: Bit> NonZero for UInt<U, B> {}$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U: Unsigned, B: Bit> Shl<B0> for UInt<U, B> {$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U: Unsigned, B: Bit> Shl<B1> for UInt<U, B> {$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U: Unsigned, B: Bit> Shl<UTerm> for UInt<U, B> {$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U: Unsigned, B: Bit> Shr<B0> for UInt<U, B> {$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U: Unsigned, B: Bit> Shr<B1> for UInt<U, B> {$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U: Unsigned, B: Bit> Shr<UTerm> for UInt<U, B> {$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U: Unsigned, B: Bit> Sub<B0> for UInt<U, B> {$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U: Unsigned, B: Bit> Sub<B1> for UInt<UInt<U, B>, B1> {$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U: Unsigned, B: Bit> UInt<U, B> {$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U: Unsigned, B: Bit> Unsigned for UInt<U, B> {$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U: Unsigned> Add<B1> for UInt<U, B0> {$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U: Unsigned> Add<B1> for UInt<U, B1>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U: Unsigned> Sub<B1> for UInt<U, B0>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ul, Bl, Ur, Br> BitDiff<UInt<Ur, Br>> for UInt<Ul, Bl>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ul, Ur, SoFar> PrivateCmp<UInt<Ur, B0>, SoFar> for UInt<Ul, B0>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ul, Ur, SoFar> PrivateCmp<UInt<Ur, B0>, SoFar> for UInt<Ul, B1>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ul, Ur, SoFar> PrivateCmp<UInt<Ur, B1>, SoFar> for UInt<Ul, B0>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ul, Ur, SoFar> PrivateCmp<UInt<Ur, B1>, SoFar> for UInt<Ul, B1>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ul: Unsigned, B: Bit, Ur: Unsigned> Mul<UInt<Ur, B>> for UInt<Ul, B0>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ul: Unsigned, B: Bit, Ur: Unsigned> Mul<UInt<Ur, B>> for UInt<Ul, B1>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ul: Unsigned, Bl: Bit, Ur: Unsigned, Br: Bit> Div<UInt<Ur, Br>> for UInt<Ul, Bl>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ul: Unsigned, Bl: Bit, Ur: Unsigned, Br: Bit> PartialDiv<UInt<Ur, Br>> for UInt<Ul, Bl>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ul: Unsigned, Bl: Bit, Ur: Unsigned, Br: Bit> Rem<UInt<Ur, Br>> for UInt<Ul, Bl>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ul: Unsigned, Bl: Bit, Ur: Unsigned> BitAnd<Ur> for UInt<Ul, Bl>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ul: Unsigned, Bl: Bit, Ur: Unsigned> BitXor<Ur> for UInt<Ul, Bl>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ul: Unsigned, Bl: Bit, Ur: Unsigned> Sub<Ur> for UInt<Ul, Bl>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ul: Unsigned, Ur: Unsigned> Add<UInt<Ur, B0>> for UInt<Ul, B0>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ul: Unsigned, Ur: Unsigned> Add<UInt<Ur, B0>> for UInt<Ul, B1>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ul: Unsigned, Ur: Unsigned> Add<UInt<Ur, B1>> for UInt<Ul, B0>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ul: Unsigned, Ur: Unsigned> Add<UInt<Ur, B1>> for UInt<Ul, B1>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ul: Unsigned, Ur: Unsigned> BitOr<UInt<Ur, B0>> for UInt<Ul, B0>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ul: Unsigned, Ur: Unsigned> BitOr<UInt<Ur, B0>> for UInt<Ul, B1>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ul: Unsigned, Ur: Unsigned> BitOr<UInt<Ur, B1>> for UInt<Ul, B0>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ul: Unsigned, Ur: Unsigned> BitOr<UInt<Ur, B1>> for UInt<Ul, B1>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ul: Unsigned, Ur: Unsigned> Cmp<UInt<Ur, B0>> for UInt<Ul, B0>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ul: Unsigned, Ur: Unsigned> Cmp<UInt<Ur, B0>> for UInt<Ul, B1>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ul: Unsigned, Ur: Unsigned> Cmp<UInt<Ur, B1>> for UInt<Ul, B0>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ul: Unsigned, Ur: Unsigned> Cmp<UInt<Ur, B1>> for UInt<Ul, B1>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ul: Unsigned, Ur: Unsigned> PrivateAnd<UInt<Ur, B0>> for UInt<Ul, B0>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ul: Unsigned, Ur: Unsigned> PrivateAnd<UInt<Ur, B0>> for UInt<Ul, B1>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ul: Unsigned, Ur: Unsigned> PrivateAnd<UInt<Ur, B1>> for UInt<Ul, B0>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ul: Unsigned, Ur: Unsigned> PrivateAnd<UInt<Ur, B1>> for UInt<Ul, B1>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ul: Unsigned, Ur: Unsigned> PrivateSub<UInt<Ur, B0>> for UInt<Ul, B0>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ul: Unsigned, Ur: Unsigned> PrivateSub<UInt<Ur, B0>> for UInt<Ul, B1>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ul: Unsigned, Ur: Unsigned> PrivateSub<UInt<Ur, B1>> for UInt<Ul, B0>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ul: Unsigned, Ur: Unsigned> PrivateSub<UInt<Ur, B1>> for UInt<Ul, B1>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ul: Unsigned, Ur: Unsigned> PrivateXor<UInt<Ur, B0>> for UInt<Ul, B0>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ul: Unsigned, Ur: Unsigned> PrivateXor<UInt<Ur, B0>> for UInt<Ul, B1>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ul: Unsigned, Ur: Unsigned> PrivateXor<UInt<Ur, B1>> for UInt<Ul, B0>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ul: Unsigned, Ur: Unsigned> PrivateXor<UInt<Ur, B1>> for UInt<Ul, B1>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Un, Bn, B> PrivateSetBit<U0, B> for UInt<Un, Bn> {$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Un, Bn, Ui, Bi, B> PrivateSetBit<UInt<Ui, Bi>, B> for UInt<Un, Bn>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Un, Bn, Ui, Bi> GetBit<UInt<Ui, Bi>> for UInt<Un, Bn>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Un, Bn> GetBit<U0> for UInt<Un, Bn>$/;"	c
UInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^pub struct UInt<U, B> {$/;"	s
UPPER_CHARS	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/hex.rs	/^static UPPER_CHARS: &'static [u8] = b"0123456789ABCDEF";$/;"	v
USize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^    USize(Vec<usize>),$/;"	e	enum:IndexVec
USize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^    USize(slice::Iter<'a, usize>),$/;"	e	enum:IndexVecIter
USize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^    USize(vec::IntoIter<usize>),$/;"	e	enum:IndexVecIntoIter
UTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^unsafe impl<T> ArrayLength<T> for UTerm {$/;"	c
UTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^impl Invert for UTerm {$/;"	c
UTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^impl<IU: InvertedUnsigned> PrivateInvert<IU> for UTerm {$/;"	c
UTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl Add<B0> for UTerm {$/;"	c
UTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl Add<B1> for UTerm {$/;"	c
UTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl Cmp<UTerm> for UTerm {$/;"	c
UTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl Len for UTerm {$/;"	c
UTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl Mul<B0> for UTerm {$/;"	c
UTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl Mul<B1> for UTerm {$/;"	c
UTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl PrivateSquareRoot for UTerm {$/;"	c
UTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl Shl<B0> for UTerm {$/;"	c
UTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl Shl<B1> for UTerm {$/;"	c
UTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl Shr<B0> for UTerm {$/;"	c
UTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl Shr<B1> for UTerm {$/;"	c
UTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl Sub<B0> for UTerm {$/;"	c
UTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl Sub<UTerm> for UTerm {$/;"	c
UTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl UTerm {$/;"	c
UTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl Unsigned for UTerm {$/;"	c
UTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<I> GetBit<I> for UTerm {$/;"	c
UTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<I> PrivateSetBit<I, B0> for UTerm {$/;"	c
UTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<I> PrivateSetBit<I, B1> for UTerm$/;"	c
UTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<SoFar: Ord> PrivateCmp<UTerm, SoFar> for UTerm {$/;"	c
UTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U: Unsigned, B: Bit, SoFar: Ord> PrivateCmp<UInt<U, B>, SoFar> for UTerm {$/;"	c
UTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U: Unsigned, B: Bit> Cmp<UInt<U, B>> for UTerm {$/;"	c
UTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U: Unsigned> Add<U> for UTerm {$/;"	c
UTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U: Unsigned> BitOr<U> for UTerm {$/;"	c
UTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U: Unsigned> Mul<U> for UTerm {$/;"	c
UTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U: Unsigned> PrivateAnd<U> for UTerm {$/;"	c
UTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U: Unsigned> PrivateXor<U> for UTerm {$/;"	c
UTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U: Unsigned> Shl<U> for UTerm {$/;"	c
UTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U: Unsigned> Shr<U> for UTerm {$/;"	c
UTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U> Max<U> for UTerm$/;"	c
UTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<U> Min<U> for UTerm$/;"	c
UTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ur: Unsigned, Br: Bit> Div<UInt<Ur, Br>> for UTerm {$/;"	c
UTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ur: Unsigned, Br: Bit> PartialDiv<UInt<Ur, Br>> for UTerm {$/;"	c
UTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ur: Unsigned, Br: Bit> Rem<UInt<Ur, Br>> for UTerm {$/;"	c
UTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ur: Unsigned> BitAnd<Ur> for UTerm {$/;"	c
UTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ur: Unsigned> BitXor<Ur> for UTerm {$/;"	c
UTerm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^pub struct UTerm;$/;"	s
Ul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ul: Unsigned, Ur: Unsigned> ShiftDiff<Ur> for Ul$/;"	c
Ul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Ul> BitDiff<UTerm> for Ul$/;"	c
Unanchored	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    Unanchored,$/;"	e	enum:MatchLiteralType
UnboundCache	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^impl<K: Hash + Eq, V> Cached<K, V> for UnboundCache<K, V> {$/;"	c
UnboundCache	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^impl<K: Hash + Eq, V> UnboundCache<K, V> {$/;"	c
UnboundCache	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^pub struct UnboundCache<K, V> {$/;"	s
Uncompiled	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    Uncompiled(InstHole),$/;"	e	enum:MaybeInst
Unfold	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs	/^impl<A, St, F> Iterator for Unfold<St, F>$/;"	c
Unfold	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs	/^impl<St, F> fmt::Debug for Unfold<St, F>$/;"	c
Unfold	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs	/^pub struct Unfold<St, F> {$/;"	s
UnhintedIterator	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^    impl<I: Iterator + Clone> Iterator for UnhintedIterator<I> {$/;"	c	module:test
UnhintedIterator	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^    struct UnhintedIterator<I: Iterator + Clone> {$/;"	s	module:test
UniIndex	/Users/williamcashman/Honours/Program/n_poly/src/polyu.rs	/^impl Variate for UniIndex {$/;"	c
UniIndex	/Users/williamcashman/Honours/Program/n_poly/src/polyu.rs	/^impl Zero for UniIndex {$/;"	c
UniIndex	/Users/williamcashman/Honours/Program/n_poly/src/polyu.rs	/^pub struct UniIndex(pub(crate) usize);$/;"	s
Uniform	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^impl<X: SampleUniform> Distribution<X> for Uniform<X> {$/;"	c
Uniform	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^impl<X: SampleUniform> From<::core::ops::Range<X>> for Uniform<X> {$/;"	c
Uniform	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^impl<X: SampleUniform> From<::core::ops::RangeInclusive<X>> for Uniform<X> {$/;"	c
Uniform	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^impl<X: SampleUniform> Uniform<X> {$/;"	c
Uniform	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^pub struct Uniform<X: SampleUniform>(X::Sampler);$/;"	s
UniformDuration	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^impl UniformSampler for UniformDuration {$/;"	c
UniformDuration	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^pub struct UniformDuration {$/;"	s
UniformDurationMode	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^enum UniformDurationMode {$/;"	g
UniformFloat	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^pub struct UniformFloat<X> {$/;"	s
UniformInt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^pub struct UniformInt<X> {$/;"	s
UniformMyF32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^        impl UniformSampler for UniformMyF32 {$/;"	c	function:tests::test_custom_uniform
UniformMyF32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^        struct UniformMyF32(UniformFloat<f32>);$/;"	s	function:tests::test_custom_uniform
UniformNorm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^impl<N: SimdComplexField> Norm<N> for UniformNorm {$/;"	c
UniformNorm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^pub struct UniformNorm;$/;"	s
UniformSampler	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^pub trait UniformSampler: Sized {$/;"	i
Unique	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs	/^impl<I> Iterator for Unique<I>$/;"	c
Unique	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs	/^impl<I> fmt::Debug for Unique<I>$/;"	c
Unique	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs	/^pub struct Unique<I: Iterator> {$/;"	s
UniqueBy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs	/^impl<I, V, F> Iterator for UniqueBy<I, V, F>$/;"	c
UniqueBy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs	/^impl<I, V, F> fmt::Debug for UniqueBy<I, V, F>$/;"	c
UniqueBy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs	/^pub struct UniqueBy<I: Iterator, V, F> {$/;"	s
Unit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^impl<N, R: Dim, C: Dim, S> AbsDiffEq for Unit<Matrix<N, R, C, S>>$/;"	c
Unit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^impl<N, R: Dim, C: Dim, S> RelativeEq for Unit<Matrix<N, R, C, S>>$/;"	c
Unit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^impl<N, R: Dim, C: Dim, S> UlpsEq for Unit<Matrix<N, R, C, S>>$/;"	c
Unit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^impl<N: RealField, D: Dim, S: Storage<N, D>> Unit<Vector<N, D, S>> {$/;"	c
Unit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^impl<N: Scalar + ClosedNeg, R: Dim, C: Dim> Neg for Unit<MatrixMN<N, R, C>>$/;"	c
Unit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs	/^impl<'de, T: Deserialize<'de>> Deserialize<'de> for Unit<T> {$/;"	c
Unit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs	/^impl<N: Scalar + simba::simd::PrimitiveSimdValue, R: Dim, C: Dim>$/;"	c
Unit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs	/^impl<T: Abomonation> Abomonation for Unit<T> {$/;"	c
Unit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs	/^impl<T: Normed> Unit<T> {$/;"	c
Unit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs	/^impl<T: Serialize> Serialize for Unit<T> {$/;"	c
Unit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs	/^impl<T> AsRef<T> for Unit<T> {$/;"	c
Unit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs	/^impl<T> Deref for Unit<T> {$/;"	c
Unit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs	/^impl<T> Unit<T> {$/;"	c
Unit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs	/^pub struct Unit<T> {$/;"	s
UnitCircle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/unit_circle.rs	/^impl Distribution<[f64; 2]> for UnitCircle {$/;"	c
UnitCircle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/unit_circle.rs	/^impl UnitCircle {$/;"	c
UnitCircle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/unit_circle.rs	/^pub struct UnitCircle;$/;"	s
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs	/^impl<N: SimdRealField> AbstractRotation<N, U2> for UnitComplex<N>$/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs	/^impl<N: RealField + fmt::Display> fmt::Display for UnitComplex<N> {$/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs	/^impl<N: RealField> AbsDiffEq for UnitComplex<N> {$/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs	/^impl<N: RealField> RelativeEq for UnitComplex<N> {$/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs	/^impl<N: RealField> UlpsEq for UnitComplex<N> {$/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs	/^impl<N: SimdRealField> UnitComplex<N>$/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs	/^pub type UnitComplex<N> = Unit<Complex<N>>;$/;"	t
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_alga.rs	/^impl<N: RealField + simba::scalar::RealField> AbstractMagma<Multiplicative> for UnitComplex<N> {$/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_alga.rs	/^impl<N: RealField + simba::scalar::RealField> AffineTransformation<Point2<N>> for UnitComplex<N>$/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_alga.rs	/^impl<N: RealField + simba::scalar::RealField> Identity<Multiplicative> for UnitComplex<N> {$/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_alga.rs	/^impl<N: RealField + simba::scalar::RealField> ProjectiveTransformation<Point2<N>> for UnitComple/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_alga.rs	/^impl<N: RealField + simba::scalar::RealField> Rotation<Point2<N>> for UnitComplex<N>$/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_alga.rs	/^impl<N: RealField + simba::scalar::RealField> Similarity<Point2<N>> for UnitComplex<N>$/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_alga.rs	/^impl<N: RealField + simba::scalar::RealField> Transformation<Point2<N>> for UnitComplex<N>$/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_alga.rs	/^impl<N: RealField + simba::scalar::RealField> TwoSidedInverse<Multiplicative> for UnitComplex<N>/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs	/^impl<N: SimdRealField + Arbitrary> Arbitrary for UnitComplex<N>$/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs	/^impl<N: SimdRealField> One for UnitComplex<N>$/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs	/^impl<N: SimdRealField> UnitComplex<N>$/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs	/^impl<N1, N2, C> SubsetOf<Transform<N2, U2, C>> for UnitComplex<N1>$/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs	/^impl<N1, N2, R> SubsetOf<Isometry<N2, U2, R>> for UnitComplex<N1>$/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs	/^impl<N1, N2, R> SubsetOf<Similarity<N2, U2, R>> for UnitComplex<N1>$/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs	/^impl<N1, N2> SubsetOf<Rotation2<N2>> for UnitComplex<N1>$/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs	/^impl<N1, N2> SubsetOf<UnitComplex<N2>> for UnitComplex<N1>$/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs	/^impl<N1: RealField, N2: RealField + SupersetOf<N1>> SubsetOf<Matrix3<N2>> for UnitComplex<N1> {$/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs	/^impl<N: Scalar + Copy + PrimitiveSimdValue> From<[UnitComplex<N::Element>; 16]> for UnitComplex</;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs	/^impl<N: Scalar + Copy + PrimitiveSimdValue> From<[UnitComplex<N::Element>; 2]> for UnitComplex<N/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs	/^impl<N: Scalar + Copy + PrimitiveSimdValue> From<[UnitComplex<N::Element>; 4]> for UnitComplex<N/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs	/^impl<N: Scalar + Copy + PrimitiveSimdValue> From<[UnitComplex<N::Element>; 8]> for UnitComplex<N/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs	/^impl<N: SimdRealField> From<Rotation2<N>> for UnitComplex<N>$/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs	/^impl<'a, 'b, N: SimdRealField> Div<&'b UnitComplex<N>> for &'a UnitComplex<N>$/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs	/^impl<'a, 'b, N: SimdRealField> Mul<&'b UnitComplex<N>> for &'a UnitComplex<N>$/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs	/^impl<'a, N: SimdRealField> Div<UnitComplex<N>> for &'a UnitComplex<N>$/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs	/^impl<'a, N: SimdRealField> Mul<UnitComplex<N>> for &'a UnitComplex<N>$/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs	/^impl<'b, N: SimdRealField> Div<&'b UnitComplex<N>> for UnitComplex<N>$/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs	/^impl<'b, N: SimdRealField> DivAssign<&'b Rotation<N, U2>> for UnitComplex<N>$/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs	/^impl<'b, N: SimdRealField> DivAssign<&'b UnitComplex<N>> for UnitComplex<N>$/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs	/^impl<'b, N: SimdRealField> Mul<&'b UnitComplex<N>> for UnitComplex<N>$/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs	/^impl<'b, N: SimdRealField> MulAssign<&'b Rotation<N, U2>> for UnitComplex<N>$/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs	/^impl<'b, N: SimdRealField> MulAssign<&'b UnitComplex<N>> for UnitComplex<N>$/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs	/^impl<N: SimdRealField> Div<Self> for UnitComplex<N>$/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs	/^impl<N: SimdRealField> DivAssign<Rotation<N, U2>> for UnitComplex<N>$/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs	/^impl<N: SimdRealField> DivAssign<UnitComplex<N>> for UnitComplex<N>$/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs	/^impl<N: SimdRealField> Mul<Self> for UnitComplex<N> {$/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs	/^impl<N: SimdRealField> MulAssign<Rotation<N, U2>> for UnitComplex<N>$/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs	/^impl<N: SimdRealField> MulAssign<UnitComplex<N>> for UnitComplex<N>$/;"	c
UnitComplex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_simba.rs	/^impl<N: SimdRealField> SimdValue for UnitComplex<N>$/;"	c
UnitQuaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs	/^impl<N: SimdRealField> AbstractRotation<N, U3> for UnitQuaternion<N>$/;"	c
UnitQuaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^impl<N: RealField + AbsDiffEq<Epsilon = N>> AbsDiffEq for UnitQuaternion<N> {$/;"	c
UnitQuaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^impl<N: RealField + RelativeEq<Epsilon = N>> RelativeEq for UnitQuaternion<N> {$/;"	c
UnitQuaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^impl<N: RealField + UlpsEq<Epsilon = N>> UlpsEq for UnitQuaternion<N> {$/;"	c
UnitQuaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^impl<N: RealField + fmt::Display> fmt::Display for UnitQuaternion<N> {$/;"	c
UnitQuaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^impl<N: SimdRealField> UnitQuaternion<N>$/;"	c
UnitQuaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^pub type UnitQuaternion<N> = Unit<Quaternion<N>>;$/;"	t
UnitQuaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^impl<N: RealField + simba::scalar::RealField> AbstractMagma<Multiplicative> for UnitQuaternion<N/;"	c
UnitQuaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^impl<N: RealField + simba::scalar::RealField> AffineTransformation<Point3<N>>$/;"	c
UnitQuaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^impl<N: RealField + simba::scalar::RealField> Identity<Multiplicative> for UnitQuaternion<N> {$/;"	c
UnitQuaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^impl<N: RealField + simba::scalar::RealField> ProjectiveTransformation<Point3<N>>$/;"	c
UnitQuaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^impl<N: RealField + simba::scalar::RealField> Rotation<Point3<N>> for UnitQuaternion<N> {$/;"	c
UnitQuaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^impl<N: RealField + simba::scalar::RealField> Similarity<Point3<N>> for UnitQuaternion<N> {$/;"	c
UnitQuaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^impl<N: RealField + simba::scalar::RealField> Transformation<Point3<N>> for UnitQuaternion<N> {$/;"	c
UnitQuaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^impl<N: RealField + simba::scalar::RealField> TwoSidedInverse<Multiplicative>$/;"	c
UnitQuaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^impl<N: RealField + Arbitrary> Arbitrary for UnitQuaternion<N>$/;"	c
UnitQuaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^impl<N: SimdRealField> One for UnitQuaternion<N>$/;"	c
UnitQuaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^impl<N: SimdRealField> UnitQuaternion<N>$/;"	c
UnitQuaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^impl<N1, N2, C> SubsetOf<Transform<N2, U3, C>> for UnitQuaternion<N1>$/;"	c
UnitQuaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^impl<N1, N2, R> SubsetOf<Isometry<N2, U3, R>> for UnitQuaternion<N1>$/;"	c
UnitQuaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^impl<N1, N2, R> SubsetOf<Similarity<N2, U3, R>> for UnitQuaternion<N1>$/;"	c
UnitQuaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^impl<N1, N2> SubsetOf<Rotation<N2, U3>> for UnitQuaternion<N1>$/;"	c
UnitQuaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^impl<N1, N2> SubsetOf<UnitQuaternion<N2>> for UnitQuaternion<N1>$/;"	c
UnitQuaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^impl<N1: RealField, N2: RealField + SupersetOf<N1>> SubsetOf<Matrix4<N2>> for UnitQuaternion<N1>/;"	c
UnitQuaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^impl<N: Scalar + Copy + PrimitiveSimdValue> From<[UnitQuaternion<N::Element>; 16]>$/;"	c
UnitQuaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^impl<N: Scalar + Copy + PrimitiveSimdValue> From<[UnitQuaternion<N::Element>; 2]>$/;"	c
UnitQuaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^impl<N: Scalar + Copy + PrimitiveSimdValue> From<[UnitQuaternion<N::Element>; 4]>$/;"	c
UnitQuaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^impl<N: Scalar + Copy + PrimitiveSimdValue> From<[UnitQuaternion<N::Element>; 8]>$/;"	c
UnitQuaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^impl<N: SimdRealField> From<Rotation3<N>> for UnitQuaternion<N>$/;"	c
UnitQuaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^impl<N: SimdRealField> Into<mint::Quaternion<N>> for UnitQuaternion<N> {$/;"	c
UnitQuaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_simba.rs	/^impl<N: Scalar + SimdValue> SimdValue for UnitQuaternion<N>$/;"	c
UnitSphereSurface	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/unit_sphere.rs	/^impl Distribution<[f64; 3]> for UnitSphereSurface {$/;"	c
UnitSphereSurface	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/unit_sphere.rs	/^impl UnitSphereSurface {$/;"	c
UnitSphereSurface	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/unit_sphere.rs	/^pub struct UnitSphereSurface;$/;"	s
UnivarOrder	/Users/williamcashman/Honours/Program/n_poly/src/polyu.rs	/^impl MonomialOrdering<UniIndex> for UnivarOrder {$/;"	c
UnivarOrder	/Users/williamcashman/Honours/Program/n_poly/src/polyu.rs	/^pub struct UnivarOrder();$/;"	s
Unsigned	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    Unsigned(u64),$/;"	e	enum:Primitive
Unsigned	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/sign.rs	/^pub trait Unsigned: Num {}$/;"	i
Unsigned	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/marker_traits.rs	/^pub trait Unsigned: Copy + Default {$/;"	i
Unzip4	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga_derive-0.9.2/src/lib.rs	/^trait Unzip4<A, B, C, D> {$/;"	i
Update	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^impl<I, F> DoubleEndedIterator for Update<I, F>$/;"	c
Update	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^impl<I, F> ExactSizeIterator for Update<I, F>$/;"	c
Update	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^impl<I, F> Iterator for Update<I, F>$/;"	c
Update	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub struct Update<I, F> {$/;"	s
UpperAmPm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    UpperAmPm,$/;"	e	enum:Fixed
Utc	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/utc.rs	/^impl Offset for Utc {$/;"	c
Utc	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/utc.rs	/^impl TimeZone for Utc {$/;"	c
Utc	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/utc.rs	/^impl Utc {$/;"	c
Utc	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/utc.rs	/^impl fmt::Debug for Utc {$/;"	c
Utc	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/utc.rs	/^impl fmt::Display for Utc {$/;"	c
Utc	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/utc.rs	/^pub struct Utc;$/;"	s
V	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^impl<K, V> Source for (K, V)$/;"	c
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^            type Value = DateTime<Utc>;$/;"	t	implementation:serde::ts_milliseconds::MilliSecondsTimestampVisitor
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^            type Value = DateTime<Utc>;$/;"	t	implementation:serde::ts_nanoseconds::NanoSecondsTimestampVisitor
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^            type Value = DateTime<Utc>;$/;"	t	implementation:serde::ts_seconds::SecondsTimestampVisitor
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^            type Value = Option<DateTime<Utc>>;$/;"	t	implementation:serde::ts_milliseconds_option::OptionMilliSecondsTimestampVisitor
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^            type Value = Option<DateTime<Utc>>;$/;"	t	implementation:serde::ts_nanoseconds_option::OptionNanoSecondsTimestampVisitor
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^            type Value = Option<DateTime<Utc>>;$/;"	t	implementation:serde::ts_seconds_option::OptionSecondsTimestampVisitor
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^        type Value = DateTime<FixedOffset>;$/;"	t	implementation:serde::DateTimeVisitor
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^        type Value = Weekday;$/;"	t	implementation:weekday_serde::WeekdayVisitor
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^        type Value = NaiveDate;$/;"	t	implementation:serde::NaiveDateVisitor
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^            type Value = NaiveDateTime;$/;"	t	implementation:serde::ts_milliseconds::NaiveDateTimeFromMilliSecondsVisitor
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^            type Value = NaiveDateTime;$/;"	t	implementation:serde::ts_nanoseconds::NaiveDateTimeFromNanoSecondsVisitor
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^            type Value = NaiveDateTime;$/;"	t	implementation:serde::ts_seconds::NaiveDateTimeFromSecondsVisitor
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^        type Value = NaiveDateTime;$/;"	t	implementation:serde::NaiveDateTimeVisitor
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^        type Value = NaiveTime;$/;"	t	implementation:serde::NaiveTimeVisitor
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/impl_serde.rs	/^    type Value = GenericArray<T, N>;$/;"	t
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^impl<'v> From<&'v str> for Value<'v> {$/;"	c
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^impl<'v> From<bool> for Value<'v> {$/;"	c
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^impl<'v> From<char> for Value<'v> {$/;"	c
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^impl<'v> From<f32> for Value<'v> {$/;"	c
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^impl<'v> From<f64> for Value<'v> {$/;"	c
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^impl<'v> From<i16> for Value<'v> {$/;"	c
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^impl<'v> From<i32> for Value<'v> {$/;"	c
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^impl<'v> From<i64> for Value<'v> {$/;"	c
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^impl<'v> From<i8> for Value<'v> {$/;"	c
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^impl<'v> From<isize> for Value<'v> {$/;"	c
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^impl<'v> From<u16> for Value<'v> {$/;"	c
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^impl<'v> From<u32> for Value<'v> {$/;"	c
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^impl<'v> From<u64> for Value<'v> {$/;"	c
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^impl<'v> From<u8> for Value<'v> {$/;"	c
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^impl<'v> From<usize> for Value<'v> {$/;"	c
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    impl<'v> fmt::Debug for kv::Value<'v> {$/;"	c	module:fmt_support
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    impl<'v> fmt::Display for kv::Value<'v> {$/;"	c	module:fmt_support
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    impl<'v> kv::Value<'v> {$/;"	c	module:fmt_support
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    impl<'v> kv::Value<'v> {$/;"	c	module:sval_support
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    impl<'v> sval::Value for kv::Value<'v> {$/;"	c	module:sval_support
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^impl<'v> ToValue for Value<'v> {$/;"	c
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^impl<'v> Value<'v> {$/;"	c
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^pub struct Value<'v> {$/;"	s
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/test.rs	/^impl<'v> Value<'v> {$/;"	c
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^            type Value = Level;$/;"	t	implementation:Level::deserialize::LevelEnum
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^            type Value = Level;$/;"	t	implementation:Level::deserialize::LevelIdentifier
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^            type Value = LevelFilter;$/;"	t	implementation:LevelFilter::deserialize::LevelFilterEnum
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^            type Value = LevelFilter;$/;"	t	implementation:LevelFilter::deserialize::LevelFilterIdentifier
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^    type Value = ArrayStorage<N, R, C>;$/;"	t
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^    type Value = Self;$/;"	t	implementation:UInt
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^    type Value = UInt<U, B>;$/;"	t	implementation:UInt
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^    type Value = typenum::U1;$/;"	t	implementation:U1
Value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^    type Value: NamedDim<Name = Self>;$/;"	t	interface:DimName
ValuesMut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    type ValuesMut = slice::IterMut<'a, N>;$/;"	t
ValuesMut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    type ValuesMut: Iterator<Item = &'a mut N>;$/;"	t	interface:CsStorageIterMut
Var	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^impl<'a> Var<'a> {$/;"	c
Var	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^struct Var<'a> {$/;"	s
Var	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    type Var = U;$/;"	t
Var	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    type Var: Variate;$/;"	t	interface:PolyRing
VarNumber	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^pub trait VarNumber: ArrayLength<usize> + Eq + PartialEq + Clone + Debug {}$/;"	i
Variate	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^pub trait Variate: Zero + Clone + Eq + Debug {$/;"	i
Vec	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^    impl<S> Source for Vec<S>$/;"	c	module:std_support
VecIntoIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs	/^type VecIntoIter<T> = ::std::vec::IntoIter<T>;$/;"	t
VecIntoIter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^type VecIntoIter<T> = ::std::vec::IntoIter<T>;$/;"	t
VecStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^impl<'a, N: 'a + Copy, R: Dim> Extend<&'a N> for VecStorage<N, R, Dynamic> {$/;"	c
VecStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^impl<N, R, RV, SV> Extend<Vector<N, RV, SV>> for VecStorage<N, R, Dynamic>$/;"	c
VecStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^impl<N, R: Dim, C: Dim> Into<Vec<N>> for VecStorage<N, R, C> {$/;"	c
VecStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^impl<N, R: Dim, C: Dim> VecStorage<N, R, C> {$/;"	c
VecStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^impl<N, R: Dim> Extend<N> for VecStorage<N, R, Dynamic> {$/;"	c
VecStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^impl<N: Abomonation, R: Dim, C: Dim> Abomonation for VecStorage<N, R, C> {$/;"	c
VecStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^impl<N> Extend<N> for VecStorage<N, Dynamic, U1> {$/;"	c
VecStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^pub struct VecStorage<N, R: Dim, C: Dim> {$/;"	s
VecStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^unsafe impl<N: Scalar, C: Dim> ContiguousStorage<N, Dynamic, C> for VecStorage<N, Dynamic, C> wh/;"	c
VecStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^unsafe impl<N: Scalar, C: Dim> ContiguousStorageMut<N, Dynamic, C> for VecStorage<N, Dynamic, C>/;"	c
VecStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^unsafe impl<N: Scalar, C: Dim> Storage<N, Dynamic, C> for VecStorage<N, Dynamic, C>$/;"	c
VecStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^unsafe impl<N: Scalar, C: Dim> StorageMut<N, Dynamic, C> for VecStorage<N, Dynamic, C>$/;"	c
VecStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^unsafe impl<N: Scalar, R: DimName> ContiguousStorage<N, R, Dynamic> for VecStorage<N, R, Dynamic/;"	c
VecStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^unsafe impl<N: Scalar, R: DimName> ContiguousStorageMut<N, R, Dynamic> for VecStorage<N, R, Dyna/;"	c
VecStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^unsafe impl<N: Scalar, R: DimName> Storage<N, R, Dynamic> for VecStorage<N, R, Dynamic>$/;"	c
VecStorage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^unsafe impl<N: Scalar, R: DimName> StorageMut<N, R, Dynamic> for VecStorage<N, R, Dynamic>$/;"	c
Vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/matrix.rs	/^    type Vector: FiniteDimVectorSpace<Field = Self::Field>;$/;"	t	interface:SquareMatrix
Vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^impl<N, D: Dim, S> Vector<N, D, S>$/;"	c
Vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^impl<N: ComplexField, D: Dim, S: Storage<N, D>> Vector<N, D, S> {$/;"	c
Vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^impl<N: Scalar + PartialOrd, D: Dim, S: Storage<N, D>> Vector<N, D, S> {$/;"	c
Vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^impl<N: Scalar + Field, S: Storage<N, U3>> Vector<N, U3, S>$/;"	c
Vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^impl<N: Scalar + Zero + One + ClosedAdd + ClosedSub + ClosedMul, D: Dim, S: Storage<N, D>>$/;"	c
Vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^impl<N: Scalar + Zero, D: DimAdd<U1>, S: Storage<N, D>> Vector<N, D, S> {$/;"	c
Vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^impl<N: Scalar, D: Dim, S: Storage<N, D>> Vector<N, D, S> {$/;"	c
Vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^impl<N: Scalar, D: Dim, S: StorageMut<N, D>> Vector<N, D, S> {$/;"	c
Vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^pub type Vector<N, D, S> = Matrix<N, D, U1, S>;$/;"	t
Vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/convolution.rs	/^impl<N: RealField, D1: Dim, S1: Storage<N, D1>> Vector<N, D1, S1> {$/;"	c
Vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_ops.rs	/^impl<N: Scalar + Zero + ClosedAdd + ClosedMul, D: Dim, S: StorageMut<N, D>> Vector<N, D, S> {$/;"	c
Vector1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Vector1<N> = VectorN<N, U1>;$/;"	t
Vector2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Vector2<N> = VectorN<N, U2>;$/;"	t
Vector3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Vector3<N> = VectorN<N, U3>;$/;"	t
Vector4	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Vector4<N> = VectorN<N, U4>;$/;"	t
Vector5	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Vector5<N> = VectorN<N, U5>;$/;"	t
Vector6	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type Vector6<N> = VectorN<N, U6>;$/;"	t
VectorN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs	/^pub type VectorN<N, D> = MatrixMN<N, D, U1>;$/;"	t
VectorN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^impl<N, R: DimName> VectorN<N, R>$/;"	c
VectorN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^impl<N: ComplexField, D: DimName> VectorN<N, D>$/;"	c
VectorN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_conversion.rs	/^impl<N: Scalar + Zero + One, D: DimName> From<Point<N, D>> for VectorN<N, DimNameSum<D, U1>>$/;"	c
VectorSlice1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type VectorSlice1<'a, N, RStride = U1, CStride = U1> =$/;"	t
VectorSlice2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type VectorSlice2<'a, N, RStride = U1, CStride = U2> =$/;"	t
VectorSlice3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type VectorSlice3<'a, N, RStride = U1, CStride = U3> =$/;"	t
VectorSlice4	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type VectorSlice4<'a, N, RStride = U1, CStride = U4> =$/;"	t
VectorSlice5	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type VectorSlice5<'a, N, RStride = U1, CStride = U5> =$/;"	t
VectorSlice6	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type VectorSlice6<'a, N, RStride = U1, CStride = U6> =$/;"	t
VectorSliceMut1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type VectorSliceMut1<'a, N, RStride = U1, CStride = U1> =$/;"	t
VectorSliceMut2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type VectorSliceMut2<'a, N, RStride = U1, CStride = U2> =$/;"	t
VectorSliceMut3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type VectorSliceMut3<'a, N, RStride = U1, CStride = U3> =$/;"	t
VectorSliceMut4	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type VectorSliceMut4<'a, N, RStride = U1, CStride = U4> =$/;"	t
VectorSliceMut5	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type VectorSliceMut5<'a, N, RStride = U1, CStride = U5> =$/;"	t
VectorSliceMut6	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type VectorSliceMut6<'a, N, RStride = U1, CStride = U6> =$/;"	t
VectorSliceMutN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type VectorSliceMutN<'a, N, D, RStride = U1, CStride = D> =$/;"	t
VectorSliceN	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs	/^pub type VectorSliceN<'a, N, D, RStride = U1, CStride = D> =$/;"	t
VectorSpace	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/vector.rs	/^pub trait VectorSpace: Module<Ring = <Self as VectorSpace>::Field>$/;"	i
VectorSum	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^pub type VectorSum<N, R1, R2> =$/;"	t
Visitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^pub trait Visitor<'kvs> {$/;"	i
Visitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^pub(super) trait Visitor {$/;"	i
Void	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^enum Void {}$/;"	g
Warn	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    Warn,$/;"	e	enum:Level
Warn	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    Warn,$/;"	e	enum:LevelFilter
Wed	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    Wed = 2,$/;"	e	enum:Weekday
WeekFromMon	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    WeekFromMon,$/;"	e	enum:Numeric
WeekFromSun	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    WeekFromSun,$/;"	e	enum:Numeric
Weekday	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^impl FromStr for Weekday {$/;"	c
Weekday	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    impl ser::Serialize for Weekday {$/;"	c	module:weekday_serde
Weekday	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    impl<'de> de::Deserialize<'de> for Weekday {$/;"	c	module:weekday_serde
Weekday	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^impl Weekday {$/;"	c
Weekday	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^impl fmt::Display for Weekday {$/;"	c
Weekday	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^impl num_traits::FromPrimitive for Weekday {$/;"	c
Weekday	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^pub enum Weekday {$/;"	g
WeekdayFromMon	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    WeekdayFromMon,$/;"	e	enum:Numeric
WeekdayVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    impl<'de> de::Visitor<'de> for WeekdayVisitor {$/;"	c	module:weekday_serde
WeekdayVisitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    struct WeekdayVisitor;$/;"	s	module:weekday_serde
Weibull	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weibull.rs	/^impl Distribution<f64> for Weibull {$/;"	c
Weibull	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weibull.rs	/^impl Weibull {$/;"	c
Weibull	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weibull.rs	/^pub struct Weibull {$/;"	s
Weight	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^pub trait Weight:$/;"	i
WeightedError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/mod.rs	/^impl ::std::error::Error for WeightedError {}$/;"	c
WeightedError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/mod.rs	/^impl fmt::Display for WeightedError {$/;"	c
WeightedError	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/mod.rs	/^pub enum WeightedError {$/;"	g
WeightedIndex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^impl<W: Weight> Clone for WeightedIndex<W>$/;"	c
WeightedIndex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^impl<W: Weight> Distribution<usize> for WeightedIndex<W> {$/;"	c
WeightedIndex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^impl<W: Weight> WeightedIndex<W> {$/;"	c
WeightedIndex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^impl<W: Weight> fmt::Debug for WeightedIndex<W>$/;"	c
WeightedIndex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^pub struct WeightedIndex<W: Weight> {$/;"	s
WeightedIndex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/mod.rs	/^impl<X: SampleUniform + PartialOrd> WeightedIndex<X> {$/;"	c
WeightedIndex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/mod.rs	/^impl<X> Distribution<usize> for WeightedIndex<X>$/;"	c
WeightedIndex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/mod.rs	/^pub struct WeightedIndex<X: SampleUniform + PartialOrd> {$/;"	s
WhileSome	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^impl<I, A> Iterator for WhileSome<I>$/;"	c
WhileSome	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub struct WhileSome<I> {$/;"	s
White	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    White,$/;"	e	enum:Color
WideningMultiply	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/utils.rs	/^pub trait WideningMultiply<RHS = Self> {$/;"	i
WindowHintedIterator	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^    impl<I: ExactSizeIterator + Iterator + Clone> Iterator for WindowHintedIterator<I> {$/;"	c	module:test
WindowHintedIterator	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^    struct WindowHintedIterator<I: ExactSizeIterator + Iterator + Clone> {$/;"	s	module:test
WithPosition	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs	/^impl<I: Iterator> Iterator for WithPosition<I> {$/;"	c
WithPosition	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs	/^impl<I> Clone for WithPosition<I>$/;"	c
WithPosition	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs	/^impl<I> ExactSizeIterator for WithPosition<I>$/;"	c
WithPosition	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs	/^pub struct WithPosition<I>$/;"	s
WordBoundary	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    WordBoundary,$/;"	e	enum:EmptyLook
WordBoundaryAscii	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    WordBoundaryAscii,$/;"	e	enum:EmptyLook
Wrapper	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/wrapper.rs	/^impl<T, A, M: Operator> Div<Wrapper<T, A, M>> for Wrapper<T, A, M>$/;"	c
Wrapper	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/wrapper.rs	/^impl<T, A, M: Operator> Mul<Wrapper<T, A, M>> for Wrapper<T, A, M>$/;"	c
Wrapper	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/wrapper.rs	/^impl<T, A, M: Operator> TwoSidedInverse<M> for Wrapper<T, A, M>$/;"	c
Wrapper	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/wrapper.rs	/^impl<T, A, M> Wrapper<T, A, M> {$/;"	c
Wrapper	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/wrapper.rs	/^impl<T, A: Operator, M> Add<Wrapper<T, A, M>> for Wrapper<T, A, M>$/;"	c
Wrapper	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/wrapper.rs	/^impl<T, A: Operator, M> Neg for Wrapper<T, A, M>$/;"	c
Wrapper	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/wrapper.rs	/^impl<T, A: Operator, M> Sub<Wrapper<T, A, M>> for Wrapper<T, A, M>$/;"	c
Wrapper	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/wrapper.rs	/^impl<T: AbsDiffEq, A, M> AbsDiffEq for Wrapper<T, A, M> {$/;"	c
Wrapper	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/wrapper.rs	/^impl<T: Clone, A, M> Clone for Wrapper<T, A, M> {$/;"	c
Wrapper	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/wrapper.rs	/^impl<T: Copy, A, M> Copy for Wrapper<T, A, M> {}$/;"	c
Wrapper	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/wrapper.rs	/^impl<T: Display, A: Operator, M: Operator> Display for Wrapper<T, A, M> {$/;"	c
Wrapper	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/wrapper.rs	/^impl<T: PartialEq, A, M> PartialEq for Wrapper<T, A, M> {$/;"	c
Wrapper	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/wrapper.rs	/^impl<T: PartialOrd, A, M> PartialOrd for Wrapper<T, A, M> {$/;"	c
Wrapper	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/wrapper.rs	/^impl<T: RelativeEq, A, M> RelativeEq for Wrapper<T, A, M> {$/;"	c
Wrapper	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/wrapper.rs	/^impl<T: UlpsEq, A, M> UlpsEq for Wrapper<T, A, M> {$/;"	c
Wrapper	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/wrapper.rs	/^pub struct Wrapper<T, A, M> {$/;"	s
Wrapping	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/bounds.rs	/^impl<T: Bounded> Bounded for Wrapping<T> {$/;"	c
Wrapping	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^impl<T: FromPrimitive> FromPrimitive for Wrapping<T> {$/;"	c
Wrapping	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^impl<T: NumCast> NumCast for Wrapping<T> {$/;"	c
Wrapping	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^impl<T: ToPrimitive> ToPrimitive for Wrapping<T> {$/;"	c
Wrapping	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/identities.rs	/^impl<T: One> One for Wrapping<T>$/;"	c
Wrapping	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/identities.rs	/^impl<T: Zero> Zero for Wrapping<T>$/;"	c
Wrapping	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^impl<T: Num> Num for Wrapping<T>$/;"	c
Wrapping	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/wrapping.rs	/^impl<T: WrappingAdd> WrappingAdd for Wrapping<T>$/;"	c
Wrapping	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/wrapping.rs	/^impl<T: WrappingMul> WrappingMul for Wrapping<T>$/;"	c
Wrapping	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/wrapping.rs	/^impl<T: WrappingShl> WrappingShl for Wrapping<T>$/;"	c
Wrapping	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/wrapping.rs	/^impl<T: WrappingShr> WrappingShr for Wrapping<T>$/;"	c
Wrapping	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/wrapping.rs	/^impl<T: WrappingSub> WrappingSub for Wrapping<T>$/;"	c
Wrapping	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/sign.rs	/^impl<T: Signed> Signed for Wrapping<T>$/;"	c
Wrapping	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/sign.rs	/^impl<T: Unsigned> Unsigned for Wrapping<T> where Wrapping<T>: Num {}$/;"	c
WrappingAdd	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/wrapping.rs	/^pub trait WrappingAdd: Sized + Add<Self, Output = Self> {$/;"	i
WrappingMul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/wrapping.rs	/^pub trait WrappingMul: Sized + Mul<Self, Output = Self> {$/;"	i
WrappingShl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/wrapping.rs	/^pub trait WrappingShl: Sized + Shl<usize, Output = Self> {$/;"	i
WrappingShr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/wrapping.rs	/^pub trait WrappingShr: Sized + Shr<usize, Output = Self> {$/;"	i
WrappingSub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/wrapping.rs	/^pub trait WrappingSub: Sized + Sub<Self, Output = Self> {$/;"	i
WriteStyle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^impl Default for WriteStyle {$/;"	c
WriteStyle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^pub enum WriteStyle {$/;"	g
WriteStyle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^impl WriteStyle {$/;"	c
Writer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^impl Writer {$/;"	c
Writer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^impl fmt::Debug for Writer {$/;"	c
Writer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^pub(crate) struct Writer {$/;"	s
X	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^            type X = MyF32;$/;"	t	implementation:tests::test_custom_uniform::UniformMyF32
X	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^    type X = Duration;$/;"	t	implementation:UniformDuration
X	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^    type X;$/;"	t	interface:UniformSampler
X	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<X: Unsigned, N: Unsigned> Pow<N> for X$/;"	c
X	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<X> Gcd<U0> for X$/;"	c
X	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Y: Unsigned, U: Unsigned, B: Bit, X: Unsigned> PrivatePow<Y, UInt<UInt<U, B>, B0>> for X$/;"	c
X	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Y: Unsigned, U: Unsigned, B: Bit, X: Unsigned> PrivatePow<Y, UInt<UInt<U, B>, B1>> for X$/;"	c
X	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Y: Unsigned, X: Unsigned> PrivatePow<Y, U0> for X {$/;"	c
X	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^impl<Y: Unsigned, X: Unsigned> PrivatePow<Y, U1> for X$/;"	c
Xor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/operator_aliases.rs	/^pub type Xor<A, B> = <A as BitXor<B>>::Output;$/;"	t
YEAR_DELTAS	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^static YEAR_DELTAS: [u8; 401] = [$/;"	v
YEAR_TO_FLAGS	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^static YEAR_TO_FLAGS: [YearFlags; 400] = [$/;"	v
Year	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    Year,$/;"	e	enum:Numeric
YearDiv100	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    YearDiv100,$/;"	e	enum:Numeric
YearFlags	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^impl YearFlags {$/;"	c
YearFlags	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^impl fmt::Debug for YearFlags {$/;"	c
YearFlags	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^pub struct YearFlags(pub u8);$/;"	s
YearMod100	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    YearMod100,$/;"	e	enum:Numeric
Yellow	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    Yellow,$/;"	e	enum:Color
Z0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^impl Mul<ATerm> for Z0 {$/;"	c
Z0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^impl<V, A> Mul<TArr<V, A>> for Z0$/;"	c
Z0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl Cmp<Z0> for Z0 {$/;"	c
Z0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl Gcd<Z0> for Z0 {$/;"	c
Z0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl Integer for Z0 {$/;"	c
Z0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl Max<Z0> for Z0 {$/;"	c
Z0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl Min<Z0> for Z0 {$/;"	c
Z0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl Neg for Z0 {$/;"	c
Z0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl Pow<Z0> for Z0 {$/;"	c
Z0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl Sub<Z0> for Z0 {$/;"	c
Z0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl Z0 {$/;"	c
Z0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<I: Integer + NonZero> Div<I> for Z0 {$/;"	c
Z0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<I: Integer + NonZero> Rem<I> for Z0 {$/;"	c
Z0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<I: Integer> Add<I> for Z0 {$/;"	c
Z0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<I: Integer> Mul<I> for Z0 {$/;"	c
Z0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U: Unsigned + NonZero> Cmp<NInt<U>> for Z0 {$/;"	c
Z0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U: Unsigned + NonZero> Cmp<PInt<U>> for Z0 {$/;"	c
Z0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U: Unsigned + NonZero> Pow<NInt<U>> for Z0 {$/;"	c
Z0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U: Unsigned + NonZero> Pow<PInt<U>> for Z0 {$/;"	c
Z0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U: Unsigned + NonZero> Sub<NInt<U>> for Z0 {$/;"	c
Z0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U: Unsigned + NonZero> Sub<PInt<U>> for Z0 {$/;"	c
Z0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U> Gcd<NInt<U>> for Z0$/;"	c
Z0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U> Gcd<PInt<U>> for Z0$/;"	c
Z0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U> Max<NInt<U>> for Z0$/;"	c
Z0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U> Max<PInt<U>> for Z0$/;"	c
Z0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U> Min<NInt<U>> for Z0$/;"	c
Z0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^impl<U> Min<PInt<U>> for Z0$/;"	c
Z0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^pub struct Z0;$/;"	s
Z0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^impl Abs for Z0 {$/;"	c
ZIG_EXP_F	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/ziggurat_tables.rs	/^pub static ZIG_EXP_F: [f64; 257] =$/;"	v
ZIG_EXP_X	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/ziggurat_tables.rs	/^pub static ZIG_EXP_X: [f64; 257] =$/;"	v
ZIG_NORM_F	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/ziggurat_tables.rs	/^pub static ZIG_NORM_F: [f64; 257] =$/;"	v
ZIG_NORM_X	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/ziggurat_tables.rs	/^pub static ZIG_NORM_X: [f64; 257] =$/;"	v
ZZ	/Users/williamcashman/Honours/Program/n_poly/src/algebras/integers.rs	/^impl AbstractMagma<Additive> for ZZ {$/;"	c
ZZ	/Users/williamcashman/Honours/Program/n_poly/src/algebras/integers.rs	/^impl EuclideanDomain for ZZ {$/;"	c
ZZ	/Users/williamcashman/Honours/Program/n_poly/src/algebras/integers.rs	/^impl Group for ZZ {$/;"	c
ZZ	/Users/williamcashman/Honours/Program/n_poly/src/algebras/integers.rs	/^impl Identity<Additive> for ZZ {$/;"	c
ZZ	/Users/williamcashman/Honours/Program/n_poly/src/algebras/integers.rs	/^impl Identity<Multiplicative> for ZZ {$/;"	c
ZZ	/Users/williamcashman/Honours/Program/n_poly/src/algebras/integers.rs	/^impl One for ZZ {$/;"	c
ZZ	/Users/williamcashman/Honours/Program/n_poly/src/algebras/integers.rs	/^impl Ring for ZZ {$/;"	c
ZZ	/Users/williamcashman/Honours/Program/n_poly/src/algebras/integers.rs	/^impl ScalarRing for ZZ {$/;"	c
ZZ	/Users/williamcashman/Honours/Program/n_poly/src/algebras/integers.rs	/^impl TwoSidedInverse<Additive> for ZZ {$/;"	c
ZZ	/Users/williamcashman/Honours/Program/n_poly/src/algebras/integers.rs	/^impl Zero for ZZ {$/;"	c
ZZ	/Users/williamcashman/Honours/Program/n_poly/src/algebras/integers.rs	/^impl fmt::Display for ZZ {$/;"	c
ZZ	/Users/williamcashman/Honours/Program/n_poly/src/algebras/integers.rs	/^impl std::str::FromStr for ZZ {$/;"	c
ZZ	/Users/williamcashman/Honours/Program/n_poly/src/algebras/integers.rs	/^pub struct ZZ(pub i32);$/;"	s
Zero	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    Zero,$/;"	e	enum:Pad
Zero	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/identities.rs	/^pub trait Zero: Sized + Add<Self, Output = Self> {$/;"	i
Zero	/Users/williamcashman/Honours/Program/n_poly/src/algebras/mod.rs	/^pub trait Zero: Eq + PartialEq + Sized {$/;"	i
ZigTable	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/ziggurat_tables.rs	/^pub type ZigTable = &'static [f64; 257];$/;"	t
Zip	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs	/^pub struct Zip<T> {$/;"	s
ZipEq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_eq_impl.rs	/^impl<I, J> ExactSizeIterator for ZipEq<I, J>$/;"	c
ZipEq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_eq_impl.rs	/^impl<I, J> Iterator for ZipEq<I, J>$/;"	c
ZipEq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_eq_impl.rs	/^pub struct ZipEq<I, J> {$/;"	s
ZipLongest	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_longest.rs	/^impl<T, U> DoubleEndedIterator for ZipLongest<T, U>$/;"	c
ZipLongest	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_longest.rs	/^impl<T, U> ExactSizeIterator for ZipLongest<T, U>$/;"	c
ZipLongest	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_longest.rs	/^impl<T, U> Iterator for ZipLongest<T, U>$/;"	c
ZipLongest	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_longest.rs	/^pub struct ZipLongest<T, U> {$/;"	s
__NonExhaustive	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    __NonExhaustive,$/;"	e	enum:SecondsFormat
__Nonexhaustive	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    __Nonexhaustive,$/;"	e	enum:Color
__Nonexhaustive	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/error.rs	/^    __Nonexhaustive,$/;"	e	enum:Error
__log_file	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/macros.rs	/^macro_rules! __log_file {$/;"	M
__log_format_args	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/macros.rs	/^macro_rules! __log_format_args {$/;"	M
__log_line	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/macros.rs	/^macro_rules! __log_line {$/;"	M
__log_module_path	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/macros.rs	/^macro_rules! __log_module_path {$/;"	M
__private_api_enabled	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^pub fn __private_api_enabled(level: Level, target: &str) -> bool {$/;"	f
__private_api_log	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^pub fn __private_api_log($/;"	f
_add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/wrapper.rs	/^    _add: PhantomData<A>,$/;"	m	struct:Wrapper
_check	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^        fn _check(_: &Source) {}$/;"	f	function:tests::source_is_object_safe
_check	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^        fn _check(_: &Visitor) {}$/;"	f	function:tests::visitor_is_object_safe
_dummy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    _dummy: Void,$/;"	m	struct:InternalNumeric
_dummy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    _dummy: (),$/;"	m	struct:Parsed
_dummy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    _dummy: (),$/;"	m	struct:ParseWeekdayError
_find	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    fn _find(&self, haystack: &[u8]) -> Option<usize> {$/;"	P	implementation:SingleByteSet
_marker	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    _marker: PhantomData<T>,$/;"	m	struct:GenericArrayImplEven
_mi	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    _mi: PhantomData<I>,$/;"	m	struct:TupleCombinations
_mt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    _mt: PhantomData<T>$/;"	m	struct:TupleCombinations
_mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/wrapper.rs	/^    _mul: PhantomData<M>,$/;"	m	struct:Wrapper
_n	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/impl_serde.rs	/^    _n: PhantomData<N>,$/;"	m	struct:GAVisitor
_op	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^    _op: PhantomData<O>,$/;"	m	struct:Id
_phantom	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^    _phantom: PhantomData<C>,$/;"	m	struct:Transform
_phantom	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^    _phantom: ::core::marker::PhantomData<T>,$/;"	m	struct:SliceChooseIter
_phantom	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/cache.rs	/^        _phantom: PhantomData<Box<dyn Send + Sync + UnwindSafe>>,$/;"	m	struct:imp::Cached
_phantoms	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    _phantoms: PhantomData<(N, R, C)>,$/;"	m	struct:Matrix
_phantoms	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    _phantoms: PhantomData<(N, R, C)>,$/;"	m	struct:CsMatrix
_res	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    _res: PhantomData<fn() -> R>,$/;"	m	struct:MapInto
_t	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/impl_serde.rs	/^    _t: PhantomData<T>,$/;"	m	struct:GAVisitor
a	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    a: Fuse<I>,$/;"	m	struct:Interleave
a	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    a: I,$/;"	m	struct:Product
a	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    a: Peekable<I>,$/;"	m	struct:MergeBy
a	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_eq_impl.rs	/^    a: I,$/;"	m	struct:ZipEq
a	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_longest.rs	/^    a: Fuse<T>,$/;"	m	struct:ZipLongest
a	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^    pub fn a() -> Self$/;"	f
a	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/mock.rs	/^    a: u64,$/;"	m	struct:StepRng
a_axis	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^    pub fn a_axis() -> Unit<Self>$/;"	f
a_cur	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    a_cur: Option<I::Item>,$/;"	m	struct:Product
abs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn abs(self) -> Self::RealField {$/;"	P	implementation:Complex
abs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn abs(self) -> Self::RealField;$/;"	P	interface:ComplexField
abs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs	/^    pub fn abs(&self) -> MatrixMN<N, R, C>$/;"	P	implementation:Matrix
abs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs	/^pub fn abs<T: Signed>(a: &T) -> T {$/;"	f
abs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn abs(self) -> Self {$/;"	P	implementation:f32
abs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn abs(self) -> Self {$/;"	P	implementation:f64
abs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn abs(self) -> Self {$/;"	P	interface:FloatCore
abs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn abs(self) -> Self;$/;"	P	interface:Float
abs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn abs(self) -> Self;$/;"	P	interface:Real
abs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/sign.rs	/^    fn abs(&self) -> Self {$/;"	f
abs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/sign.rs	/^    fn abs(&self) -> Self;$/;"	P	interface:Signed
abs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/sign.rs	/^pub fn abs<T: Signed>(value: T) -> T {$/;"	f
abs_diff_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^    fn abs_diff_eq(&self, _: &Self, _: Self::Epsilon) -> bool {$/;"	P	implementation:Id
abs_diff_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/wrapper.rs	/^    fn abs_diff_eq(&self, other: &Self, eps: Self::Epsilon) -> bool {$/;"	P	implementation:Wrapper
abs_diff_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    fn abs_diff_eq(&self, other: &Self, epsilon: Self::Epsilon) -> bool {$/;"	f
abs_diff_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^    fn abs_diff_eq(&self, other: &Self, epsilon: Self::Epsilon) -> bool {$/;"	f
abs_diff_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^    fn abs_diff_eq(&self, other: &Self, epsilon: Self::Epsilon) -> bool {$/;"	f
abs_diff_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    fn abs_diff_eq(&self, other: &Self, epsilon: Self::Epsilon) -> bool {$/;"	P	implementation:Quaternion
abs_diff_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    fn abs_diff_eq(&self, other: &Self, epsilon: Self::Epsilon) -> bool {$/;"	P	implementation:UnitQuaternion
abs_diff_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^    fn abs_diff_eq(&self, other: &Self, epsilon: Self::Epsilon) -> bool {$/;"	f
abs_diff_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^    fn abs_diff_eq(&self, other: &Self, epsilon: Self::Epsilon) -> bool {$/;"	f
abs_diff_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^    fn abs_diff_eq(&self, other: &Self, epsilon: Self::Epsilon) -> bool {$/;"	f
abs_diff_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs	/^    fn abs_diff_eq(&self, other: &Self, epsilon: Self::Epsilon) -> bool {$/;"	f
abs_diff_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs	/^    fn abs_diff_eq(&self, other: &Self, epsilon: Self::Epsilon) -> bool {$/;"	P	implementation:UnitComplex
abs_sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn abs_sub(self, other: Self) -> Self {$/;"	P	implementation:f32
abs_sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn abs_sub(self, other: Self) -> Self {$/;"	P	implementation:f64
abs_sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn abs_sub(self, other: Self) -> Self;$/;"	P	interface:Float
abs_sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn abs_sub(self, other: Self) -> Self;$/;"	P	interface:Real
abs_sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/sign.rs	/^    fn abs_sub(&self, other: &Self) -> Self {$/;"	f
abs_sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/sign.rs	/^    fn abs_sub(&self, other: &Self) -> Self;$/;"	P	interface:Signed
abs_sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/sign.rs	/^pub fn abs_sub<T: Signed>(x: T, y: T) -> T {$/;"	f
abstract_rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod abstract_rotation;$/;"	n
ac	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    ac: Option<AhoCorasick<u32>>,$/;"	m	struct:ExecReadOnly
acos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn acos(self) -> Self {$/;"	P	implementation:Complex
acos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn acos(self) -> Self;$/;"	P	interface:ComplexField
acos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn acos(&self) -> Self {$/;"	f
acos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub fn acos(&self) -> Self {$/;"	P	implementation:Complex
acos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn acos(self) -> Self {$/;"	P	implementation:f32
acos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn acos(self) -> Self {$/;"	P	implementation:f64
acos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn acos(self) -> Self;$/;"	P	interface:Float
acos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn acos(self) -> Self;$/;"	P	interface:Real
acosh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn acosh(self) -> Self {$/;"	P	implementation:Complex
acosh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn acosh(self) -> Self;$/;"	P	interface:ComplexField
acosh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn acosh(&self) -> Self {$/;"	f
acosh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub fn acosh(&self) -> Self {$/;"	P	implementation:Complex
acosh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn acosh(self) -> Self {$/;"	P	implementation:f32
acosh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn acosh(self) -> Self {$/;"	P	implementation:f64
acosh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn acosh(self) -> Self;$/;"	P	interface:Float
acosh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn acosh(self) -> Self;$/;"	P	interface:Real
ad_mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^    pub fn ad_mul<R2: Dim, C2: Dim, SB>(&self, rhs: &Matrix<N, R2, C2, SB>) -> MatrixMN<N, C1, C/;"	f
ad_mul_to	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^    pub fn ad_mul_to<R2: Dim, C2: Dim, SB, R3: Dim, C3: Dim, SC>($/;"	f
ad_solve_lower_triangular	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs	/^    pub fn ad_solve_lower_triangular<R2: Dim, C2: Dim, S2>($/;"	P	implementation:SquareMatrix
ad_solve_lower_triangular_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs	/^    pub fn ad_solve_lower_triangular_mut<R2: Dim, C2: Dim, S2>($/;"	P	implementation:SquareMatrix
ad_solve_upper_triangular	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs	/^    pub fn ad_solve_upper_triangular<R2: Dim, C2: Dim, S2>($/;"	P	implementation:SquareMatrix
ad_solve_upper_triangular_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs	/^    pub fn ad_solve_upper_triangular_mut<R2: Dim, C2: Dim, S2>($/;"	P	implementation:SquareMatrix
adapter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/mod.rs	/^pub mod adapter;$/;"	n
adaptors	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^mod adaptors;$/;"	n
add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^    fn add(self, _: Id<Additive>) -> Id<Additive> {$/;"	P	implementation:Id
add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/wrapper.rs	/^    fn add(self, lhs: Self) -> Self {$/;"	f
add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    fn add(self, rhs: OldDuration) -> Date<Tz> {$/;"	P	implementation:Date
add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn add(self, rhs: OldDuration) -> DateTime<Tz> {$/;"	P	implementation:DateTime
add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn add(self, rhs: OldDuration) -> NaiveDate {$/;"	P	implementation:NaiveDate
add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn add(self, rhs: OldDuration) -> NaiveDateTime {$/;"	P	implementation:NaiveDateTime
add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    fn add(self, rhs: OldDuration) -> NaiveTime {$/;"	P	implementation:NaiveTime
add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/fixed.rs	/^    fn add(self, rhs: FixedOffset) -> DateTime<Tz> {$/;"	P	implementation:DateTime
add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/fixed.rs	/^    fn add(self, rhs: FixedOffset) -> NaiveDateTime {$/;"	P	implementation:NaiveDateTime
add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/fixed.rs	/^    fn add(self, rhs: FixedOffset) -> NaiveTime {$/;"	P	implementation:NaiveTime
add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    fn add(self, rhs: Duration) -> Duration {$/;"	P	implementation:Duration
add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/size_hint.rs	/^pub fn add(a: SizeHint, b: SizeHint) -> SizeHint {$/;"	f
add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^    fn add(self, rhs: usize) -> Self {$/;"	P	implementation:Dynamic
add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_ops.rs	/^    fn add(self, rhs: &'b CsMatrix<N, R2, C2, S2>) -> Self::Output {$/;"	f
add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn add(self, other: Self) -> Self::Output {$/;"	P	implementation:Complex
add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn add(self, other: T) -> Self::Output {$/;"	P	implementation:Complex
add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn add(&mut self) -> Option<StatePtr> {$/;"	P	implementation:Transitions
add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/pikevm.rs	/^    fn add($/;"	P	implementation:Fsm
add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^    fn add(self, _: ATerm) -> Self::Output {$/;"	P	implementation:ATerm
add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^    fn add(self, rhs: TArr<Vr, Ar>) -> Self::Output {$/;"	f
add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn add(self, _: NInt<Ur>) -> Self::Output {$/;"	f
add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn add(self, _: PInt<Ur>) -> Self::Output {$/;"	f
add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn add(self, _: Z0) -> Self::Output {$/;"	P	implementation:NInt
add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn add(self, _: Z0) -> Self::Output {$/;"	P	implementation:PInt
add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn add(self, rhs: I) -> Self::Output {$/;"	P	implementation:Z0
add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn add(self, rhs: NInt<Ur>) -> Self::Output {$/;"	f
add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn add(self, rhs: PInt<Ur>) -> Self::Output {$/;"	f
add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn add(self, _: B0) -> Self::Output {$/;"	P	implementation:UInt
add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn add(self, _: B0) -> Self::Output {$/;"	P	implementation:UTerm
add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn add(self, _: B1) -> Self::Output {$/;"	P	implementation:UInt
add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn add(self, _: B1) -> Self::Output {$/;"	P	implementation:UTerm
add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn add(self, _: B1) -> Self::Output {$/;"	f
add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn add(self, _: UTerm) -> Self::Output {$/;"	P	implementation:UInt
add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn add(self, rhs: U) -> Self::Output {$/;"	P	implementation:UTerm
add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn add(self, rhs: UInt<Ur, B0>) -> Self::Output {$/;"	f
add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn add(self, rhs: UInt<Ur, B1>) -> Self::Output {$/;"	f
add	/Users/williamcashman/Honours/Program/n_poly/src/algebras/complex.rs	/^    fn add(&self, other: &Self) -> Self {$/;"	P	implementation:CC
add	/Users/williamcashman/Honours/Program/n_poly/src/algebras/finite_field.rs	/^    fn add(&self, other: &Self) -> Self {$/;"	P	implementation:FF
add	/Users/williamcashman/Honours/Program/n_poly/src/algebras/integers.rs	/^    fn add(&self, other: &Self) -> Self {$/;"	P	implementation:ZZ
add	/Users/williamcashman/Honours/Program/n_poly/src/algebras/mod.rs	/^    fn add(&self, other: &Self) -> Self;$/;"	P	interface:Group
add	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    fn add(&self, _other: &Self) -> Self {$/;"	P	implementation:Term
add	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    fn add(&self, other: &Self) -> Self {$/;"	P	implementation:Poly
add	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    fn add(&self, other: &Self) -> Self;$/;"	P	interface:Variate
add	/Users/williamcashman/Honours/Program/n_poly/src/algebras/real.rs	/^    fn add(&self, other: &Self) -> Self {$/;"	P	implementation:RR
add	/Users/williamcashman/Honours/Program/n_poly/src/ideals/mod.rs	/^    pub fn add(&mut self, item: Poly<'a, P>) {$/;"	P	implementation:Ideal
add	/Users/williamcashman/Honours/Program/n_poly/src/ideals/mod.rs	/^    pub fn add(&mut self, item: Term<P>) {$/;"	P	implementation:MonomialIdeal
add	/Users/williamcashman/Honours/Program/n_poly/src/polym.rs	/^    fn add(&self, other: &Self) -> Self {$/;"	P	implementation:MultiIndex
add	/Users/williamcashman/Honours/Program/n_poly/src/polyu.rs	/^    fn add(&self, other: &Self) -> Self {$/;"	P	implementation:UniIndex
add_ass	/Users/williamcashman/Honours/Program/n_poly/src/algebras/complex.rs	/^    fn add_ass(&mut self, other: &Self) {$/;"	P	implementation:CC
add_ass	/Users/williamcashman/Honours/Program/n_poly/src/algebras/finite_field.rs	/^    fn add_ass(&mut self, other: &Self) {$/;"	P	implementation:FF
add_ass	/Users/williamcashman/Honours/Program/n_poly/src/algebras/integers.rs	/^    fn add_ass(&mut self, other: &Self) {$/;"	P	implementation:ZZ
add_ass	/Users/williamcashman/Honours/Program/n_poly/src/algebras/mod.rs	/^    fn add_ass(&mut self, other: &Self);$/;"	P	interface:ScalarRing
add_ass	/Users/williamcashman/Honours/Program/n_poly/src/algebras/real.rs	/^    fn add_ass(&mut self, other: &Self) {$/;"	P	implementation:RR
add_assign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^    fn add_assign(&mut self, _: Id<Additive>) {$/;"	P	implementation:Id
add_assign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn add_assign(&mut self, rhs: OldDuration) {$/;"	P	implementation:NaiveDate
add_assign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn add_assign(&mut self, rhs: OldDuration) {$/;"	P	implementation:NaiveDateTime
add_assign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    fn add_assign(&mut self, rhs: OldDuration) {$/;"	P	implementation:NaiveTime
add_assign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn add_assign(&mut self, other: Self) {$/;"	P	implementation:opassign::Complex
add_assign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn add_assign(&mut self, other: T) {$/;"	P	implementation:opassign::Complex
add_scalar	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/size_hint.rs	/^pub fn add_scalar(sh: SizeHint, x: usize) -> SizeHint {$/;"	f
add_scalar	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^    pub fn add_scalar(&self, rhs: N) -> MatrixMN<N, R, C>$/;"	P	implementation:Matrix
add_scalar_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^    pub fn add_scalar_mut(&mut self, rhs: N)$/;"	P	implementation:Matrix
add_state	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn add_state(&mut self, state: State) -> Option<StatePtr> {$/;"	P	implementation:Fsm
add_step	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/pikevm.rs	/^    fn add_step($/;"	P	implementation:Fsm
add_sub_assign_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/op_macros.rs	/^macro_rules! add_sub_assign_impl($/;"	M
add_sub_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/op_macros.rs	/^macro_rules! add_sub_impl($/;"	M
add_with_leapsecond	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/fixed.rs	/^fn add_with_leapsecond<T>(lhs: &T, rhs: i32) -> T$/;"	f
adjoint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn adjoint(&self) -> MatrixMN<N, C, R>$/;"	P	implementation:Matrix
adjoint_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn adjoint_mut(&mut self) {$/;"	P	implementation:Matrix
adjoint_to	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn adjoint_to<R2, C2, SB>(&self, out: &mut Matrix<N, R2, C2, SB>)$/;"	P	implementation:Matrix
advance	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs	/^    fn advance(&mut self) {$/;"	P	implementation:CompleteState
advance	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs	/^    fn advance(&mut self) {$/;"	f
algebras	/Users/williamcashman/Honours/Program/n_poly/src/lib.rs	/^pub mod algebras;$/;"	n
alias	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs	/^mod alias;$/;"	n
alias_method	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/mod.rs	/^pub mod alias_method;$/;"	n
alias_slice	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs	/^mod alias_slice;$/;"	n
aliases	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^            aliases: Vec<u32>,$/;"	m	struct:WeightedIndex::new::Aliases
aliases	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^    aliases: Vec<u32>,$/;"	m	struct:WeightedIndex
all	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    fn all<G>(&mut self, mut f: G) -> bool$/;"	f
all	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs	/^pub fn all<I, F>(iterable: I, f: F) -> bool$/;"	f
all	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/utils.rs	/^    fn all(self) -> bool {$/;"	P	implementation:bool
all	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/utils.rs	/^    fn all(self) -> bool;$/;"	P	interface:BoolAsSIMD
all_ascii	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    all_ascii: bool,$/;"	m	struct:SingleByteSet
all_equal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn all_equal(&mut self) -> bool$/;"	P	interface:Itertools
all_finite	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/utils.rs	/^    fn all_finite(self) -> bool;$/;"	P	interface:FloatSIMDUtils
all_le	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/utils.rs	/^    fn all_le(self, other: Self) -> bool;$/;"	P	interface:FloatSIMDUtils
all_lt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/utils.rs	/^    fn all_lt(self, other: Self) -> bool;$/;"	P	interface:FloatSIMDUtils
allocate_from_iterator	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs	/^    fn allocate_from_iterator<I: IntoIterator<Item = N>>($/;"	P	interface:Allocator
allocate_from_iterator	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs	/^    fn allocate_from_iterator<I: IntoIterator<Item = N>>($/;"	P	implementation:DefaultAllocator
allocate_from_iterator	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs	/^    fn allocate_from_iterator<I: IntoIterator<Item = N>>($/;"	f
allocate_uninitialized	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs	/^    unsafe fn allocate_uninitialized(nrows: R, ncols: C) -> Self::Buffer;$/;"	P	interface:Allocator
allocate_uninitialized	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs	/^    unsafe fn allocate_uninitialized(_: R, _: C) -> Self::Buffer {$/;"	f
allocate_uninitialized	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs	/^    unsafe fn allocate_uninitialized(nrows: Dynamic, ncols: C) -> Self::Buffer {$/;"	P	implementation:DefaultAllocator
allocate_uninitialized	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs	/^    unsafe fn allocate_uninitialized(nrows: R, ncols: Dynamic) -> Self::Buffer {$/;"	P	implementation:DefaultAllocator
allocator	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs	/^pub mod allocator;$/;"	n
alpha	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/dirichlet.rs	/^    alpha: Vec<f64>,$/;"	m	struct:Dirichlet
alternation_literals	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^fn alternation_literals(expr: &Hir) -> Option<Vec<Vec<u8>>> {$/;"	f
amax	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^    pub fn amax(&self) -> N$/;"	P	implementation:Matrix
amin	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^    pub fn amin(&self) -> N$/;"	P	implementation:Matrix
and_hms	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    pub fn and_hms(&self, hour: u32, min: u32, sec: u32) -> DateTime<Tz> {$/;"	P	implementation:Date
and_hms	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    pub fn and_hms(&self, hour: u32, min: u32, sec: u32) -> NaiveDateTime {$/;"	P	implementation:NaiveDate
and_hms_micro	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    pub fn and_hms_micro(&self, hour: u32, min: u32, sec: u32, micro: u32) -> DateTime<Tz> {$/;"	P	implementation:Date
and_hms_micro	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    pub fn and_hms_micro(&self, hour: u32, min: u32, sec: u32, micro: u32) -> NaiveDateTime {$/;"	P	implementation:NaiveDate
and_hms_micro_opt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    pub fn and_hms_micro_opt(&self, hour: u32, min: u32, sec: u32,$/;"	P	implementation:Date
and_hms_micro_opt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    pub fn and_hms_micro_opt(&self, hour: u32, min: u32, sec: u32,$/;"	P	implementation:NaiveDate
and_hms_micro_opt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^    pub fn and_hms_micro_opt($/;"	P	implementation:LocalResult
and_hms_milli	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    pub fn and_hms_milli(&self, hour: u32, min: u32, sec: u32, milli: u32) -> DateTime<Tz> {$/;"	P	implementation:Date
and_hms_milli	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    pub fn and_hms_milli(&self, hour: u32, min: u32, sec: u32, milli: u32) -> NaiveDateTime {$/;"	P	implementation:NaiveDate
and_hms_milli_opt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    pub fn and_hms_milli_opt(&self, hour: u32, min: u32, sec: u32,$/;"	P	implementation:Date
and_hms_milli_opt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    pub fn and_hms_milli_opt(&self, hour: u32, min: u32, sec: u32,$/;"	P	implementation:NaiveDate
and_hms_milli_opt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^    pub fn and_hms_milli_opt($/;"	P	implementation:LocalResult
and_hms_nano	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    pub fn and_hms_nano(&self, hour: u32, min: u32, sec: u32, nano: u32) -> DateTime<Tz> {$/;"	P	implementation:Date
and_hms_nano	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    pub fn and_hms_nano(&self, hour: u32, min: u32, sec: u32, nano: u32) -> NaiveDateTime {$/;"	P	implementation:NaiveDate
and_hms_nano_opt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    pub fn and_hms_nano_opt(&self, hour: u32, min: u32, sec: u32,$/;"	P	implementation:Date
and_hms_nano_opt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    pub fn and_hms_nano_opt(&self, hour: u32, min: u32, sec: u32,$/;"	P	implementation:NaiveDate
and_hms_nano_opt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^    pub fn and_hms_nano_opt($/;"	P	implementation:LocalResult
and_hms_opt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    pub fn and_hms_opt(&self, hour: u32, min: u32, sec: u32) -> Option<DateTime<Tz>> {$/;"	P	implementation:Date
and_hms_opt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    pub fn and_hms_opt(&self, hour: u32, min: u32, sec: u32) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDate
and_hms_opt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^    pub fn and_hms_opt(self, hour: u32, min: u32, sec: u32) -> LocalResult<DateTime<Tz>> {$/;"	P	implementation:LocalResult
and_time	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    pub fn and_time(&self, time: NaiveTime) -> Option<DateTime<Tz>> {$/;"	P	implementation:Date
and_time	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    pub fn and_time(&self, time: NaiveTime) -> NaiveDateTime {$/;"	P	implementation:NaiveDate
and_time	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^    pub fn and_time(self, time: NaiveTime) -> LocalResult<DateTime<Tz>> {$/;"	P	implementation:LocalResult
angle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/vector.rs	/^    fn angle(&self, other: &Self) -> Self::RealField {$/;"	P	interface:InnerSpace
angle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn angle<R2: Dim, C2: Dim, SB>(&self, other: &Matrix<N, R2, C2, SB>) -> N::SimdRealField$/;"	P	implementation:Matrix
angle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^    fn angle(&self, other: &Self) -> <N as ComplexField>::RealField {$/;"	f
angle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn angle(&self) -> N {$/;"	f
angle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^    pub fn angle(&self) -> N {$/;"	P	implementation:Rotation2
angle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^    pub fn angle(&self) -> N {$/;"	f
angle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs	/^    pub fn angle(&self) -> N {$/;"	f
angle_to	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn angle_to(&self, other: &Self) -> N {$/;"	f
angle_to	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^    pub fn angle_to(&self, other: &Self) -> N {$/;"	P	implementation:Rotation2
angle_to	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^    pub fn angle_to(&self, other: &Self) -> N {$/;"	f
angle_to	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs	/^    pub fn angle_to(&self, other: &Self) -> N {$/;"	f
any	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs	/^pub fn any<I, F>(iterable: I, f: F) -> bool$/;"	f
any	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/utils.rs	/^    fn any(self) -> bool {$/;"	P	implementation:bool
any	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/utils.rs	/^    fn any(self) -> bool;$/;"	P	interface:BoolAsSIMD
append	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^    fn append(self, last: T) -> Self::Longer {$/;"	f
append	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^    fn append(self, last: T) -> Self::Longer;$/;"	P	interface:Lengthen
append_nonuniform_scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs	/^    pub fn append_nonuniform_scaling<SB>($/;"	P	implementation:SquareMatrix
append_nonuniform_scaling_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs	/^    pub fn append_nonuniform_scaling_mut<SB>(&mut self, scaling: &Vector<N, DimNameDiff<D, U1>, /;"	P	implementation:SquareMatrix
append_permutation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs	/^    pub fn append_permutation(&mut self, i: usize, i2: usize) {$/;"	f
append_rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/id.rs	/^    fn append_rotation(&self, _: &Self::Rotation) -> Self {$/;"	P	implementation:Id
append_rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn append_rotation(&self, _: &Self::Rotation) -> Self {$/;"	f
append_rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn append_rotation(&self, r: &Self::Rotation) -> Self;$/;"	P	interface:AffineTransformation
append_rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alga.rs	/^    fn append_rotation(&self, r: &Self::Rotation) -> Self {$/;"	f
append_rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    fn append_rotation(&self, r: &Self::Rotation) -> Self {$/;"	P	implementation:UnitQuaternion
append_rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alga.rs	/^    fn append_rotation(&self, r: &Self::Rotation) -> Self {$/;"	f
append_rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alga.rs	/^    fn append_rotation(&self, r: &Self::Rotation) -> Self {$/;"	f
append_rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alga.rs	/^    fn append_rotation(&self, _: &Self::Rotation) -> Self {$/;"	f
append_rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_alga.rs	/^    fn append_rotation(&self, r: &Self::Rotation) -> Self {$/;"	f
append_rotation_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^    pub fn append_rotation_mut(&mut self, r: &R) {$/;"	f
append_rotation_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^    pub fn append_rotation_mut(&mut self, r: &R) {$/;"	f
append_rotation_wrt_center_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^    pub fn append_rotation_wrt_center_mut(&mut self, r: &R) {$/;"	f
append_rotation_wrt_center_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^    pub fn append_rotation_wrt_center_mut(&mut self, r: &R) {$/;"	f
append_rotation_wrt_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn append_rotation_wrt_point(&self, r: &Self::Rotation, p: &E) -> Option<Self> {$/;"	P	interface:AffineTransformation
append_rotation_wrt_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alga.rs	/^    fn append_rotation_wrt_point(&self, r: &Self::Rotation, p: &Point<N, D>) -> Option<Self> {$/;"	f
append_rotation_wrt_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alga.rs	/^    fn append_rotation_wrt_point(&self, r: &Self::Rotation, p: &Point<N, D>) -> Option<Self> {$/;"	f
append_rotation_wrt_point_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^    pub fn append_rotation_wrt_point_mut(&mut self, r: &R, p: &Point<N, D>) {$/;"	f
append_rotation_wrt_point_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^    pub fn append_rotation_wrt_point_mut(&mut self, r: &R, p: &Point<N, D>) {$/;"	f
append_scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/id.rs	/^    fn append_scaling(&self, _: &Self::NonUniformScaling) -> Self {$/;"	P	implementation:Id
append_scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn append_scaling(&self, s: &Self::NonUniformScaling) -> Self {$/;"	f
append_scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn append_scaling(&self, s: &Self::NonUniformScaling) -> Self;$/;"	P	interface:AffineTransformation
append_scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs	/^    pub fn append_scaling(&self, scaling: N) -> MatrixN<N, D>$/;"	P	implementation:SquareMatrix
append_scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alga.rs	/^    fn append_scaling(&self, _: &Self::NonUniformScaling) -> Self {$/;"	f
append_scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    fn append_scaling(&self, _: &Self::NonUniformScaling) -> Self {$/;"	P	implementation:UnitQuaternion
append_scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alga.rs	/^    fn append_scaling(&self, _: &Self::NonUniformScaling) -> Self {$/;"	f
append_scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^    pub fn append_scaling(&self, scaling: N) -> Self {$/;"	f
append_scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alga.rs	/^    fn append_scaling(&self, s: &Self::NonUniformScaling) -> Self {$/;"	f
append_scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alga.rs	/^    fn append_scaling(&self, _: &Self::NonUniformScaling) -> Self {$/;"	f
append_scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_alga.rs	/^    fn append_scaling(&self, _: &Self::NonUniformScaling) -> Self {$/;"	f
append_scaling_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs	/^    pub fn append_scaling_mut(&mut self, scaling: N)$/;"	P	implementation:SquareMatrix
append_scaling_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^    pub fn append_scaling_mut(&mut self, scaling: N) {$/;"	f
append_translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/id.rs	/^    fn append_translation(&self, _: &Self::Translation) -> Self {$/;"	P	implementation:Id
append_translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn append_translation(&self, _: &Self::Translation) -> Self {$/;"	f
append_translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn append_translation(&self, t: &Self::Translation) -> Self;$/;"	P	interface:AffineTransformation
append_translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs	/^    pub fn append_translation<SB>(&self, shift: &Vector<N, DimNameDiff<D, U1>, SB>) -> MatrixN<N/;"	P	implementation:SquareMatrix
append_translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alga.rs	/^    fn append_translation(&self, t: &Self::Translation) -> Self {$/;"	f
append_translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    fn append_translation(&self, _: &Self::Translation) -> Self {$/;"	P	implementation:UnitQuaternion
append_translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alga.rs	/^    fn append_translation(&self, _: &Self::Translation) -> Self {$/;"	f
append_translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alga.rs	/^    fn append_translation(&self, t: &Self::Translation) -> Self {$/;"	f
append_translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alga.rs	/^    fn append_translation(&self, t: &Self::Translation) -> Self {$/;"	f
append_translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_alga.rs	/^    fn append_translation(&self, _: &Self::Translation) -> Self {$/;"	f
append_translation_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs	/^    pub fn append_translation_mut<SB>(&mut self, shift: &Vector<N, DimNameDiff<D, U1>, SB>)$/;"	P	implementation:SquareMatrix
append_translation_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^    pub fn append_translation_mut(&mut self, t: &Translation<N, D>) {$/;"	f
append_translation_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^    pub fn append_translation_mut(&mut self, t: &Translation<N, D>) {$/;"	f
apply	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn apply<F: FnMut(N) -> N>(&mut self, mut f: F) {$/;"	P	implementation:Matrix
apply_into	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn apply_into<F: FnMut(N) -> N>(mut self, f: F) -> Self {$/;"	P	implementation:Matrix
apply_metric_distance	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^    pub fn apply_metric_distance<R2, C2, S2>($/;"	P	implementation:Matrix
apply_norm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^    pub fn apply_norm(&self, norm: &impl Norm<N>) -> N::SimdRealField {$/;"	P	implementation:Matrix
approximate_size	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn approximate_size(&self) -> usize {$/;"	P	implementation:Fsm
approximate_size	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    fn approximate_size(&self) -> usize {$/;"	P	implementation:BoyerMooreSearch
approximate_size	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    fn approximate_size(&self) -> usize {$/;"	P	implementation:FreqyPacked
approximate_size	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    fn approximate_size(&self) -> usize {$/;"	P	implementation:SingleByteSet
approximate_size	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    pub fn approximate_size(&self) -> usize {$/;"	P	implementation:LiteralSearcher
approximate_size	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/mod.rs	/^        pub fn approximate_size(&self) -> usize {$/;"	P	implementation:imp::LiteralSearcher
approximate_size	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    pub fn approximate_size(&self) -> usize {$/;"	P	implementation:Program
arbitrary	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^    fn arbitrary<G: Gen>(g: &mut G) -> Self {$/;"	f
arbitrary	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/debug/random_orthogonal.rs	/^    fn arbitrary<G: Gen>(g: &mut G) -> Self {$/;"	f
arbitrary	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/debug/random_sdp.rs	/^    fn arbitrary<G: Gen>(g: &mut G) -> Self {$/;"	f
arbitrary	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs	/^    fn arbitrary<G: Gen>(rng: &mut G) -> Self {$/;"	f
arbitrary	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^    fn arbitrary<G: Gen>(g: &mut G) -> Self {$/;"	f
arbitrary	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^    fn arbitrary<G: Gen>(g: &mut G) -> Self {$/;"	P	implementation:Perspective3
arbitrary	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs	/^    fn arbitrary<G: Gen>(g: &mut G) -> Self {$/;"	f
arbitrary	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^    fn arbitrary<G: Gen>(g: &mut G) -> Self {$/;"	f
arbitrary	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^    fn arbitrary<G: Gen>(g: &mut G) -> Self {$/;"	f
arbitrary	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs	/^    fn arbitrary<G: Gen>(rng: &mut G) -> Self {$/;"	f
arbitrary	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_construction.rs	/^    fn arbitrary<G: Gen>(rng: &mut G) -> Self {$/;"	f
arbitrary	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs	/^    fn arbitrary<G: Gen>(g: &mut G) -> Self {$/;"	f
arg	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub fn arg(&self) -> T {$/;"	P	implementation:Complex
argmax	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^    pub fn argmax(&self) -> (usize, N) {$/;"	P	implementation:Vector
argmin	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^    pub fn argmin(&self) -> (usize, N) {$/;"	P	implementation:Vector
args	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    args: fmt::Arguments<'a>,$/;"	m	struct:Record
args	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn args(&mut self, args: fmt::Arguments<'a>) -> &mut RecordBuilder<'a> {$/;"	P	implementation:RecordBuilder
args	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn args(&self) -> &fmt::Arguments<'a> {$/;"	P	implementation:Record
argument	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn argument(self) -> Self::RealField {$/;"	P	implementation:Complex
argument	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn argument(self) -> Self::RealField;$/;"	P	interface:ComplexField
arr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/arr.rs	/^macro_rules! arr {$/;"	M
arr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^pub mod arr;$/;"	n
arr_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/arr.rs	/^macro_rules! arr_impl {$/;"	M
array	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/iter.rs	/^    array: ManuallyDrop<GenericArray<T, N>>,$/;"	m	struct:GenericArrayIter
array	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    array: ManuallyDrop<GenericArray<T, N>>,$/;"	m	struct:ArrayConsumer
array	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    array: MaybeUninit<GenericArray<T, N>>,$/;"	m	struct:ArrayBuilder
array	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/lib.rs	/^pub mod array;$/;"	n
array_axc	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^fn array_axc<N>(y: &mut [N], a: N, x: &[N], c: N, stride1: usize, stride2: usize, len: usize)$/;"	f
array_axcpy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^fn array_axcpy<N>($/;"	f
array_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/other.rs	/^macro_rules! array_impl {$/;"	M
array_storage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs	/^mod array_storage;$/;"	n
as_	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/cast.rs	/^    fn as_(self) -> U {$/;"	f
as_	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^    fn as_(self) -> T;$/;"	P	interface:AsPrimitive
as_byte	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn as_byte(&self) -> Option<u8> {$/;"	P	implementation:Byte
as_byte_slice_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^    fn as_byte_slice_mut(&mut self) -> &mut [u8] {$/;"	P	implementation:u8
as_byte_slice_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^    fn as_byte_slice_mut(&mut self) -> &mut [u8];$/;"	P	interface:AsByteSliceMut
as_bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    fn as_bytes(&self) -> &[u8] {$/;"	P	implementation:ByteInput
as_bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    fn as_bytes(&self) -> &[u8] {$/;"	P	implementation:CharInput
as_bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    fn as_bytes(&self) -> &[u8] {$/;"	P	implementation:T
as_bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    fn as_bytes(&self) -> &[u8];$/;"	P	interface:Input
as_bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    pub fn as_bytes(&self) -> &'t [u8] {$/;"	P	implementation:Match
as_matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^    pub fn as_matrix(&self) -> &Matrix4<N> {$/;"	P	implementation:Orthographic3
as_matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^    pub fn as_matrix(&self) -> &Matrix4<N> {$/;"	P	implementation:Perspective3
as_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/impls.rs	/^    fn as_mut(&mut self) -> &mut [T] {$/;"	f
as_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs	/^    pub fn as_mut(&mut self) -> EitherOrBoth<&mut A, &mut B> {$/;"	P	implementation:EitherOrBoth
as_mut_ptr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn as_mut_ptr(&mut self) -> *mut N {$/;"	P	implementation:Matrix
as_mut_slice	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/iter.rs	/^    pub fn as_mut_slice(&mut self) -> &mut [T] {$/;"	f
as_mut_slice	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    pub fn as_mut_slice(&mut self) -> &mut [T] {$/;"	f
as_mut_slice	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^    fn as_mut_slice(&mut self) -> &mut [N] {$/;"	f
as_mut_slice	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn as_mut_slice(&mut self) -> &mut [N] {$/;"	P	implementation:Matrix
as_mut_slice	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^    fn as_mut_slice(&mut self) -> &mut [N] {$/;"	P	implementation:SliceStorageMut
as_mut_slice	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs	/^    fn as_mut_slice(&mut self) -> &mut [N];$/;"	P	interface:StorageMut
as_mut_slice	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^    fn as_mut_slice(&mut self) -> &mut [N] {$/;"	f
as_mut_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs	/^    pub fn as_mut_unchecked(&mut self) -> &mut T {$/;"	P	implementation:Unit
as_projective	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^    pub fn as_projective(&self) -> &Projective3<N> {$/;"	P	implementation:Orthographic3
as_projective	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^    pub fn as_projective(&self) -> &Projective3<N> {$/;"	P	implementation:Perspective3
as_ptr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn as_ptr(&self) -> *const N {$/;"	P	implementation:Matrix
as_ref	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/impls.rs	/^    fn as_ref(&self) -> &[T] {$/;"	f
as_ref	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs	/^    pub fn as_ref(&self) -> EitherOrBoth<&A, &B> {$/;"	P	implementation:EitherOrBoth
as_ref	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^    fn as_ref(&self) -> &str {$/;"	P	implementation:Key
as_ref	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs	/^    fn as_ref(&self) -> &T {$/;"	P	implementation:Unit
as_slice	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/iter.rs	/^    pub fn as_slice(&self) -> &[T] {$/;"	f
as_slice	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    pub fn as_slice(&self) -> &[T] {$/;"	f
as_slice	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^    fn as_slice(&self) -> &[N] {$/;"	f
as_slice	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn as_slice(&self) -> &[N] {$/;"	P	implementation:Matrix
as_slice	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs	/^    fn as_slice(&self) -> &[N];$/;"	P	interface:Storage
as_slice	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^    fn as_slice(&self) -> &[N] {$/;"	f
as_slots	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_trait.rs	/^    pub(crate) fn as_slots(&mut self) -> &mut [Slot] {$/;"	P	implementation:Locations
as_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^    pub fn as_str(&self) -> &str {$/;"	P	implementation:Key
as_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    pub fn as_str(&self) -> &str {$/;"	P	implementation:Regex
as_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    pub fn as_str(&self) -> &'t str {$/;"	P	implementation:Match
as_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    pub fn as_str(&self) -> &str {$/;"	P	implementation:Regex
as_usize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^    fn as_usize(self) -> usize {$/;"	P	implementation:u32
as_usize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^    fn as_usize(self) -> usize {$/;"	P	implementation:usize
as_usize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^    fn as_usize(self) -> usize;$/;"	P	interface:UInt
as_vec	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^    pub fn as_vec(&self) -> &Vec<N> {$/;"	P	implementation:VecStorage
as_vec_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^    pub unsafe fn as_vec_mut(&mut self) -> &mut Vec<N> {$/;"	P	implementation:VecStorage
as_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn as_vector(&self) -> &Vector4<N> {$/;"	f
as_vector_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn as_vector_mut(&mut self) -> &mut Vector4<N> {$/;"	f
asin	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn asin(self) -> Self {$/;"	P	implementation:Complex
asin	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn asin(self) -> Self;$/;"	P	interface:ComplexField
asin	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn asin(&self) -> Self {$/;"	f
asin	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub fn asin(&self) -> Self {$/;"	P	implementation:Complex
asin	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn asin(self) -> Self {$/;"	P	implementation:f32
asin	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn asin(self) -> Self {$/;"	P	implementation:f64
asin	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn asin(self) -> Self;$/;"	P	interface:Float
asin	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn asin(self) -> Self;$/;"	P	interface:Real
asinh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn asinh(self) -> Self {$/;"	P	implementation:Complex
asinh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn asinh(self) -> Self;$/;"	P	interface:ComplexField
asinh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn asinh(&self) -> Self {$/;"	f
asinh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub fn asinh(&self) -> Self {$/;"	P	implementation:Complex
asinh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn asinh(self) -> Self {$/;"	P	implementation:f32
asinh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn asinh(self) -> Self {$/;"	P	implementation:f64
asinh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn asinh(self) -> Self;$/;"	P	interface:Float
asinh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn asinh(self) -> Self;$/;"	P	interface:Real
aspect	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^    pub fn aspect(&self) -> N {$/;"	P	implementation:Perspective3
assemble_q	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/householder.rs	/^pub fn assemble_q<N: ComplexField, D: Dim>(m: &MatrixN<N, D>, signs: &[N]) -> MatrixN<N, D>$/;"	f
assert_almost_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/unit_circle.rs	/^    macro_rules! assert_almost_eq {$/;"	M	module:tests
assert_almost_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/unit_sphere.rs	/^    macro_rules! assert_almost_eq {$/;"	M	module:tests
assert_equal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^pub fn assert_equal<I, J>(a: I, b: J)$/;"	f
assert_slice_index	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^    fn assert_slice_index($/;"	P	implementation:Matrix
assert_type	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/lib.rs	/^macro_rules! assert_type {$/;"	M
assert_type_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/lib.rs	/^macro_rules! assert_type_eq {$/;"	M
at	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    at: usize,$/;"	m	struct:Fsm
at	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    fn at(&self, i: usize) -> InputAt {$/;"	P	implementation:ByteInput
at	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    fn at(&self, i: usize) -> InputAt {$/;"	P	implementation:CharInput
at	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    fn at(&self, i: usize) -> InputAt {$/;"	P	implementation:T
at	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    fn at(&self, i: usize) -> InputAt;$/;"	P	interface:Input
atan	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn atan(self) -> Self {$/;"	P	implementation:Complex
atan	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn atan(self) -> Self;$/;"	P	interface:ComplexField
atan	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn atan(&self) -> Self$/;"	f
atan	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub fn atan(&self) -> Self {$/;"	P	implementation:Complex
atan	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn atan(self) -> Self {$/;"	P	implementation:f32
atan	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn atan(self) -> Self {$/;"	P	implementation:f64
atan	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn atan(self) -> Self;$/;"	P	interface:Float
atan	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn atan(self) -> Self;$/;"	P	interface:Real
atan2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/real.rs	/^    fn atan2(self, other: Self) -> Self;$/;"	P	interface:RealField
atan2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn atan2(self, other: Self) -> Self {$/;"	P	implementation:f32
atan2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn atan2(self, other: Self) -> Self {$/;"	P	implementation:f64
atan2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn atan2(self, other: Self) -> Self;$/;"	P	interface:Float
atan2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn atan2(self, other: Self) -> Self;$/;"	P	interface:Real
atanh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn atanh(self) -> Self {$/;"	P	implementation:Complex
atanh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn atanh(self) -> Self;$/;"	P	interface:ComplexField
atanh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn atanh(&self) -> Self {$/;"	f
atanh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub fn atanh(&self) -> Self {$/;"	P	implementation:Complex
atanh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn atanh(self) -> Self {$/;"	P	implementation:f32
atanh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn atanh(self) -> Self {$/;"	P	implementation:f64
atanh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn atanh(self) -> Self;$/;"	P	interface:Float
atanh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn atanh(self) -> Self;$/;"	P	interface:Real
atty	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^mod atty;$/;"	n
automatic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    pub fn automatic(mut self) -> Self {$/;"	P	implementation:ExecBuilder
axcpy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^    pub fn axcpy<D2: Dim, SB>(&mut self, a: N, x: &Vector<N, D2, SB>, c: N, b: N)$/;"	f
axis	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn axis(&self) -> Option<Unit<Vector3<N>>>$/;"	f
axis	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/reflection.rs	/^    axis: Vector<N, D, S>,$/;"	m	struct:Reflection
axis	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/reflection.rs	/^    pub fn axis(&self) -> &Vector<N, D, S> {$/;"	P	implementation:Reflection
axis	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^    pub fn axis(&self) -> Option<Unit<Vector3<N>>>$/;"	f
axis_angle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn axis_angle(&self) -> Option<(Unit<Vector3<N>>, N)>$/;"	f
axis_angle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^    pub fn axis_angle(&self) -> Option<(Unit<Vector3<N>>, N)>$/;"	f
axis_angle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs	/^    pub fn axis_angle(&self) -> Option<(Unit<Vector1<N>>, N)>$/;"	f
axis_shift	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs	/^    fn axis_shift(&self) -> (usize, usize) {$/;"	f
axpy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^    pub fn axpy<D2: Dim, SB>(&mut self, a: N, x: &Vector<N, D2, SB>, b: N)$/;"	f
axpy_cs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_ops.rs	/^    pub fn axpy_cs<D2: Dim, S2>(&mut self, alpha: N, x: &CsVector<N, D2, S2>, beta: N)$/;"	P	implementation:Vector
b	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    b: Fuse<J>,$/;"	m	struct:Interleave
b	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    b: J,$/;"	m	struct:Product
b	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    b: Peekable<J>,$/;"	m	struct:MergeBy
b	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_eq_impl.rs	/^    b: J,$/;"	m	struct:ZipEq
b	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_longest.rs	/^    b: Fuse<U>,$/;"	m	struct:ZipLongest
b	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^    pub fn b() -> Self$/;"	f
b_axis	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^    pub fn b_axis() -> Unit<Self>$/;"	f
b_orig	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    b_orig: J,$/;"	m	struct:Product
back	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn back(&self) -> usize {$/;"	P	implementation:LRUList
backlog	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tee.rs	/^    backlog: VecDeque<A>,$/;"	m	struct:TeeBuffer
backtrack	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/backtrack.rs	/^    fn backtrack(&mut self, start: InputAt) -> bool {$/;"	P	implementation:Bounded
backtrack	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    pub backtrack: backtrack::Cache,$/;"	m	struct:ProgramCacheInner
backtrack	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/lib.rs	/^mod backtrack;$/;"	n
balance_parlett_reinsch	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/balancing.rs	/^pub fn balance_parlett_reinsch<N: RealField, D: Dim>(m: &mut MatrixN<N, D>) -> VectorN<N, D>$/;"	f
balancing	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/mod.rs	/^pub mod balancing;$/;"	n
base	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs	/^pub mod base;$/;"	n
base	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    base: usize,$/;"	m	struct:InstPtrs
basic_cache	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn basic_cache() {$/;"	f	module:tests
basics	/Users/williamcashman/Honours/Program/n_poly/src/algebras/finite_field.rs	/^    fn basics() {$/;"	f	module:tests
basics	/Users/williamcashman/Honours/Program/n_poly/src/lib.rs	/^    fn basics() {$/;"	f	module:tests
batching	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub fn batching<I, F>(iter: I, f: F) -> Batching<I, F> {$/;"	f
batching	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn batching<B, F>(self, f: F) -> Batching<Self, F>$/;"	P	interface:Itertools
bb_alg_test	/Users/williamcashman/Honours/Program/n_poly/src/ideals/groebner_basis.rs	/^    fn bb_alg_test() {$/;"	f	module:tests
bb_algorithm	/Users/williamcashman/Honours/Program/n_poly/src/ideals/groebner_basis.rs	/^    pub fn bb_algorithm(&self) -> Self {$/;"	P	implementation:Ideal
bb_algorithm_plus	/Users/williamcashman/Honours/Program/n_poly/src/ideals/groebner_basis.rs	/^    pub fn bb_algorithm_plus(&self) -> Self {$/;"	P	implementation:Ideal
begin	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^    fn begin(&self, _: D) -> usize {$/;"	P	implementation:Range
begin	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^    fn begin(&self, _: D) -> usize {$/;"	P	implementation:RangeFrom
begin	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^    fn begin(&self, _: D) -> usize {$/;"	P	implementation:RangeFull
begin	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^    fn begin(&self, _: D) -> usize {$/;"	P	implementation:RangeTo
begin	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^    fn begin(&self, _: D) -> usize {$/;"	P	implementation:usize
begin	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^    fn begin(&self, shape: D) -> usize;$/;"	P	interface:SliceRange
bench_datetime_from_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn bench_datetime_from_str(bh: &mut test::Bencher) {$/;"	f	module:tests
bench_datetime_parse_from_rfc2822	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn bench_datetime_parse_from_rfc2822(bh: &mut test::Bencher) {$/;"	f	module:tests
bench_datetime_parse_from_rfc3339	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn bench_datetime_parse_from_rfc3339(bh: &mut test::Bencher) {$/;"	f	module:tests
bench_datetime_to_rfc2822	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn bench_datetime_to_rfc2822(bh: &mut test::Bencher) {$/;"	f	module:tests
bench_datetime_to_rfc3339	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn bench_datetime_to_rfc3339(bh: &mut test::Bencher) {$/;"	f	module:tests
bench_dense_main	/Users/williamcashman/Honours/Program/n_poly/src/fft-multi-base.rs	/^    fn bench_dense_main() {$/;"	f	module:tests
bench_dense_main	/Users/williamcashman/Honours/Program/n_poly/src/fft.rs	/^    fn bench_dense_main() {$/;"	f	module:tests
bench_year_flags_from_year	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    fn bench_year_flags_from_year(bh: &mut test::Bencher) {$/;"	f	module:tests
bernoulli	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^mod bernoulli;$/;"	n
bias	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/reflection.rs	/^    bias: N,$/;"	m	struct:Reflection
bidiagonal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/mod.rs	/^mod bidiagonal;$/;"	n
bidiagonalize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs	/^    pub fn bidiagonalize(self) -> Bidiagonal<N, R, C> {$/;"	f
bigint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-0.2.1/src/lib.rs	/^pub mod bigint {$/;"	n
bigs_head	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^            bigs_head: u32,$/;"	m	struct:WeightedIndex::new::Aliases
bigs_is_empty	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^            fn bigs_is_empty(&self) -> bool {$/;"	P	implementation:WeightedIndex::new::Aliases
binomial	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^#[cfg(feature = "std")] mod binomial;$/;"	n
bit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/lib.rs	/^pub mod bit;$/;"	n
bit_operations	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^    fn bit_operations() {$/;"	f	module:tests
bitand	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^    fn bitand(self, _: B0) -> Self::Output {$/;"	P	implementation:B1
bitand	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^    fn bitand(self, _: B1) -> Self::Output {$/;"	P	implementation:B1
bitand	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^    fn bitand(self, _: Rhs) -> Self::Output {$/;"	P	implementation:B0
bitand	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn bitand(self, _: Ur) -> Self::Output {$/;"	P	implementation:UTerm
bitand	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn bitand(self, rhs: Ur) -> Self::Output {$/;"	f
bitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^    fn bitor(self, _: B0) -> Self::Output {$/;"	P	implementation:B0
bitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^    fn bitor(self, _: B1) -> Self::Output {$/;"	P	implementation:B0
bitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^    fn bitor(self, _: Rhs) -> Self::Output {$/;"	P	implementation:B1
bitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn bitor(self, _: UTerm) -> Self::Output {$/;"	P	implementation:UInt
bitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn bitor(self, rhs: U) -> Self::Output {$/;"	P	implementation:UTerm
bitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn bitor(self, rhs: UInt<Ur, B0>) -> Self::Output {$/;"	f
bitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn bitor(self, rhs: UInt<Ur, B1>) -> Self::Output {$/;"	f
bitxor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^    fn bitxor(self, _: B0) -> Self::Output {$/;"	P	implementation:B0
bitxor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^    fn bitxor(self, _: B0) -> Self::Output {$/;"	P	implementation:B1
bitxor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^    fn bitxor(self, _: B1) -> Self::Output {$/;"	P	implementation:B0
bitxor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^    fn bitxor(self, _: B1) -> Self::Output {$/;"	P	implementation:B1
bitxor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn bitxor(self, rhs: Ur) -> Self::Output {$/;"	P	implementation:UTerm
bitxor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn bitxor(self, rhs: Ur) -> Self::Output {$/;"	f
black_box	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    pub fn black_box<T>(val: T) -> T {$/;"	f	module:test
blas	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs	/^mod blas;$/;"	n
bm_backstop_boundary	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    fn bm_backstop_boundary() {$/;"	f	module:tests
bm_backstop_underflow_bug	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    fn bm_backstop_underflow_bug() {$/;"	f	module:tests
bm_find_no_subs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    fn bm_find_no_subs() {$/;"	f	module:tests
bm_find_subs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    fn bm_find_subs() {$/;"	f	module:tests
bm_memchr_fallback_indexing_bug	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    fn bm_memchr_fallback_indexing_bug() {$/;"	f	module:tests
bm_naive_off_by_one_bug	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    fn bm_naive_off_by_one_bug() {$/;"	f	module:tests
bm_skip_reset_bug	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    fn bm_skip_reset_bug() {$/;"	f	module:tests
bm_win_gnu_indexing_bug	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    fn bm_win_gnu_indexing_bug() {$/;"	f	module:tests
bool	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^impl ToValue for bool {$/;"	c
bool	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        fn bool(&mut self, v: bool) -> Result<(), Error> {$/;"	P	implementation:fmt_support::FmtVisitor
bool	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        fn bool(&mut self, v: bool) -> Result<(), Error> {$/;"	P	implementation:sval_support::SvalVisitor
bool	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    fn bool(&mut self, v: bool) -> Result<(), Error>;$/;"	P	interface:Visitor
bool	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/test.rs	/^            fn bool(&mut self, v: bool) -> Result<(), Error> {$/;"	P	implementation:Value::to_token::TestVisitor
bool	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/utils.rs	/^impl BoolAsSIMD for bool {$/;"	c
borrow	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/impls.rs	/^    fn borrow(&self) -> &[T] {$/;"	f
borrow	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^    fn borrow(&self) -> &str {$/;"	P	implementation:Key
borrow	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^    fn borrow(&self) -> &Borrowed {$/;"	f
borrow	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^    fn borrow(&self) -> &Borrowed;$/;"	P	interface:SampleBorrow
borrow_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/impls.rs	/^    fn borrow_mut(&mut self) -> &mut [T] {$/;"	f
both	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs	/^    pub fn both(self) -> Option<(A, B)> {$/;"	P	implementation:EitherOrBoth
bottom	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^    pub fn bottom(&self) -> N {$/;"	P	implementation:Orthographic3
bottom_group	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    bottom_group: usize,$/;"	m	struct:GroupInner
bounded_backtracking	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    pub fn bounded_backtracking(mut self) -> Self {$/;"	P	implementation:ExecBuilder
bounded_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/bounds.rs	/^macro_rules! bounded_impl {$/;"	M
bounded_tuple	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/bounds.rs	/^macro_rules! bounded_tuple {$/;"	M
bounds	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^pub mod bounds;$/;"	n
boxed	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/error.rs	/^        pub fn boxed<E>(err: E) -> Self$/;"	P	implementation:std_support::Error
btree_map	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^        fn btree_map() {$/;"	f	module:std_support::tests
buf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    buf: &'a mut Formatter,$/;"	m	struct:DefaultFormat
buf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    buf: Rc<RefCell<Buffer>>,$/;"	m	struct:Formatter
buf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    buf: Rc<RefCell<Buffer>>,$/;"	m	struct:Style
buf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs	/^    buf: VecDeque<I::Item>,$/;"	m	struct:MultiPeek
buf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs	/^    buf: T::Buffer,$/;"	m	struct:TupleBuffer
buf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs	/^    buf: T::Buffer,$/;"	m	struct:Tuples
buffer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^    pub(in crate::fmt) fn buffer(&self) -> Buffer {$/;"	P	implementation:Writer
buffer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    pub(in crate::fmt::writer) fn buffer(&self) -> Buffer {$/;"	P	implementation:BufferWriter
buffer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/shim_impl.rs	/^    pub(in crate::fmt::writer) fn buffer(&self) -> Buffer {$/;"	P	implementation:BufferWriter
buffer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    buffer: Vec<vec::IntoIter<I::Item>>,$/;"	m	struct:GroupInner
buffer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lazy_buffer.rs	/^    buffer: Vec<I::Item>,$/;"	m	struct:LazyBuffer
build	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^    pub fn build(&mut self) -> Filter {$/;"	P	implementation:Builder
build	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    pub fn build(&mut self) -> Box<Fn(&mut Formatter, &Record) -> io::Result<()> + Sync + Send> /;"	P	implementation:Builder
build	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^    pub(crate) fn build(&mut self) -> Writer {$/;"	P	implementation:Builder
build	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    pub fn build(&mut self) -> Logger {$/;"	P	implementation:Builder
build	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn build(&self) -> Metadata<'a> {$/;"	P	implementation:MetadataBuilder
build	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn build(&self) -> Record<'a> {$/;"	P	implementation:RecordBuilder
build	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    pub fn build(self) -> Result<Exec, Error> {$/;"	P	implementation:ExecBuilder
build_aho_corasick	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    fn build_aho_corasick(&self, parsed: &Parsed) -> Option<AhoCorasick<u32>> {$/;"	P	implementation:ExecBuilder
builder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^pub fn builder() -> Builder {$/;"	f
builder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn builder() -> MetadataBuilder<'a> {$/;"	P	implementation:Metadata
builder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn builder() -> RecordBuilder<'a> {$/;"	P	implementation:Record
built	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^    built: bool,$/;"	m	struct:Builder
built	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    built: bool,$/;"	m	struct:Builder
built	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^    built: bool,$/;"	m	struct:Builder
built	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    built: bool,$/;"	m	struct:Builder
by_ref	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    fn by_ref<'r>(&'r mut self) -> ReplacerRef<'r, Self> {$/;"	P	interface:Replacer
by_ref	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    fn by_ref<'r>(&'r mut self) -> ReplacerRef<'r, Self> {$/;"	P	interface:Replacer
byte	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn byte(b: u8) -> Self {$/;"	P	implementation:Byte
byte	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    byte: Option<u8>,$/;"	m	struct:InputAt
byte	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    pub fn byte(&self) -> Option<u8> {$/;"	P	implementation:InputAt
byte_class	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn byte_class(&self, b: Byte) -> usize {$/;"	P	implementation:Fsm
byte_classes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    byte_classes: ByteClassSet,$/;"	m	struct:Compiler
byte_classes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn byte_classes(&self) -> Vec<u8> {$/;"	P	implementation:ByteClassSet
byte_classes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn byte_classes() {$/;"	f	module:tests
byte_classes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    pub byte_classes: Vec<u8>,$/;"	m	struct:Program
bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    pub(in crate::fmt) fn bytes(&self) -> &[u8] {$/;"	P	implementation:Buffer
bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/shim_impl.rs	/^    pub(in crate::fmt) fn bytes(&self) -> &[u8] {$/;"	P	implementation:Buffer
bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    pub fn bytes(mut self, yes: bool) -> Self {$/;"	P	implementation:Compiler
bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    bytes: bool,$/;"	m	struct:ExecBuilder
bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    bytes: bool,$/;"	m	struct:Parsed
bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    pub fn bytes(mut self, yes: bool) -> Self {$/;"	P	implementation:ExecBuilder
bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/lib.rs	/^pub mod bytes {$/;"	n
bytes_until_reseed	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/reseeding.rs	/^    bytes_until_reseed: i64,$/;"	m	struct:ReseedingCore
c	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs	/^    c: N::RealField,$/;"	m	struct:GivensRotation
c	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs	/^    pub fn c(&self) -> N::RealField {$/;"	P	implementation:GivensRotation
c	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    c: f64,$/;"	m	struct:GammaLargeShape
c	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    c: &'a mut Compiler,$/;"	m	struct:CompileClass
c	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn c(&mut self, expr: &Hir) -> Result {$/;"	P	implementation:Compiler
c	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/expand.rs	/^    macro_rules! c {$/;"	M	module:tests
c	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    c: Char,$/;"	m	struct:InputAt
c	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    pub c: char,$/;"	m	struct:InstChar
c_alternate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn c_alternate(&mut self, exprs: &[Hir]) -> Result {$/;"	P	implementation:Compiler
c_byte	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn c_byte(&mut self, b: u8) -> Result {$/;"	P	implementation:Compiler
c_capture	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn c_capture(&mut self, first_slot: usize, expr: &Hir) -> Result {$/;"	P	implementation:Compiler
c_char	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn c_char(&mut self, c: char) -> Result {$/;"	P	implementation:Compiler
c_class	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn c_class(&mut self, ranges: &[hir::ClassUnicodeRange]) -> Result {$/;"	P	implementation:Compiler
c_class_bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn c_class_bytes(&mut self, ranges: &[hir::ClassBytesRange]) -> Result {$/;"	P	implementation:Compiler
c_concat	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn c_concat<'a, I>(&mut self, exprs: I) -> Result$/;"	P	implementation:Compiler
c_dotstar	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn c_dotstar(&mut self) -> Result {$/;"	P	implementation:Compiler
c_empty_look	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn c_empty_look(&mut self, look: EmptyLook) -> Result {$/;"	P	implementation:Compiler
c_repeat	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn c_repeat(&mut self, rep: &hir::Repetition) -> Result {$/;"	P	implementation:Compiler
c_repeat_one_or_more	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn c_repeat_one_or_more(&mut self, expr: &Hir, greedy: bool) -> Result {$/;"	P	implementation:Compiler
c_repeat_range	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn c_repeat_range($/;"	P	implementation:Compiler
c_repeat_range_min_or_more	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn c_repeat_range_min_or_more($/;"	P	implementation:Compiler
c_repeat_zero_or_more	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn c_repeat_zero_or_more(&mut self, expr: &Hir, greedy: bool) -> Result {$/;"	P	implementation:Compiler
c_repeat_zero_or_one	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn c_repeat_zero_or_one(&mut self, expr: &Hir, greedy: bool) -> Result {$/;"	P	implementation:Compiler
c_utf8_seq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn c_utf8_seq(&mut self, seq: &Utf8Sequence) -> Result {$/;"	P	implementation:CompileClass
c_utf8_seq_	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn c_utf8_seq_<'r, I>(&mut self, seq: I) -> Result$/;"	P	implementation:CompileClass
cache	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/cache.rs	/^        cache: &'a Cached<T>,$/;"	m	struct:imp::CachedGuard
cache	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    cache: &'a mut CacheInner,$/;"	m	struct:Fsm
cache	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    cache: Cached<ProgramCache>,$/;"	m	struct:Exec
cache	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    cache: CachedGuard<'c, ProgramCache>,$/;"	m	struct:ExecNoSync
cache	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/lib.rs	/^mod cache;$/;"	n
cache_capacity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/lib.rs	/^    fn cache_capacity(&self) -> Option<usize> {$/;"	P	interface:Cached
cache_capacity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn cache_capacity(&self) -> Option<usize> {$/;"	P	implementation:SizedCache
cache_clear	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/lib.rs	/^    fn cache_clear(&mut self);$/;"	P	interface:Cached
cache_clear	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn cache_clear(&mut self) {$/;"	P	implementation:SizedCache
cache_clear	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn cache_clear(&mut self) {$/;"	P	implementation:TimedCache
cache_clear	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn cache_clear(&mut self) {$/;"	P	implementation:UnboundCache
cache_get	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/lib.rs	/^    fn cache_get(&mut self, k: &K) -> Option<&V>;$/;"	P	interface:Cached
cache_get	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn cache_get(&mut self, key: &K) -> Option<&V> {$/;"	P	implementation:SizedCache
cache_get	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn cache_get(&mut self, key: &K) -> Option<&V> {$/;"	P	implementation:TimedCache
cache_get	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn cache_get(&mut self, key: &K) -> Option<&V> {$/;"	P	implementation:UnboundCache
cache_get_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/lib.rs	/^    fn cache_get_mut(&mut self, k: &K) -> Option<&mut V>;$/;"	P	interface:Cached
cache_get_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn cache_get_mut(&mut self, key: &K) -> Option<&mut V> {$/;"	P	implementation:TimedCache
cache_get_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn cache_get_mut(&mut self, key: &K) -> std::option::Option<&mut V> {$/;"	P	implementation:SizedCache
cache_get_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn cache_get_mut(&mut self, key: &K) -> std::option::Option<&mut V> {$/;"	P	implementation:UnboundCache
cache_hits	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/lib.rs	/^    fn cache_hits(&self) -> Option<u64> {$/;"	P	interface:Cached
cache_hits	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn cache_hits(&self) -> Option<u64> {$/;"	P	implementation:SizedCache
cache_hits	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn cache_hits(&self) -> Option<u64> {$/;"	P	implementation:TimedCache
cache_hits	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn cache_hits(&self) -> Option<u64> {$/;"	P	implementation:UnboundCache
cache_lifespan	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/lib.rs	/^    fn cache_lifespan(&self) -> Option<u64> {$/;"	P	interface:Cached
cache_lifespan	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn cache_lifespan(&self) -> Option<u64> {$/;"	P	implementation:TimedCache
cache_misses	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/lib.rs	/^    fn cache_misses(&self) -> Option<u64> {$/;"	P	interface:Cached
cache_misses	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn cache_misses(&self) -> Option<u64> {$/;"	P	implementation:SizedCache
cache_misses	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn cache_misses(&self) -> Option<u64> {$/;"	P	implementation:TimedCache
cache_misses	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn cache_misses(&self) -> Option<u64> {$/;"	P	implementation:UnboundCache
cache_remove	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/lib.rs	/^    fn cache_remove(&mut self, k: &K) -> Option<V>;$/;"	P	interface:Cached
cache_remove	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn cache_remove(&mut self, k: &K) -> Option<V> {$/;"	P	implementation:SizedCache
cache_remove	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn cache_remove(&mut self, k: &K) -> Option<V> {$/;"	P	implementation:TimedCache
cache_remove	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn cache_remove(&mut self, k: &K) -> Option<V> {$/;"	P	implementation:UnboundCache
cache_reset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/lib.rs	/^    fn cache_reset(&mut self);$/;"	P	interface:Cached
cache_reset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn cache_reset(&mut self) {$/;"	P	implementation:SizedCache
cache_reset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn cache_reset(&mut self) {$/;"	P	implementation:TimedCache
cache_reset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn cache_reset(&mut self) {$/;"	P	implementation:UnboundCache
cache_set	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/lib.rs	/^    fn cache_set(&mut self, k: K, v: V);$/;"	P	interface:Cached
cache_set	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn cache_set(&mut self, key: K, val: V) {$/;"	P	implementation:SizedCache
cache_set	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn cache_set(&mut self, key: K, val: V) {$/;"	P	implementation:TimedCache
cache_set	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn cache_set(&mut self, key: K, val: V) {$/;"	P	implementation:UnboundCache
cache_size	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/lib.rs	/^    fn cache_size(&self) -> usize;$/;"	P	interface:Cached
cache_size	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn cache_size(&self) -> usize {$/;"	P	implementation:SizedCache
cache_size	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn cache_size(&self) -> usize {$/;"	P	implementation:TimedCache
cache_size	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn cache_size(&self) -> usize {$/;"	P	implementation:UnboundCache
cached	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/macros.rs	/^macro_rules! cached {$/;"	M
cached_control	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/macros.rs	/^macro_rules! cached_control {$/;"	M
cached_key	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/macros.rs	/^macro_rules! cached_key {$/;"	M
cached_key_result	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/macros.rs	/^macro_rules! cached_key_result {$/;"	M
cached_result	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/macros.rs	/^macro_rules! cached_result {$/;"	M
cached_state	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn cached_state($/;"	P	implementation:Fsm
cached_state_key	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn cached_state_key($/;"	P	implementation:Fsm
call_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    fn call_mut(&mut self, _arg: A) -> Self::Key {$/;"	P	implementation:ChunkIndex
call_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    fn call_mut(&mut self, arg: A) -> Self::Key {$/;"	f
call_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    fn call_mut(&mut self, arg: A) -> Self::Key;$/;"	P	interface:KeyFunction
camax	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^    pub fn camax(&self) -> N::SimdRealField$/;"	P	implementation:Matrix
camin	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^    pub fn camin(&self) -> N::SimdRealField$/;"	P	implementation:Matrix
can_exec	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^pub fn can_exec(insts: &Program) -> bool {$/;"	f
cancel_horizontal_off_diagonal_elt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs	/^    fn cancel_horizontal_off_diagonal_elt($/;"	f
cancel_vertical_off_diagonal_elt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs	/^    fn cancel_vertical_off_diagonal_elt($/;"	f
cancel_x	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs	/^    pub fn cancel_x<S: Storage<N, U2>>(v: &Vector<N, U2, S>) -> Option<(Self, N)> {$/;"	P	implementation:GivensRotation
cancel_y	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs	/^    pub fn cancel_y<S: Storage<N, U2>>(v: &Vector<N, U2, S>) -> Option<(Self, N)> {$/;"	P	implementation:GivensRotation
canonical_basis	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/vector.rs	/^    fn canonical_basis<F: FnMut(&Self) -> bool>(mut f: F) {$/;"	P	interface:FiniteDimVectorSpace
canonical_basis_element	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/vector.rs	/^    fn canonical_basis_element(i: usize) -> Self;$/;"	P	interface:FiniteDimVectorSpace
canonical_basis_element	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^    fn canonical_basis_element(i: usize) -> Self {$/;"	f
canonical_basis_element	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^    fn canonical_basis_element(i: usize) -> Self {$/;"	f
canonical_basis_element	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    fn canonical_basis_element(i: usize) -> Self {$/;"	P	implementation:Quaternion
cap	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/expand.rs	/^    cap: Ref<'a>,$/;"	m	struct:CaptureRef
capacity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    capacity: usize,$/;"	m	struct:SizedCache
capacity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/sparse.rs	/^    pub fn capacity(&self) -> usize {$/;"	P	implementation:SparseSet
caps	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/pikevm.rs	/^    caps: Vec<Slot>,$/;"	m	struct:Threads
caps	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/pikevm.rs	/^    fn caps(&mut self, pc: usize) -> &mut [Option<usize>] {$/;"	P	implementation:Threads
caps	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    caps: &'c Captures<'t>,$/;"	m	struct:SubCaptureMatches
caps	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    caps: &'c Captures<'t>,$/;"	m	struct:SubCaptureMatches
capture_locations	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    pub fn capture_locations(&self) -> CaptureLocations {$/;"	P	implementation:Regex
capture_locations	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    pub fn capture_locations(&self) -> CaptureLocations {$/;"	P	implementation:Regex
capture_name_idx	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    capture_name_idx: HashMap<String, usize>,$/;"	m	struct:Compiler
capture_name_idx	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    pub fn capture_name_idx(&self) -> &Arc<HashMap<String, usize>> {$/;"	P	implementation:Exec
capture_name_idx	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    pub fn capture_name_idx(&self) -> &Arc<HashMap<String, usize>> {$/;"	P	implementation:ExecNoSync
capture_name_idx	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    pub fn capture_name_idx(&self) -> &Arc<HashMap<String, usize>> {$/;"	P	implementation:ExecNoSyncStr
capture_name_idx	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    pub capture_name_idx: Arc<HashMap<String, usize>>,$/;"	m	struct:Program
capture_names	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    pub fn capture_names(&self) -> &[Option<String>] {$/;"	P	implementation:Exec
capture_names	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    pub fn capture_names(&self) -> CaptureNames {$/;"	P	implementation:Regex
capture_names	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    pub fn capture_names(&self) -> CaptureNames {$/;"	P	implementation:Regex
captures	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    pub captures: Vec<Option<String>>,$/;"	m	struct:Program
captures	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    pub fn captures<'t>(&self, text: &'t [u8]) -> Option<Captures<'t>> {$/;"	P	implementation:Regex
captures	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    pub fn captures<'t>(&self, text: &'t str) -> Option<Captures<'t>> {$/;"	P	implementation:Regex
captures_iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    pub fn captures_iter<'r, 't>($/;"	P	implementation:Regex
captures_iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_trait.rs	/^    fn captures_iter(self, text: &Self::Text) -> CaptureMatches<Self> {$/;"	P	interface:RegularExpression
captures_iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    pub fn captures_iter<'r, 't>($/;"	P	implementation:Regex
captures_len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    pub fn captures_len(&self) -> usize {$/;"	P	implementation:Regex
captures_len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    pub fn captures_len(&self) -> usize {$/;"	P	implementation:Regex
captures_nfa	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    fn captures_nfa($/;"	P	implementation:ExecNoSync
captures_nfa_type	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    fn captures_nfa_type($/;"	P	implementation:ExecNoSync
captures_read	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    pub fn captures_read<'t>($/;"	P	implementation:Regex
captures_read	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    pub fn captures_read<'t>($/;"	P	implementation:Regex
captures_read_at	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    fn captures_read_at($/;"	P	implementation:ExecNoSync
captures_read_at	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    fn captures_read_at($/;"	P	implementation:ExecNoSyncStr
captures_read_at	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    pub fn captures_read_at<'t>($/;"	P	implementation:Regex
captures_read_at	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_trait.rs	/^    fn captures_read_at($/;"	P	interface:RegularExpression
captures_read_at	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    pub fn captures_read_at<'t>($/;"	P	implementation:Regex
cartesian_product	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub fn cartesian_product<I, J>(mut i: I, j: J) -> Product<I, J>$/;"	f
cartesian_product	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn cartesian_product<J>(self, other: J) -> Product<Self, J::IntoIter>$/;"	P	interface:Itertools
case_insensitive	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_builder.rs	/^    pub case_insensitive: bool,$/;"	m	struct:RegexOptions
cast	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^mod cast;$/;"	n
cast	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^pub fn cast<T: NumCast, U: NumCast>(n: T) -> Option<U> {$/;"	f
cast	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^pub mod cast;$/;"	n
cast_from_int	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/utils.rs	/^    fn cast_from_int(i: Self::UInt) -> Self;$/;"	P	interface:FloatSIMDUtils
category_mul_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^macro_rules! category_mul_impl($/;"	M
cauchy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^#[cfg(feature = "std")] mod cauchy;$/;"	n
cbrt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn cbrt(self) -> Self {$/;"	P	implementation:Complex
cbrt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn cbrt(self) -> Self;$/;"	P	interface:ComplexField
cbrt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub fn cbrt(&self) -> Self {$/;"	P	implementation:Complex
cbrt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn cbrt(self) -> Self {$/;"	P	implementation:f32
cbrt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn cbrt(self) -> Self {$/;"	P	implementation:f64
cbrt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn cbrt(self) -> Self;$/;"	P	interface:Float
cbrt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn cbrt(self) -> Self;$/;"	P	interface:Real
ceil	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn ceil(self) -> Self {$/;"	P	implementation:Complex
ceil	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn ceil(self) -> Self;$/;"	P	interface:ComplexField
ceil	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn ceil(self) -> Self {$/;"	P	implementation:f32
ceil	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn ceil(self) -> Self {$/;"	P	implementation:f64
ceil	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn ceil(self) -> Self {$/;"	P	interface:FloatCore
ceil	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn ceil(self) -> Self;$/;"	P	interface:Float
ceil	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn ceil(self) -> Self;$/;"	P	interface:Real
center	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs	/^pub fn center<N: SimdComplexField, D: DimName>(p1: &Point<N, D>, p2: &Point<N, D>) -> Point<N, D/;"	f
cg	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs	/^mod cg;$/;"	n
chain	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs	/^pub fn chain<I, J>(i: I, j: J) -> iter::Chain<<I as IntoIterator>::IntoIter, <J as IntoIterator>/;"	f
char	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/scan.rs	/^pub fn char(s: &str, c1: u8) -> ParseResult<&str> {$/;"	f
char	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^impl ToValue for char {$/;"	c
char	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        fn char(&mut self, v: char) -> Result<(), Error> {$/;"	P	implementation:fmt_support::FmtVisitor
char	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        fn char(&mut self, v: char) -> Result<(), Error> {$/;"	P	implementation:sval_support::SvalVisitor
char	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    fn char(&mut self, v: char) -> Result<(), Error>;$/;"	P	interface:Visitor
char	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/test.rs	/^            fn char(&mut self, v: char) -> Result<(), Error> {$/;"	P	implementation:Value::to_token::TestVisitor
char	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    pub fn char(&self) -> Char {$/;"	P	implementation:InputAt
char	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^impl PartialEq<Char> for char {$/;"	c
char	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^impl PartialOrd<Char> for char {$/;"	c
char_len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    char_len: usize,$/;"	m	struct:FreqyPacked
char_len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    pub fn char_len(&self) -> usize {$/;"	P	implementation:FreqyPacked
char_len_lossy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^fn char_len_lossy(bytes: &[u8]) -> usize {$/;"	f
check	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parse.rs	/^    macro_rules! check {$/;"	M	function:test_parse
check	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^        fn check((y1,m1,d1): (i32, u32, u32), (y2,m2,d2): (i32, u32, u32), diff: Duration) {$/;"	f	function:tests::test_date_sub
check	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^        fn check((y1,m1,d1): (i32, u32, u32), rhs: Duration, ymd: Option<(i32, u32, u32)>) {$/;"	f	function:tests::test_date_add
check	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^        fn check(year: i32, month: u32, day: u32, ordinal: u32) {$/;"	f	function:tests::test_date_fields
check	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^        fn check((y,m,d,h,n,s): (i32,u32,u32,u32,u32,u32), rhs: Duration,$/;"	f	function:tests::test_datetime_add
check	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^        fn check(expected: bool, flags: YearFlags, month1: u32, day1: u32,$/;"	f	function:tests::test_mdf_valid
check	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^        fn check(expected: bool, flags: YearFlags, ordinal1: u32, ordinal2: u32) {$/;"	f	function:tests::test_of
check	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^        fn check(flags: YearFlags, month: u32, day: u32) {$/;"	f	function:tests::test_mdf_with_fields
check	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^        fn check(flags: YearFlags, ordinal: u32) {$/;"	f	function:tests::test_of_with_fields
check	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^        macro_rules! check {$/;"	M	function:tests::test_time_add
check	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^        macro_rules! check {$/;"	M	function:tests::test_time_sub
check	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    macro_rules! check {$/;"	M	function:pow_test
check_homogeneous_invariants	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^    fn check_homogeneous_invariants<N: RealField, D: DimName>(_: &MatrixN<N, D>) -> bool$/;"	P	implementation:TGeneral
check_homogeneous_invariants	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^    fn check_homogeneous_invariants<N: RealField, D: DimName>(mat: &MatrixN<N, D>) -> bool$/;"	P	implementation:TAffine
check_homogeneous_invariants	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^    fn check_homogeneous_invariants<N: RealField, D: DimName>(mat: &MatrixN<N, D>) -> bool$/;"	P	implementation:TProjective
check_homogeneous_invariants	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^    fn check_homogeneous_invariants<N: RealField, D: DimName>(mat: &MatrixN<N, D>) -> bool$/;"	P	interface:TCategory
check_match	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    fn check_match(&self, haystack: &[u8], window_end: usize) -> bool {$/;"	P	implementation:BoyerMooreSearch
check_num_ops	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^fn check_num_ops() {$/;"	f
check_numassign_ops	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^fn check_numassign_ops() {$/;"	f
check_numref_ops	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^fn check_numref_ops() {$/;"	f
check_refnum_ops	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^fn check_refnum_ops() {$/;"	f
check_refref_ops	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^fn check_refref_ops() {$/;"	f
check_size	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn check_size(&self) -> result::Result<(), Error> {$/;"	P	implementation:Compiler
checked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/mod.rs	/^pub mod checked;$/;"	n
checked_add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    pub fn checked_add(&self, rhs: &Duration) -> Option<Duration> {$/;"	P	implementation:Duration
checked_add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/checked.rs	/^    fn checked_add(&self, v: &Self) -> Option<Self>;$/;"	P	interface:CheckedAdd
checked_add_signed	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    pub fn checked_add_signed(self, rhs: OldDuration) -> Option<Date<Tz>> {$/;"	P	implementation:Date
checked_add_signed	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    pub fn checked_add_signed(self, rhs: OldDuration) -> Option<DateTime<Tz>> {$/;"	P	implementation:DateTime
checked_add_signed	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    pub fn checked_add_signed(self, rhs: OldDuration) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
checked_add_signed	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    pub fn checked_add_signed(self, rhs: OldDuration) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
checked_div	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/checked.rs	/^    fn checked_div(&self, v: &Self) -> Option<Self>;$/;"	P	interface:CheckedDiv
checked_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/checked.rs	/^macro_rules! checked_impl {$/;"	M
checked_impl_unary	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/checked.rs	/^macro_rules! checked_impl_unary {$/;"	M
checked_mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/checked.rs	/^    fn checked_mul(&self, v: &Self) -> Option<Self>;$/;"	P	interface:CheckedMul
checked_neg	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/checked.rs	/^    fn checked_neg(&self) -> Option<Self>;$/;"	P	interface:CheckedNeg
checked_pow	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/pow.rs	/^pub fn checked_pow<T: Clone + One + CheckedMul>(mut base: T, mut exp: usize) -> Option<T> {$/;"	f
checked_rem	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/checked.rs	/^    fn checked_rem(&self, v: &Self) -> Option<Self>;$/;"	P	interface:CheckedRem
checked_shift_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/checked.rs	/^macro_rules! checked_shift_impl {$/;"	M
checked_shl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/checked.rs	/^    fn checked_shl(&self, rhs: u32) -> Option<Self>;$/;"	P	interface:CheckedShl
checked_shr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/checked.rs	/^    fn checked_shr(&self, rhs: u32) -> Option<Self>;$/;"	P	interface:CheckedShr
checked_sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    pub fn checked_sub(&self, rhs: &Duration) -> Option<Duration> {$/;"	P	implementation:Duration
checked_sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/checked.rs	/^    fn checked_sub(&self, v: &Self) -> Option<Self>;$/;"	P	interface:CheckedSub
checked_sub_signed	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    pub fn checked_sub_signed(self, rhs: OldDuration) -> Option<Date<Tz>> {$/;"	P	implementation:Date
checked_sub_signed	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    pub fn checked_sub_signed(self, rhs: OldDuration) -> Option<DateTime<Tz>> {$/;"	P	implementation:DateTime
checked_sub_signed	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    pub fn checked_sub_signed(self, rhs: OldDuration) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
checked_sub_signed	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    pub fn checked_sub_signed(self, rhs: OldDuration) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
checks_homogeneous_invariants_of_square_identity_matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^    fn checks_homogeneous_invariants_of_square_identity_matrix() {$/;"	f	module:tests
chi	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    chi: ChiSquared,$/;"	m	struct:StudentT
chol	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs	/^    chol: MatrixN<N, D>,$/;"	m	struct:Cholesky
cholesky	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs	/^    pub fn cholesky(self) -> Option<Cholesky<N, D>> {$/;"	f
cholesky	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/mod.rs	/^mod cholesky;$/;"	n
choose	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^    fn choose<R>(&self, rng: &mut R) -> Option<&Self::Item>$/;"	P	implementation:T
choose	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^    fn choose<R>(&self, rng: &mut R) -> Option<&Self::Item>$/;"	P	interface:SliceRandom
choose	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^    fn choose<R>(mut self, rng: &mut R) -> Option<Self::Item>$/;"	P	interface:IteratorRandom
choose_dfa_match_type	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    fn choose_dfa_match_type(&self) -> Option<MatchType> {$/;"	P	implementation:ExecReadOnly
choose_literal_match_type	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    fn choose_literal_match_type(&self) -> Option<MatchType> {$/;"	P	implementation:ExecReadOnly
choose_match_type	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    fn choose_match_type(&self, hint: Option<MatchType>) -> MatchType {$/;"	P	implementation:ExecReadOnly
choose_multiple	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^    fn choose_multiple<R>(&self, rng: &mut R, amount: usize) -> SliceChooseIter<Self, Self::Item/;"	P	implementation:T
choose_multiple	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^    fn choose_multiple<R>(&self, rng: &mut R, amount: usize) -> SliceChooseIter<Self, Self::Item/;"	P	interface:SliceRandom
choose_multiple	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^    fn choose_multiple<R>(mut self, rng: &mut R, amount: usize) -> Vec<Self::Item>$/;"	P	interface:IteratorRandom
choose_multiple_fill	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^    fn choose_multiple_fill<R>(mut self, rng: &mut R, buf: &mut [Self::Item]) -> usize$/;"	P	interface:IteratorRandom
choose_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^    fn choose_mut<R>(&mut self, rng: &mut R) -> Option<&mut Self::Item>$/;"	P	implementation:T
choose_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^    fn choose_mut<R>(&mut self, rng: &mut R) -> Option<&mut Self::Item>$/;"	P	interface:SliceRandom
choose_subset	/Users/williamcashman/Honours/Program/n_poly/src/ideals/f4.rs	/^pub fn choose_subset(pairs: &mut Vec<(usize, usize)>) -> Vec<(usize, usize)> {$/;"	f
choose_weighted	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^    fn choose_weighted<R, F, B, X>($/;"	P	implementation:T
choose_weighted	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^    fn choose_weighted<R, F, B, X>($/;"	P	interface:SliceRandom
choose_weighted_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^    fn choose_weighted_mut<R, F, B, X>($/;"	P	implementation:T
choose_weighted_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^    fn choose_weighted_mut<R, F, B, X>($/;"	P	interface:SliceRandom
chunk_remaining	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^        chunk_remaining: usize,$/;"	m	struct:test::ChunkHintedIterator
chunk_size	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^        chunk_size: usize,$/;"	m	struct:test::ChunkHintedIterator
chunks	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn chunks(self, size: usize) -> IntoChunks<Self>$/;"	P	interface:Itertools
clamp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs	/^pub fn clamp<T: PartialOrd>(val: T, min: T, max: T) -> T {$/;"	f
clamp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^pub fn clamp<T: PartialOrd>(input: T, min: T, max: T) -> T {$/;"	f
clamp_day	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    fn clamp_day(day: u32) -> u32 {$/;"	P	implementation:Mdf
clamp_max	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^pub fn clamp_max<T: PartialOrd>(input: T, max: T) -> T {$/;"	f
clamp_max_nan_max	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^fn clamp_max_nan_max() {$/;"	f
clamp_min	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^pub fn clamp_min<T: PartialOrd>(input: T, min: T) -> T {$/;"	f
clamp_min_nan_min	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^fn clamp_min_nan_min() {$/;"	f
clamp_month	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    fn clamp_month(month: u32) -> u32 {$/;"	P	implementation:Mdf
clamp_nan_max	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^fn clamp_nan_max() {$/;"	f
clamp_nan_min	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^fn clamp_nan_min() {$/;"	f
clamp_nan_min_max	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^fn clamp_nan_min_max() {$/;"	f
clamp_ordinal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    fn clamp_ordinal(ordinal: u32) -> u32 {$/;"	P	implementation:Of
clamp_test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^fn clamp_test() {$/;"	f
classify	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn classify(self) -> FpCategory {$/;"	P	implementation:f32
classify	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn classify(self) -> FpCategory {$/;"	P	implementation:f64
classify	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn classify(self) -> FpCategory;$/;"	P	interface:Float
classify	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn classify(self) -> FpCategory;$/;"	P	interface:FloatCore
clear	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn clear(&mut self) {$/;"	P	implementation:LRUList
clear	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn clear() {$/;"	f	module:tests
clear	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    pub(crate) fn clear(&mut self) {$/;"	P	implementation:Formatter
clear	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    pub(in crate::fmt) fn clear(&mut self) {$/;"	P	implementation:Buffer
clear	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/shim_impl.rs	/^    pub(in crate::fmt) fn clear(&mut self) {$/;"	P	implementation:Buffer
clear	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/backtrack.rs	/^    fn clear(&mut self) {$/;"	P	implementation:Bounded
clear	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn clear(&mut self) {$/;"	P	implementation:SuffixCache
clear	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn clear(&mut self) {$/;"	P	implementation:StateMap
clear	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn clear(&mut self) {$/;"	P	implementation:Transitions
clear	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/sparse.rs	/^    pub fn clear(&mut self) {$/;"	P	implementation:SparseSet
clear_cache	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn clear_cache(&mut self) -> bool {$/;"	P	implementation:Fsm
clear_cache_and_save	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn clear_cache_and_save($/;"	P	implementation:Fsm
clear_column_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/householder.rs	/^pub fn clear_column_unchecked<N: ComplexField, R: Dim, C: Dim>($/;"	f
clear_row_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/householder.rs	/^pub fn clear_row_unchecked<N: ComplexField, R: Dim, C: Dim>($/;"	f
clist	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/pikevm.rs	/^    clist: Threads,$/;"	m	struct:Cache
clone	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^    fn clone(&self) -> Id<O> {$/;"	P	implementation:Id
clone	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/wrapper.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Wrapper
clone	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:InternalNumeric
clone	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/impls.rs	/^    fn clone(&self) -> GenericArray<T, N> {$/;"	f
clone	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/iter.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    fn clone(&self) -> GenericArrayImplEven<T, U> {$/;"	P	implementation:GenericArrayImplEven
clone	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    fn clone(&self) -> GenericArrayImplOdd<T, U> {$/;"	P	implementation:GenericArrayImplOdd
clone	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn clone(&self) -> Level {$/;"	P	implementation:Level
clone	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn clone(&self) -> LevelFilter {$/;"	P	implementation:LevelFilter
clone	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:SliceStorage
clone	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Orthographic3
clone	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Perspective3
clone	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Quaternion
clone	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/reseeding.rs	/^    fn clone(&self) -> ReseedingCore<R, Rsdr> {$/;"	f
clone	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/reseeding.rs	/^    fn clone(&self) -> ReseedingRng<R, Rsdr> {$/;"	f
clone	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    fn clone(&self) -> Exec {$/;"	P	implementation:Exec
clone_fields	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/impl_macros.rs	/^macro_rules! clone_fields {$/;"	M
clone_from_slice	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    pub fn clone_from_slice(list: &[T]) -> GenericArray<T, N> {$/;"	f
clone_owned	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^    fn clone_owned(&self) -> Owned<N, R, C>$/;"	f
clone_owned	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn clone_owned(&self) -> MatrixMN<N, R, C>$/;"	P	implementation:Matrix
clone_owned	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs	/^    fn clone_owned(&self) -> Owned<N, R, C>$/;"	P	interface:Storage
clone_owned	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^    fn clone_owned(&self) -> Owned<N, Dynamic, C>$/;"	f
clone_owned	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^    fn clone_owned(&self) -> Owned<N, R, Dynamic>$/;"	f
clone_owned	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn clone_owned(&self) -> Self {$/;"	f
clone_owned	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^    pub fn clone_owned(&self) -> Transform<N, D, C> {$/;"	f
clone_owned_sum	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn clone_owned_sum<R2, C2>(&self) -> MatrixSum<N, R, C, R2, C2>$/;"	P	implementation:Matrix
cloned	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs	/^pub fn cloned<'a, I, T: 'a>(iterable: I) -> iter::Cloned<I::IntoIter>$/;"	f
close	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn close(a: Complex64, b: Complex64) -> bool {$/;"	f	module:test::float
close_to_tol	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn close_to_tol(a: Complex64, b: Complex64, tol: f64) -> bool {$/;"	f	module:test::float
cmp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    fn cmp(&self, other: &Date<Tz>) -> Ordering { self.date.cmp(&other.date) }$/;"	P	implementation:Date
cmp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn cmp(&self, other: &DateTime<Tz>) -> Ordering { self.datetime.cmp(&other.datetime) }$/;"	P	implementation:DateTime
cmp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/impls.rs	/^    fn cmp(&self, other: &GenericArray<T, N>) -> Ordering {$/;"	f
cmp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    cmp: F,$/;"	m	struct:MergeBy
cmp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^    fn cmp(&self, other: &Self) -> cmp::Ordering {$/;"	P	implementation:Key
cmp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn cmp(&self, other: &Level) -> cmp::Ordering {$/;"	P	implementation:Level
cmp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn cmp(&self, other: &LevelFilter) -> cmp::Ordering {$/;"	P	implementation:LevelFilter
cmp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^macro_rules! cmp {$/;"	M
cmp	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    fn cmp(&self, other: &Self) -> Ordering {$/;"	P	implementation:Term
cmp	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    fn cmp(a: &I, b: &I) -> Ordering;$/;"	P	interface:MonomialOrdering
cmp	/Users/williamcashman/Honours/Program/n_poly/src/polym.rs	/^    fn cmp(a: &M, b: &M) -> Ordering {$/;"	P	implementation:GLex
cmp	/Users/williamcashman/Honours/Program/n_poly/src/polym.rs	/^    fn cmp(a: &M, b: &M) -> Ordering {$/;"	P	implementation:Lex
cmp	/Users/williamcashman/Honours/Program/n_poly/src/polyu.rs	/^    fn cmp(a: &UniIndex, b: &UniIndex) -> Ordering {$/;"	P	implementation:UnivarOrder
cmp_fn	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/merge_join.rs	/^    cmp_fn: F$/;"	m	struct:MergeJoinBy
cmpdeg	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    pub fn cmpdeg(&self, other: Self) -> Ordering {$/;"	P	implementation:Term
coalesce	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub fn coalesce<I, F>(mut iter: I, f: F) -> Coalesce<I, F>$/;"	f
coalesce	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn coalesce<F>(self, f: F) -> Coalesce<Self, F>$/;"	P	interface:Itertools
coeff	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    pub coeff: P::Coeff,$/;"	m	struct:Term
collect	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    fn collect<C>(self) -> C$/;"	f
collect_from_iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs	/^    fn collect_from_iter<I>(iter: I, buf: &mut Self::Buffer) -> Option<Self>$/;"	P	interface:TupleCollect
collect_from_iter_no_buf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs	/^    fn collect_from_iter_no_buf<I>(iter: I) -> Option<Self>$/;"	P	interface:TupleCollect
collect_tuple	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn collect_tuple<T>(mut self) -> Option<T>$/;"	P	interface:Itertools
collect_vec	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn collect_vec(self) -> Vec<Self::Item>$/;"	P	interface:Itertools
colon_or_space	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/scan.rs	/^pub fn colon_or_space(s: &str) -> ParseResult<&str> {$/;"	f
column_entries	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    fn column_entries(&'a self, j: usize) -> Self::ColumnEntries {$/;"	f
column_entries	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    fn column_entries(&'a self, j: usize) -> Self::ColumnEntries;$/;"	P	interface:CsStorageIter
column_entries_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    fn column_entries_mut(&'a mut self, j: usize) -> Self::ColumnEntriesMut {$/;"	f
column_entries_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    fn column_entries_mut(&'a mut self, j: usize) -> Self::ColumnEntriesMut;$/;"	P	interface:CsStorageIterMut
column_iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn column_iter(&self) -> ColumnIter<N, R, C, S> {$/;"	P	implementation:Matrix
column_iter_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn column_iter_mut(&mut self) -> ColumnIterMut<N, R, C, S> {$/;"	P	implementation:Matrix
column_mean	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs	/^    pub fn column_mean(&self) -> VectorN<N, R>$/;"	P	implementation:Matrix
column_range	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    fn column_range(&self, i: usize) -> Range<usize>;$/;"	P	interface:CsStorage
column_range	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    fn column_range(&self, j: usize) -> Range<usize> {$/;"	f
column_row_indices	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    fn column_row_indices(&'a self, j: usize) -> Self::ColumnRowIndices {$/;"	f
column_row_indices	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    fn column_row_indices(&'a self, j: usize) -> Self::ColumnRowIndices;$/;"	P	interface:CsStorageIter
column_sum	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs	/^    pub fn column_sum(&self) -> VectorN<N, R>$/;"	P	implementation:Matrix
column_variance	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs	/^    pub fn column_variance(&self) -> VectorN<N, R>$/;"	P	implementation:Matrix
columns_range	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^    pub fn columns_range<ColRange: SliceRange<C>>($/;"	P	implementation:Matrix
columns_range_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^    pub fn columns_range_mut<ColRange: SliceRange<C>>($/;"	P	implementation:Matrix
combinations	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations.rs	/^pub fn combinations<I>(iter: I, k: usize) -> Combinations<I>$/;"	f
combinations	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn combinations(self, k: usize) -> Combinations<Self>$/;"	P	interface:Itertools
combinations	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^mod combinations;$/;"	n
combinations_with_replacement	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations_with_replacement.rs	/^pub fn combinations_with_replacement<I>(iter: I, k: usize) -> CombinationsWithReplacement<I>$/;"	f
combinations_with_replacement	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn combinations_with_replacement(self, k: usize) -> CombinationsWithReplacement<Self>$/;"	P	interface:Itertools
combinations_with_replacement	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^mod combinations_with_replacement;$/;"	n
compare	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^    fn compare<P: InternalMarker>(&self, _: &B0) -> Self::Output {$/;"	P	implementation:B0
compare	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^    fn compare<P: InternalMarker>(&self, _: &B0) -> Self::Output {$/;"	P	implementation:B1
compare	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^    fn compare<P: InternalMarker>(&self, _: &B1) -> Self::Output {$/;"	P	implementation:B0
compare	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^    fn compare<P: InternalMarker>(&self, _: &B1) -> Self::Output {$/;"	P	implementation:B1
compare	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn compare<IM: InternalMarker>(&self, _: &NInt<N>) -> Self::Output {$/;"	P	implementation:PInt
compare	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn compare<IM: InternalMarker>(&self, _: &NInt<U>) -> Self::Output {$/;"	P	implementation:Z0
compare	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn compare<IM: InternalMarker>(&self, _: &PInt<P>) -> Self::Output {$/;"	P	implementation:NInt
compare	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn compare<IM: InternalMarker>(&self, _: &PInt<U>) -> Self::Output {$/;"	P	implementation:Z0
compare	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn compare<IM: InternalMarker>(&self, _: &Z0) -> Self::Output {$/;"	P	implementation:NInt
compare	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn compare<IM: InternalMarker>(&self, _: &Z0) -> Self::Output {$/;"	P	implementation:PInt
compare	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn compare<IM: InternalMarker>(&self, _: &Z0) -> Self::Output {$/;"	P	implementation:Z0
compare	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn compare<IM: InternalMarker>(&self, rhs: &NInt<Nr>) -> Self::Output {$/;"	P	implementation:NInt
compare	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn compare<IM: InternalMarker>(&self, rhs: &PInt<Pr>) -> Self::Output {$/;"	P	implementation:PInt
compare	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    fn compare<IM: InternalMarker>(&self, &Rhs) -> Self::Output;$/;"	P	interface:Cmp
compare	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn compare<IM: InternalMarker>(&self, _: &UInt<U, B>) -> Self::Output {$/;"	P	implementation:UTerm
compare	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn compare<IM: InternalMarker>(&self, _: &UTerm) -> Self::Output {$/;"	P	implementation:UInt
compare	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn compare<IM: InternalMarker>(&self, _: &UTerm) -> Self::Output {$/;"	P	implementation:UTerm
compare	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn compare<IM: InternalMarker>(&self, rhs: &UInt<Ur, B0>) -> Self::Output {$/;"	f
compare	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn compare<IM: InternalMarker>(&self, rhs: &UInt<Ur, B1>) -> Self::Output {$/;"	f
compile	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn compile(mut self) -> Result {$/;"	P	implementation:CompileClass
compile	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    pub fn compile(mut self, exprs: &[Hir]) -> result::Result<Program, Error> {$/;"	P	implementation:Compiler
compile	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/lib.rs	/^mod compile;$/;"	n
compile_finish	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn compile_finish(mut self) -> result::Result<Program, Error> {$/;"	P	implementation:Compiler
compile_many	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn compile_many($/;"	P	implementation:Compiler
compile_md2_shift	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    fn compile_md2_shift(pattern: &[u8]) -> usize {$/;"	P	implementation:BoyerMooreSearch
compile_one	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn compile_one(mut self, expr: &Hir) -> result::Result<Program, Error> {$/;"	P	implementation:Compiler
compile_skip_table	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    fn compile_skip_table(pattern: &[u8]) -> Vec<usize> {$/;"	P	implementation:BoyerMooreSearch
compiled	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    compiled: Program,$/;"	m	struct:Compiler
compiled	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    compiled: StateMap,$/;"	m	struct:CacheInner
complete	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    complete: bool,$/;"	m	struct:LiteralSearcher
complete	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    complete: bool,$/;"	m	struct:SingleByteSet
complete	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    pub fn complete(&self) -> bool {$/;"	P	implementation:LiteralSearcher
complete	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/mod.rs	/^        pub fn complete(&self) -> bool {$/;"	P	implementation:imp::LiteralSearcher
complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/mod.rs	/^mod complex;$/;"	n
complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs	/^    pub fn complex(&self) -> &Complex<N> {$/;"	f
complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-0.2.1/src/lib.rs	/^pub mod complex {$/;"	n
complex	/Users/williamcashman/Honours/Program/n_poly/src/algebras/mod.rs	/^pub mod complex;$/;"	n
complex_arithmetic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    mod complex_arithmetic {$/;"	n	module:test
complex_eigenvalues	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs	/^    pub fn complex_eigenvalues(&self) -> VectorN<NumComplex<N>, D>$/;"	f
complex_from_polar	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^fn complex_from_polar<N: RealField>(r: N, theta: N) -> num_complex::Complex<N> {$/;"	f
complex_op_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs	/^macro_rules! complex_op_impl($/;"	M
complex_op_impl_all	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs	/^macro_rules! complex_op_impl_all($/;"	M
component_binop_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs	/^macro_rules! component_binop_impl($/;"	M
component_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/vector.rs	/^    unsafe fn component_unchecked(&self, i: usize) -> &Self::Field;$/;"	P	interface:FiniteDimVectorSpace
component_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^    unsafe fn component_unchecked(&self, i: usize) -> &N {$/;"	f
component_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    unsafe fn component_unchecked(&self, i: usize) -> &N {$/;"	P	implementation:Quaternion
component_unchecked_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/vector.rs	/^    unsafe fn component_unchecked_mut(&mut self, i: usize) -> &mut Self::Field;$/;"	P	interface:FiniteDimVectorSpace
component_unchecked_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^    unsafe fn component_unchecked_mut(&mut self, i: usize) -> &mut N {$/;"	f
component_unchecked_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    unsafe fn component_unchecked_mut(&mut self, i: usize) -> &mut N {$/;"	P	implementation:Quaternion
componentwise	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs	/^mod componentwise;$/;"	n
componentwise_binop_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^macro_rules! componentwise_binop_impl($/;"	M
componentwise_constructors_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^macro_rules! componentwise_constructors_impl($/;"	M
componentwise_constructors_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs	/^macro_rules! componentwise_constructors_impl($/;"	M
componentwise_constructors_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_construction.rs	/^macro_rules! componentwise_constructors_impl($/;"	M
componentwise_scalarop_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^macro_rules! componentwise_scalarop_impl($/;"	M
componentwise_scalarop_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_ops.rs	/^macro_rules! componentwise_scalarop_impl($/;"	M
compress_columns	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs	/^    pub fn compress_columns($/;"	P	implementation:Matrix
compress_rows	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^unsafe fn compress_rows<N: Scalar>($/;"	f
compress_rows	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs	/^    pub fn compress_rows($/;"	P	implementation:Matrix
compress_rows_tr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs	/^    pub fn compress_rows_tr($/;"	P	implementation:Matrix
compute	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^    fn compute<T: Copy>(x: &T, y: T) -> T$/;"	f	function:check_refnum_ops
compute	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^    fn compute<T: Num + Copy>(x: T, y: T) -> T {$/;"	f	function:check_num_ops
compute	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^    fn compute<T: NumAssign + Copy>(mut x: T, y: T) -> T {$/;"	f	function:check_numassign_ops
compute	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^    fn compute<T: NumRef>(x: T, y: &T) -> T {$/;"	f	function:check_numref_ops
compute	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^    fn compute<T>(x: &T, y: &T) -> T$/;"	f	function:check_refref_ops
compute_2x2_basis	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs	/^fn compute_2x2_basis<N: ComplexField, S: Storage<N, U2, U2>>($/;"	f
compute_2x2_eigvals	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs	/^fn compute_2x2_eigvals<N: ComplexField, S: Storage<N, U2, U2>>($/;"	f
compute_2x2_uptrig_svd	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs	/^fn compute_2x2_uptrig_svd<N: RealField>($/;"	f
compute_m	/Users/williamcashman/Honours/Program/n_poly/src/ideals/f4.rs	/^pub fn compute_m<'a, P: FPolyRing>(l_mat: &mut Vec<Poly<'a, P>>, g: &Ideal<'a, P>) {$/;"	f
compute_m_test	/Users/williamcashman/Honours/Program/n_poly/src/ideals/f4.rs	/^    fn compute_m_test() {$/;"	f	module:tests
concat	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^    fn concat(self, rest: Self::Rest) -> Self::Output {$/;"	f
concat	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^    fn concat(self, rest: Self::Rest) -> Self::Output;$/;"	P	interface:Concat
concat	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/concat_impl.rs	/^pub fn concat<I>(iterable: I) -> I::Item$/;"	f
concat	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn concat(self) -> Self::Item$/;"	P	interface:Itertools
concat_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^mod concat_impl;$/;"	n
conj	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub fn conj(&self) -> Self {$/;"	P	implementation:Complex
conjugate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn conjugate(self) -> Self {$/;"	P	implementation:Complex
conjugate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn conjugate(self) -> Self;$/;"	P	interface:ComplexField
conjugate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn conjugate(&self) -> MatrixMN<N, R, C>$/;"	P	implementation:Matrix
conjugate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn conjugate(&self) -> Self {$/;"	f
conjugate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs	/^    pub fn conjugate(&self) -> Self {$/;"	f
conjugate_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn conjugate_mut(&mut self) {$/;"	P	implementation:Matrix
conjugate_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn conjugate_mut(&mut self) {$/;"	f
conjugate_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs	/^    pub fn conjugate_mut(&mut self) {$/;"	f
conjugate_transform_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn conjugate_transform_mut(&mut self) {$/;"	P	implementation:Matrix
conjugate_transpose	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn conjugate_transpose(&self) -> MatrixMN<N, C, R>$/;"	P	implementation:Matrix
conjugate_transpose_to	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn conjugate_transpose_to<R2, C2, SB>(&self, out: &mut Matrix<N, R2, C2, SB>)$/;"	P	implementation:Matrix
cons_tuples	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/cons_tuples_impl.rs	/^pub fn cons_tuples<I, J>(iterable: I) -> ConsTuples<I, J>$/;"	f
cons_tuples_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^mod cons_tuples_impl;$/;"	n
const_domain	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    fn const_domain() -> Self {$/;"	f
const_domain	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    fn const_domain() -> Self;$/;"	P	interface:PolyRing
constant	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/macros.rs	/^macro_rules! constant {$/;"	M
constant_ring	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    pub fn constant_ring() -> Self {$/;"	f
constraint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs	/^pub mod constraint;$/;"	n
construction	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs	/^mod construction;$/;"	n
construction_slice	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs	/^mod construction_slice;$/;"	n
contained_by	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    fn contained_by(&self, _: D) -> bool {$/;"	P	implementation:RangeFull
contained_by	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    fn contained_by(&self, _: D) -> bool {$/;"	f
contained_by	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    fn contained_by(&self, dimension: D) -> bool {$/;"	P	implementation:Range
contained_by	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    fn contained_by(&self, dimension: D) -> bool {$/;"	P	implementation:RangeFrom
contained_by	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    fn contained_by(&self, dimension: D) -> bool {$/;"	P	implementation:RangeInclusive
contained_by	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    fn contained_by(&self, dimension: D) -> bool {$/;"	P	implementation:RangeTo
contained_by	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    fn contained_by(&self, dimension: D) -> bool {$/;"	P	implementation:RangeToInclusive
contained_by	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    fn contained_by(&self, dimension: D) -> bool {$/;"	P	implementation:usize
contained_by	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    fn contained_by(&self, dimension: D) -> bool;$/;"	P	interface:DimRange
contained_by	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    fn contained_by(&self, matrix: &Matrix<N, R, C, S>) -> bool {$/;"	f
contained_by	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    fn contained_by(&self, matrix: &Matrix<N, R, C, S>) -> bool;$/;"	P	interface:MatrixIndex
contains	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/sparse.rs	/^    pub fn contains(&self, value: usize) -> bool {$/;"	P	implementation:SparseSet
continue_past_first_match	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn continue_past_first_match(&self) -> bool {$/;"	P	implementation:Fsm
conversion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs	/^mod conversion;$/;"	n
convert	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs	/^pub fn convert<From, To: SupersetOf<From>>(t: From) -> To {$/;"	f
convert_deg_rad	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn convert_deg_rad() {$/;"	f	module:tests
convert_deg_rad_std	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn convert_deg_rad_std() {$/;"	f	module:tests
convert_ref	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs	/^pub fn convert_ref<From, To: SupersetOf<From>>(t: &From) -> To {$/;"	f
convert_ref_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs	/^pub fn convert_ref_unchecked<From: SupersetOf<To>, To>(t: &From) -> To {$/;"	f
convert_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs	/^pub fn convert_unchecked<From: SupersetOf<To>, To>(t: From) -> To {$/;"	f
convolution	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/mod.rs	/^mod convolution;$/;"	n
convolve_full	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/convolution.rs	/^    pub fn convolve_full<D2, S2>($/;"	P	implementation:Vector
convolve_same	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/convolution.rs	/^    pub fn convolve_same<D2, S2>(&self, kernel: Vector<N, D2, S2>) -> VectorN<N, D1>$/;"	P	implementation:Vector
convolve_valid	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/convolution.rs	/^    pub fn convolve_valid<D2, S2>($/;"	P	implementation:Vector
coordinates	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs	/^pub mod coordinates;$/;"	n
coordinates	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_alga.rs	/^    fn coordinates(&self) -> Self::Coordinates {$/;"	f
coords	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^    pub coords: VectorN<N, D>,$/;"	m	struct:Point
coords	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub coords: Vector4<N>,$/;"	m	struct:Quaternion
coords_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs	/^macro_rules! coords_impl($/;"	M
copy_from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn copy_from<R2, C2, SB>(&mut self, other: &Matrix<N, R2, C2, SB>)$/;"	P	implementation:Matrix
copy_from_slice	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn copy_from_slice(&mut self, slice: &[N]) {$/;"	P	implementation:Matrix
cos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn cos(self) -> Self {$/;"	P	implementation:Complex
cos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn cos(self) -> Self;$/;"	P	interface:ComplexField
cos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn cos(&self) -> Self {$/;"	f
cos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub fn cos(&self) -> Self {$/;"	P	implementation:Complex
cos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn cos(self) -> Self {$/;"	P	implementation:f32
cos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn cos(self) -> Self {$/;"	P	implementation:f64
cos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn cos(self) -> Self;$/;"	P	interface:Float
cos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn cos(self) -> Self;$/;"	P	interface:Real
cos_angle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs	/^    pub fn cos_angle(&self) -> N {$/;"	f
cosc	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn cosc(self) -> Self {$/;"	P	interface:ComplexField
cosh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn cosh(self) -> Self {$/;"	P	implementation:Complex
cosh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn cosh(self) -> Self;$/;"	P	interface:ComplexField
cosh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn cosh(&self) -> Self {$/;"	f
cosh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub fn cosh(&self) -> Self {$/;"	P	implementation:Complex
cosh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn cosh(self) -> Self {$/;"	P	implementation:f32
cosh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn cosh(self) -> Self {$/;"	P	implementation:f64
cosh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn cosh(self) -> Self;$/;"	P	interface:Float
cosh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn cosh(self) -> Self;$/;"	P	interface:Real
coshc	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn coshc(self) -> Self {$/;"	P	interface:ComplexField
count	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/iter.rs	/^    fn count(self) -> usize {$/;"	f
count	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    count: usize,$/;"	m	struct:Positions
count	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    fn count(self) -> usize {$/;"	f
count	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs	/^    fn count(self) -> usize {$/;"	f
count	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/merge_join.rs	/^    fn count(mut self) -> usize {$/;"	f
count	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs	/^    fn count(self) -> usize {$/;"	f
count	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs	/^    fn count(self) -> usize {$/;"	f
count	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^        fn count(&self) -> usize {$/;"	f	module:std_support
count	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^        fn count() {$/;"	f	module:std_support::tests
count	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^    fn count(&self) -> usize {$/;"	P	interface:Source
count	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^    fn count(&self) -> usize {$/;"	f
count	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^    fn count() {$/;"	f	module:tests
count	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^    fn count(self) -> usize {$/;"	P	implementation:ColumnIter
count	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^    fn count(self) -> usize {$/;"	P	implementation:ColumnIterMut
count	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^    fn count(self) -> usize {$/;"	P	implementation:RowIter
count	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^    fn count(self) -> usize {$/;"	P	implementation:RowIterMut
count_new_keys	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs	/^fn count_new_keys<I, K>(mut used: HashMap<K, ()>, iterable: I) -> usize$/;"	f
count_ones	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/int.rs	/^    fn count_ones(self) -> u32;$/;"	P	interface:PrimInt
count_zeros	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/int.rs	/^    fn count_zeros(self) -> u32;$/;"	P	interface:PrimInt
crand	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^mod crand;$/;"	n
cross	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn cross<R2, C2, SB>(&self, b: &Matrix<N, R2, C2, SB>) -> MatrixCross<N, R, C, R2, C2>$/;"	P	implementation:Matrix
cross_matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn cross_matrix(&self) -> MatrixN<N, U3> {$/;"	f
cs_matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/mod.rs	/^mod cs_matrix;$/;"	n
cs_matrix_cholesky	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/mod.rs	/^mod cs_matrix_cholesky;$/;"	n
cs_matrix_conversion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/mod.rs	/^mod cs_matrix_conversion;$/;"	n
cs_matrix_from_matrix_market	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/io/matrix_market.rs	/^pub fn cs_matrix_from_matrix_market<N: RealField, P: AsRef<Path>>(path: P) -> Option<CsMatrix<N>/;"	f
cs_matrix_from_matrix_market_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/io/matrix_market.rs	/^pub fn cs_matrix_from_matrix_market_str<N: RealField>(data: &str) -> Option<CsMatrix<N>> {$/;"	f
cs_matrix_ops	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/mod.rs	/^mod cs_matrix_ops;$/;"	n
cs_matrix_solve	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/mod.rs	/^mod cs_matrix_solve;$/;"	n
cs_utils	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/mod.rs	/^pub(crate) mod cs_utils;$/;"	n
cumsum	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_utils.rs	/^pub fn cumsum<D: Dim>(a: &mut VectorN<usize, D>, b: &mut VectorN<usize, D>) -> usize$/;"	f
cumulative_weights	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/mod.rs	/^    cumulative_weights: Vec<X>,$/;"	m	struct:WeightedIndex
cur	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs	/^    cur: Option<I::Item>,$/;"	m	struct:MultiProductIter
cur	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs	/^    cur: usize,$/;"	m	struct:TupleBuffer
curr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^    curr: usize,$/;"	m	struct:ColumnIter
curr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^    curr: usize,$/;"	m	struct:ColumnIterMut
curr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^    curr: usize,$/;"	m	struct:RowIter
curr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^    curr: usize,$/;"	m	struct:RowIterMut
curr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    curr: usize,$/;"	m	struct:ColumnEntries
curr_iterator	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs	/^    fn curr_iterator(&self) -> Vec<I::Item> {$/;"	f
current	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations_with_replacement.rs	/^    fn current(&self) -> Vec<I::Item> {$/;"	f
current_elt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    current_elt: Option<I::Item>,$/;"	m	struct:GroupInner
current_key	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    current_key: Option<K>,$/;"	m	struct:GroupInner
custom_format	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    pub custom_format: Option<Box<Fn(&mut Formatter, &Record) -> io::Result<()> + Sync + Send>>,$/;"	m	struct:Builder
cycle_to_yo	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^pub fn cycle_to_yo(cycle: u32) -> (u32, u32) {$/;"	f
d	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs	/^    pub fn d(&self) -> MatrixN<N, DimMinimum<R, C>>$/;"	f
d	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    d: f64,$/;"	m	struct:GammaLargeShape
d128	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/operator.rs	/^impl TwoSidedInverse<Multiplicative> for d128 {$/;"	c
data	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    data: T,$/;"	m	struct:GenericArrayImplOdd
data	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    data: U::ArrayType,$/;"	m	struct:GenericArray
data	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^    data: GenericArray<N, Prod<R::Value, C::Value>>,$/;"	m	struct:ArrayStorage
data	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub data: S,$/;"	m	struct:Matrix
data	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^    data: Vec<N>,$/;"	m	struct:VecStorage
data	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    data: &'a [u8],$/;"	m	struct:InstPtrs
data	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    data: Arc<[u8]>,$/;"	m	struct:State
date	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    date: NaiveDate,$/;"	m	struct:Date
date	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    pub fn date(&self) -> Date<Tz> {$/;"	P	implementation:DateTime
date	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    date: Option<NaiveDate>,$/;"	m	struct:DelayedFormat
date	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    mod date;$/;"	n	module:naive
date	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^mod date;$/;"	n
date	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    date: NaiveDate,$/;"	m	struct:NaiveDateTime
date	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    pub fn date(&self) -> NaiveDate {$/;"	P	implementation:NaiveDateTime
datetime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    datetime: NaiveDateTime,$/;"	m	struct:DateTime
datetime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    mod datetime;$/;"	n	module:naive
datetime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^mod datetime;$/;"	n
datetime_from_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^    fn datetime_from_str(&self, s: &str, fmt: &str) -> ParseResult<DateTime<Self>> {$/;"	P	interface:TimeZone
datetime_to_timespec	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/local.rs	/^fn datetime_to_timespec(d: &NaiveDateTime, local: bool) -> oldtime::Timespec {$/;"	f
day	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    #[inline] fn day(&self) -> u32 { self.naive_local().day() }$/;"	P	implementation:Date
day	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    #[inline] fn day(&self) -> u32 { self.naive_local().day() }$/;"	P	implementation:DateTime
day	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub day: Option<u32>,$/;"	m	struct:Parsed
day	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    fn day(&self) -> u32;$/;"	P	interface:Datelike
day	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn day(&self) -> u32 {$/;"	P	implementation:NaiveDate
day	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn day(&self) -> u32 {$/;"	P	implementation:NaiveDateTime
day	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    pub fn day(&self) -> u32 {$/;"	P	implementation:Mdf
day0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    #[inline] fn day0(&self) -> u32 { self.naive_local().day0() }$/;"	P	implementation:Date
day0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    #[inline] fn day0(&self) -> u32 { self.naive_local().day0() }$/;"	P	implementation:DateTime
day0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    fn day0(&self) -> u32;$/;"	P	interface:Datelike
day0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn day0(&self) -> u32 {$/;"	P	implementation:NaiveDate
day0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn day0(&self) -> u32 {$/;"	P	implementation:NaiveDateTime
days	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    pub fn days(days: i64) -> Duration {$/;"	P	implementation:Duration
debug	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        fn debug(&mut self, v: &fmt::Debug) -> Result<(), Error> {$/;"	P	implementation:fmt_support::FmtVisitor
debug	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        fn debug(&mut self, v: &fmt::Debug) -> Result<(), Error> {$/;"	P	implementation:sval_support::SvalVisitor
debug	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    fn debug(&mut self, v: &fmt::Debug) -> Result<(), Error>;$/;"	P	interface:Visitor
debug	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/test.rs	/^            fn debug(&mut self, v: &fmt::Debug) -> Result<(), Error> {$/;"	P	implementation:Value::to_token::TestVisitor
debug	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/macros.rs	/^macro_rules! debug {$/;"	M
debug	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs	/^pub mod debug;$/;"	n
debug	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^macro_rules! debug { ($($x:tt)*) => ($/;"	M
debug_fmt_fields	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/impl_macros.rs	/^macro_rules! debug_fmt_fields {$/;"	M
decode	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^        fn decode<D: Decoder>(d: &mut D) -> Result<DateTime<FixedOffset>, D::Error> {$/;"	P	implementation:rustc_serialize::DateTime
decode	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^        fn decode<D: Decoder>(d: &mut D) -> Result<DateTime<Local>, D::Error> {$/;"	P	implementation:rustc_serialize::DateTime
decode	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^        fn decode<D: Decoder>(d: &mut D) -> Result<DateTime<Utc>, D::Error> {$/;"	P	implementation:rustc_serialize::DateTime
decode	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^        fn decode<D: Decoder>(d: &mut D) -> Result<TsSeconds<FixedOffset>, D::Error> {$/;"	P	implementation:rustc_serialize::TsSeconds
decode	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^        fn decode<D: Decoder>(d: &mut D) -> Result<TsSeconds<Local>, D::Error> {$/;"	P	implementation:rustc_serialize::TsSeconds
decode	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^        fn decode<D: Decoder>(d: &mut D) -> Result<TsSeconds<Utc>, D::Error> {$/;"	P	implementation:rustc_serialize::TsSeconds
decode	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^        fn decode<D: Decoder>(d: &mut D) -> Result<NaiveDate, D::Error> {$/;"	P	implementation:rustc_serialize::NaiveDate
decode	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^        fn decode<D: Decoder>(d: &mut D) -> Result<NaiveDateTime, D::Error> {$/;"	P	implementation:rustc_serialize::NaiveDateTime
decode	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^        fn decode<D: Decoder>(d: &mut D) -> Result<TsSeconds, D::Error> {$/;"	P	implementation:rustc_serialize::TsSeconds
decode	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^        fn decode<D: Decoder>(d: &mut D) -> Result<NaiveTime, D::Error> {$/;"	P	implementation:rustc_serialize::NaiveTime
decode_last_utf8	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/utf8.rs	/^pub fn decode_last_utf8(src: &[u8]) -> Option<(char, usize)> {$/;"	f
decode_utf8	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/utf8.rs	/^pub fn decode_utf8(src: &[u8]) -> Option<(char, usize)> {$/;"	f
decompose	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/id.rs	/^    fn decompose(&self) -> (Id, Id, Id, Id) {$/;"	P	implementation:Id
decompose	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn decompose($/;"	P	interface:AffineTransformation
decompose	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn decompose(&self) -> (Id, Id, R, Id) {$/;"	f
decompose	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alga.rs	/^    fn decompose(&self) -> (Self::Translation, R, Id, R) {$/;"	f
decompose	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    fn decompose(&self) -> (Id, Self, Id, Self) {$/;"	P	implementation:UnitQuaternion
decompose	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alga.rs	/^    fn decompose(&self) -> (Id, Self, Id, Self) {$/;"	f
decompose	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alga.rs	/^    fn decompose(&self) -> (Translation<N, D>, R, N, R) {$/;"	f
decompose	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alga.rs	/^    fn decompose(&self) -> (Self, Id, Id, Id) {$/;"	f
decompose	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_alga.rs	/^    fn decompose(&self) -> (Id, Self, Id, Self) {$/;"	f
decompose_2x2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs	/^fn decompose_2x2<N: ComplexField, D: Dim>($/;"	f
decompose_left_looking	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_cholesky.rs	/^    pub fn decompose_left_looking(&mut self, values: &[N]) -> bool {$/;"	f
decompose_up_looking	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_cholesky.rs	/^    pub fn decompose_up_looking(&mut self, values: &[N]) -> bool {$/;"	f
decrease_masked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/utils.rs	/^    fn decrease_masked(self, mask: Self::Mask) -> Self;$/;"	P	interface:FloatSIMDUtils
dedup	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub fn dedup<I>(iter: I) -> Dedup<I>$/;"	f
dedup	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn dedup(self) -> Dedup<Self>$/;"	P	interface:Itertools
dedup	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    pub(crate) fn dedup(&mut self)$/;"	f
dedup_by	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub fn dedup_by<I, Pred>(mut iter: I, dedup_pred: Pred) -> DedupBy<I, Pred>$/;"	f
dedup_by	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn dedup_by<Cmp>(self, cmp: Cmp) -> DedupBy<Self, Cmp>$/;"	P	interface:Itertools
dedup_pair	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    fn dedup_pair(&mut self, a: &T, b: &T) -> bool {$/;"	P	implementation:DedupEq
dedup_pair	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    fn dedup_pair(&mut self, a: &T, b: &T) -> bool {$/;"	P	implementation:F
dedup_pair	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    fn dedup_pair(&mut self, a: &T, b: &T) -> bool;$/;"	P	interface:DedupPredicate
dedup_pred	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    dedup_pred: Pred,$/;"	m	struct:DedupBy
default	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    fn default() -> Parsed {$/;"	P	implementation:Parsed
default	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^    fn default() -> Self {$/;"	P	implementation:Builder
default	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    fn default() -> Self {$/;"	P	implementation:Builder
default	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    fn default() -> Self {$/;"	P	implementation:TimestampPrecision
default	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^    fn default() -> Self {$/;"	P	implementation:Builder
default	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^    fn default() -> Self {$/;"	P	implementation:Target
default	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^    fn default() -> Self {$/;"	P	implementation:WriteStyle
default	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    default: Option<Cow<'a, str>>,$/;"	m	struct:Var
default	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    fn default() -> Self {$/;"	P	implementation:Env
default	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/impls.rs	/^    fn default() -> Self {$/;"	f
default	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/entropy.rs	/^    fn default() -> Self {$/;"	P	implementation:EntropyRng
default	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/thread.rs	/^    fn default() -> ThreadRng {$/;"	P	implementation:ThreadRng
default	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_builder.rs	/^    fn default() -> Self {$/;"	P	implementation:RegexOptions
default_allocator	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs	/^pub mod default_allocator;$/;"	n
default_epsilon	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^    fn default_epsilon() -> Self::Epsilon {$/;"	P	implementation:Id
default_epsilon	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/wrapper.rs	/^    fn default_epsilon() -> Self::Epsilon {$/;"	P	implementation:Wrapper
default_epsilon	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    fn default_epsilon() -> Self::Epsilon {$/;"	f
default_epsilon	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^    fn default_epsilon() -> Self::Epsilon {$/;"	f
default_epsilon	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^    fn default_epsilon() -> Self::Epsilon {$/;"	f
default_epsilon	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    fn default_epsilon() -> Self::Epsilon {$/;"	P	implementation:Quaternion
default_epsilon	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    fn default_epsilon() -> Self::Epsilon {$/;"	P	implementation:UnitQuaternion
default_epsilon	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^    fn default_epsilon() -> Self::Epsilon {$/;"	f
default_epsilon	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^    fn default_epsilon() -> Self::Epsilon {$/;"	f
default_epsilon	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^    fn default_epsilon() -> Self::Epsilon {$/;"	f
default_epsilon	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs	/^    fn default_epsilon() -> Self::Epsilon {$/;"	f
default_epsilon	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs	/^    fn default_epsilon() -> Self::Epsilon {$/;"	P	implementation:UnitComplex
default_filter_or	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    pub fn default_filter_or<V>(mut self, default: V) -> Self$/;"	P	implementation:Env
default_format	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    pub fn default_format(&mut self) -> &mut Self {$/;"	P	implementation:Builder
default_level_style	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    pub fn default_level_style(&self, level: Level) -> Style {$/;"	P	implementation:Formatter
default_max_relative	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^    fn default_max_relative() -> Self::Epsilon {$/;"	P	implementation:Id
default_max_relative	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/wrapper.rs	/^    fn default_max_relative() -> Self::Epsilon {$/;"	P	implementation:Wrapper
default_max_relative	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    fn default_max_relative() -> Self::Epsilon {$/;"	f
default_max_relative	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^    fn default_max_relative() -> Self::Epsilon {$/;"	f
default_max_relative	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^    fn default_max_relative() -> Self::Epsilon {$/;"	f
default_max_relative	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    fn default_max_relative() -> Self::Epsilon {$/;"	P	implementation:Quaternion
default_max_relative	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    fn default_max_relative() -> Self::Epsilon {$/;"	P	implementation:UnitQuaternion
default_max_relative	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^    fn default_max_relative() -> Self::Epsilon {$/;"	f
default_max_relative	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^    fn default_max_relative() -> Self::Epsilon {$/;"	f
default_max_relative	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^    fn default_max_relative() -> Self::Epsilon {$/;"	f
default_max_relative	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs	/^    fn default_max_relative() -> Self::Epsilon {$/;"	f
default_max_relative	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs	/^    fn default_max_relative() -> Self::Epsilon {$/;"	P	implementation:UnitComplex
default_max_ulps	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^    fn default_max_ulps() -> u32 {$/;"	P	implementation:Id
default_max_ulps	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/wrapper.rs	/^    fn default_max_ulps() -> u32 {$/;"	P	implementation:Wrapper
default_max_ulps	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    fn default_max_ulps() -> u32 {$/;"	f
default_max_ulps	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^    fn default_max_ulps() -> u32 {$/;"	f
default_max_ulps	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^    fn default_max_ulps() -> u32 {$/;"	f
default_max_ulps	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    fn default_max_ulps() -> u32 {$/;"	P	implementation:Quaternion
default_max_ulps	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    fn default_max_ulps() -> u32 {$/;"	P	implementation:UnitQuaternion
default_max_ulps	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^    fn default_max_ulps() -> u32 {$/;"	f
default_max_ulps	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^    fn default_max_ulps() -> u32 {$/;"	f
default_max_ulps	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^    fn default_max_ulps() -> u32 {$/;"	f
default_max_ulps	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs	/^    fn default_max_ulps() -> u32 {$/;"	f
default_max_ulps	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs	/^    fn default_max_ulps() -> u32 {$/;"	P	implementation:UnitComplex
default_styled_level	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    pub fn default_styled_level(&self, level: Level) -> StyledValue<'static, Level> {$/;"	P	implementation:Formatter
default_write_style_or	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    pub fn default_write_style_or<V>(mut self, default: V) -> Self$/;"	P	implementation:Env
define_builder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_builder.rs	/^macro_rules! define_builder {$/;"	M
define_set	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_set.rs	/^macro_rules! define_set {$/;"	M
define_set_builder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_builder.rs	/^macro_rules! define_set_builder {$/;"	M
deg	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    pub deg: P::Var,$/;"	m	struct:Term
deg	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    pub fn deg(&self) -> usize {$/;"	P	implementation:Poly
delimit_subproblem	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs	/^    fn delimit_subproblem(t: &mut MatrixN<N, D>, eps: N::RealField, end: usize) -> (usize, usize/;"	f
delimit_subproblem	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs	/^    fn delimit_subproblem($/;"	f
delimit_subproblem	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs	/^    fn delimit_subproblem($/;"	f
denom	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    denom: ChiSquared,$/;"	m	struct:FisherF
dense	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    dense: Vec<SuffixCacheEntry>,$/;"	m	struct:SuffixCache
dense	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    dense: Vec<u8>,$/;"	m	struct:SingleByteSet
dense	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/sparse.rs	/^    dense: Vec<usize>,$/;"	m	struct:SparseSet
deref	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^        fn deref(&self) -> &Self::Target {$/;"	P	implementation:rustc_serialize::TsSeconds
deref	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^        fn deref(&self) -> &Self::Target {$/;"	P	implementation:rustc_serialize::TsSeconds
deref	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    fn deref(&self) -> &[T] {$/;"	f
deref	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^    fn deref(&self) -> &Self::Target {$/;"	f
deref	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs	/^    fn deref(&self) -> &T {$/;"	P	implementation:Unit
deref	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_coordinates.rs	/^    fn deref(&self) -> &Self::Target {$/;"	P	implementation:Quaternion
deref	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    fn deref(&self) -> &[u8] {$/;"	P	implementation:ByteInput
deref	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    fn deref(&self) -> &[u8] {$/;"	P	implementation:CharInput
deref	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    fn deref(&self) -> &Self::Target {$/;"	P	implementation:Program
deref	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/sparse.rs	/^    fn deref(&self) -> &Self::Target {$/;"	P	implementation:SparseSet
deref_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs	/^macro_rules! deref_impl($/;"	M
deref_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_coordinates.rs	/^macro_rules! deref_impl($/;"	M
deref_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_coordinates.rs	/^macro_rules! deref_impl($/;"	M
deref_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    fn deref_mut(&mut self) -> &mut [T] {$/;"	f
deref_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^    fn deref_mut(&mut self) -> &mut Self::Target {$/;"	f
deref_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_coordinates.rs	/^    fn deref_mut(&mut self) -> &mut Self::Target {$/;"	P	implementation:Quaternion
derive_alga	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga_derive-0.9.2/src/lib.rs	/^pub fn derive_alga(input: TokenStream) -> TokenStream {$/;"	f
description	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:ParseError
description	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:OutOfRangeError
description	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/error.rs	/^        fn description(&self) -> &str {$/;"	P	implementation:std_support::Error
description	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:ParseLevelError
description	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:SetLoggerError
description	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:ParseComplexError
description	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/error.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:Error
deserialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:serde::DateTime
deserialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^        pub fn deserialize<'de, D>(d: D) -> Result<DateTime<Utc>, D::Error>$/;"	f	module:serde::ts_milliseconds
deserialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^        pub fn deserialize<'de, D>(d: D) -> Result<DateTime<Utc>, D::Error>$/;"	f	module:serde::ts_nanoseconds
deserialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^        pub fn deserialize<'de, D>(d: D) -> Result<DateTime<Utc>, D::Error>$/;"	f	module:serde::ts_seconds
deserialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^        pub fn deserialize<'de, D>(d: D) -> Result<Option<DateTime<Utc>>, D::Error>$/;"	f	module:serde::ts_milliseconds_option
deserialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^        pub fn deserialize<'de, D>(d: D) -> Result<Option<DateTime<Utc>>, D::Error>$/;"	f	module:serde::ts_nanoseconds_option
deserialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^        pub fn deserialize<'de, D>(d: D) -> Result<Option<DateTime<Utc>>, D::Error>$/;"	f	module:serde::ts_seconds_option
deserialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:weekday_serde::Weekday
deserialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:serde::NaiveDate
deserialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:serde::NaiveDateTime
deserialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^        pub fn deserialize<'de, D>(d: D) -> Result<NaiveDateTime, D::Error>$/;"	f	module:serde::ts_milliseconds
deserialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^        pub fn deserialize<'de, D>(d: D) -> Result<NaiveDateTime, D::Error>$/;"	f	module:serde::ts_nanoseconds
deserialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^        pub fn deserialize<'de, D>(d: D) -> Result<NaiveDateTime, D::Error>$/;"	f	module:serde::ts_seconds
deserialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:serde::NaiveTime
deserialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/impl_serde.rs	/^    fn deserialize<D>(deserializer: D) -> Result<GenericArray<T, N>, D::Error>$/;"	f
deserialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^            fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:Level::deserialize::LevelIdentifier
deserialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^            fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:LevelFilter::deserialize::LevelFilterIdentifier
deserialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:Level
deserialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:LevelFilter
deserialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:Dynamic
deserialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:Unit
deserialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^    fn deserialize<Des>(deserializer: Des) -> Result<Self, Des::Error>$/;"	P	implementation:Orthographic3
deserialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^    fn deserialize<Des>(deserializer: Des) -> Result<Self, Des::Error>$/;"	P	implementation:Perspective3
deserialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^    fn deserialize<Des>(deserializer: Des) -> Result<Self, Des::Error>$/;"	f
deserialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    fn deserialize<Des>(deserializer: Des) -> Result<Self, Des::Error>$/;"	f
deserialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^    fn deserialize<Des>(deserializer: Des) -> Result<Self, Des::Error>$/;"	f
deserialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^    fn deserialize<Des>(deserializer: Des) -> Result<Self, Des::Error>$/;"	f
deserialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs	/^    fn deserialize<Des>(deserializer: Des) -> Result<Self, Des::Error>$/;"	f
deserialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
determinant	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/matrix.rs	/^    fn determinant(&self) -> Self::Field;$/;"	P	interface:SquareMatrix
determinant	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/determinant.rs	/^    pub fn determinant(&self) -> N$/;"	P	implementation:SquareMatrix
determinant	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs	/^    pub fn determinant(&self) -> N {$/;"	f
determinant	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs	/^    pub fn determinant(&self) -> N {$/;"	f
determinant	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/mod.rs	/^mod determinant;$/;"	n
determinant	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs	/^    pub fn determinant<N: One + ClosedNeg>(&self) -> N {$/;"	f
dfa	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    pub fn dfa(mut self, yes: bool) -> Self {$/;"	P	implementation:Compiler
dfa	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    dfa: Program,$/;"	m	struct:ExecReadOnly
dfa	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    pub dfa: dfa::Cache,$/;"	m	struct:ProgramCacheInner
dfa	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/lib.rs	/^mod dfa;$/;"	n
dfa_reverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    dfa_reverse: Program,$/;"	m	struct:ExecReadOnly
dfa_reverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    pub dfa_reverse: dfa::Cache,$/;"	m	struct:ProgramCacheInner
dfa_size_limit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    pub dfa_size_limit: usize,$/;"	m	struct:Program
dfa_size_limit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_builder.rs	/^    pub dfa_size_limit: usize,$/;"	m	struct:RegexOptions
dft	/Users/williamcashman/Honours/Program/n_poly/src/fft.rs	/^pub fn dft<F: SupportsFFT>(signal: &mut [F], inv: bool) {$/;"	f
diag	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs	/^    diag: VectorN<N, DimMinimum<R, C>>,$/;"	m	struct:QR
diagonal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/matrix.rs	/^    fn diagonal(&self) -> Self::Vector;$/;"	P	interface:SquareMatrix
diagonal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn diagonal(&self) -> VectorN<N, D>$/;"	P	implementation:SquareMatrix
diagonal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs	/^    diagonal: VectorN<N, DimMinimum<R, C>>,$/;"	m	struct:Bidiagonal
diagonal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs	/^    pub fn diagonal(&self) -> VectorN<N::RealField, DimMinimum<R, C>>$/;"	f
diagonal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs	/^    pub fn diagonal(&self) -> VectorN<N::RealField, D>$/;"	f
diff	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^mod diff;$/;"	n
diff_with	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/diff.rs	/^pub fn diff_with<I, J, F>(i: I, j: J, is_equal: F)$/;"	f
digits	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/scan.rs	/^    fn digits(s: &str) -> ParseResult<(u8, u8)> {$/;"	f	function:timezone_offset_internal
dim	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^    fn dim() -> usize {$/;"	P	interface:DimName
dim_ops	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^macro_rules! dim_ops($/;"	M
dimension	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/matrix.rs	/^    fn dimension(&self) -> usize {$/;"	P	interface:SquareMatrix
dimension	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/vector.rs	/^    fn dimension() -> usize;$/;"	P	interface:FiniteDimVectorSpace
dimension	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^    fn dimension() -> usize {$/;"	f
dimension	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs	/^pub mod dimension;$/;"	n
dimension	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    fn dimension() -> usize {$/;"	P	implementation:Quaternion
dimrange_range_usize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^fn dimrange_range_usize() {$/;"	f
dimrange_rangefrom_dimname	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^fn dimrange_rangefrom_dimname() {$/;"	f
dimrange_rangefrom_usize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^fn dimrange_rangefrom_usize() {$/;"	f
dimrange_rangefull	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^fn dimrange_rangefull() {$/;"	f
dimrange_rangeinclusive_usize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^fn dimrange_rangeinclusive_usize() {$/;"	f
dimrange_rangeto_usize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^fn dimrange_rangeto_usize() {$/;"	f
dimrange_rangetoinclusive_usize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^fn dimrange_rangetoinclusive_usize() {$/;"	f
dimrange_usize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^fn dimrange_usize() {$/;"	f
directives	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^    directives: Vec<Directive>,$/;"	m	struct:Builder
directives	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^    directives: Vec<Directive>,$/;"	m	struct:Filter
dirichlet	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^#[cfg(feature = "std")] mod dirichlet;$/;"	n
display	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    fn display(&mut self, v: &fmt::Display) -> Result<(), Error> {$/;"	P	interface:Visitor
display_test	/Users/williamcashman/Honours/Program/n_poly/src/polyu.rs	/^    fn display_test() {$/;"	f	module:tests
distance	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs	/^pub fn distance<N: SimdComplexField, D: DimName>($/;"	f
distance_squared	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs	/^pub fn distance_squared<N: SimdComplexField, D: DimName>($/;"	f
distr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^    distr: D,$/;"	m	struct:DistIter
distributions	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^pub mod distributions;$/;"	n
div	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^    fn div(self, _: Id) -> Id {$/;"	P	implementation:Id
div	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/wrapper.rs	/^    fn div(self, lhs: Self) -> Self {$/;"	f
div	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^mod div;$/;"	n
div	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    fn div(self, rhs: i32) -> Duration {$/;"	P	implementation:Duration
div	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs	/^    fn div(self, rhs: &'b UnitComplex<N>) -> Self::Output {$/;"	f
div	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs	/^    fn div(self, rhs: Self) -> Self::Output {$/;"	f
div	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs	/^    fn div(self, rhs: UnitComplex<N>) -> Self::Output {$/;"	f
div	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn div(self, other: Self) -> Self::Output {$/;"	P	implementation:Complex
div	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn div(self, other: T) -> Self::Output {$/;"	P	implementation:Complex
div	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^    fn div(self, _: Rhs) -> Self::Output {$/;"	P	implementation:ATerm
div	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^    fn div(self, rhs: Rhs) -> Self::Output {$/;"	f
div	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn div(self, _: I) -> Self::Output {$/;"	P	implementation:Z0
div	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn div(self, _: UInt<Ur, Br>) -> Self::Output {$/;"	P	implementation:UTerm
div	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn div(self, rhs: UInt<Ur, Br>) -> Self::Output {$/;"	f
div	/Users/williamcashman/Honours/Program/n_poly/src/algebras/complex.rs	/^    fn div(&self, other: &Self) -> Option<CC> {$/;"	P	implementation:CC
div	/Users/williamcashman/Honours/Program/n_poly/src/algebras/mod.rs	/^    fn div(&self, other: &Self) -> Option<Self>;$/;"	P	interface:Field
div	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    pub fn div(&self, other: Self) -> Option<Self> {$/;"	P	implementation:Term
div	/Users/williamcashman/Honours/Program/n_poly/src/algebras/real.rs	/^    fn div(&self, other: &Self) -> Option<RR> {$/;"	P	implementation:RR
div_assign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^    fn div_assign(&mut self, _: Id) {$/;"	P	implementation:Id
div_assign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs	/^    fn div_assign(&mut self, rhs: &'b Rotation<N, U2>) {$/;"	f
div_assign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs	/^    fn div_assign(&mut self, rhs: &'b UnitComplex<N>) {$/;"	f
div_assign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs	/^    fn div_assign(&mut self, rhs: Rotation<N, U2>) {$/;"	f
div_assign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs	/^    fn div_assign(&mut self, rhs: UnitComplex<N>) {$/;"	f
div_assign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn div_assign(&mut self, other: Self) {$/;"	P	implementation:opassign::Complex
div_assign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn div_assign(&mut self, other: T) {$/;"	P	implementation:opassign::Complex
div_floor_64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^fn div_floor_64(this: i64, other: i64) -> i64 {$/;"	f
div_mod_floor_64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^fn div_mod_floor_64(this: i64, other: i64) -> (i64, i64) {$/;"	f
div_rem_64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^fn div_rem_64(this: i64, other: i64) -> (i64, i64) {$/;"	f
divby2	/Users/williamcashman/Honours/Program/n_poly/src/algebras/complex.rs	/^    fn divby2(&mut self, n: usize) {$/;"	P	implementation:CC
divby2	/Users/williamcashman/Honours/Program/n_poly/src/fft.rs	/^    fn divby2(&mut self, n: usize);$/;"	P	interface:SupportsFFT
divides	/Users/williamcashman/Honours/Program/n_poly/src/algebras/integers.rs	/^    fn divides(&self, other: &Self) -> Option<bool> {$/;"	P	implementation:ZZ
divides	/Users/williamcashman/Honours/Program/n_poly/src/algebras/mod.rs	/^    fn divides(&self, other: &Self) -> Option<bool> {$/;"	P	interface:EuclideanDomain
divides	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    fn divides(&self, other: &Self) -> Option<bool>;$/;"	P	interface:Variate
divides	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    pub fn divides(&self, other: &Self) -> Option<bool> {$/;"	P	implementation:Term
divides	/Users/williamcashman/Honours/Program/n_poly/src/polym.rs	/^    fn divides(&self, other: &Self) -> Option<bool> {$/;"	P	implementation:MultiIndex
divides	/Users/williamcashman/Honours/Program/n_poly/src/polyu.rs	/^    fn divides(&self, other: &Self) -> Option<bool> {$/;"	P	implementation:UniIndex
division_test	/Users/williamcashman/Honours/Program/n_poly/src/ideals/groebner_basis.rs	/^    fn division_test() {$/;"	f	module:tests
do_complex_eigenvalues	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs	/^    fn do_complex_eigenvalues(t: &MatrixN<N, D>, out: &mut VectorN<NumComplex<N>, D>)$/;"	f
do_decompose	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs	/^    fn do_decompose($/;"	f
do_decompose	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs	/^    fn do_decompose($/;"	f
do_eigenvalues	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs	/^    fn do_eigenvalues(t: &MatrixN<N, D>, out: &mut VectorN<N, D>) -> bool {$/;"	f
do_inverse4	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/inverse.rs	/^fn do_inverse4<N: ComplexField, D: Dim, S: StorageMut<N, D, D>>($/;"	f
doctests_only	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/arr.rs	/^mod doctests_only {$/;"	n
dof	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    dof: f64,$/;"	m	struct:StudentT
dof_ratio	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    dof_ratio: f64,$/;"	m	struct:FisherF
done	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    done: bool,$/;"	m	struct:GroupInner
done	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lazy_buffer.rs	/^    done: bool,$/;"	m	struct:LazyBuffer
dot	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/vector.rs	/^    fn dot(&self, other: &Self) -> Self::Field;$/;"	P	interface:FiniteDimVectorSpace
dot	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^    pub fn dot<R2: Dim, C2: Dim, SB>(&self, rhs: &Matrix<N, R2, C2, SB>) -> N$/;"	f
dot	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^    fn dot(&self, other: &Self) -> N {$/;"	f
dot	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn dot(&self, rhs: &Self) -> N {$/;"	f
dot	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    fn dot(&self, other: &Self) -> N {$/;"	P	implementation:Quaternion
dot_matches_new_line	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_builder.rs	/^    pub dot_matches_new_line: bool,$/;"	m	struct:RegexOptions
dotc	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^    pub fn dotc<R2: Dim, C2: Dim, SB>(&self, rhs: &Matrix<N, R2, C2, SB>) -> N$/;"	f
dotx	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^    fn dotx<R2: Dim, C2: Dim, SB>($/;"	f
drop	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/iter.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    fn drop(&mut self) {$/;"	P	implementation:ArrayBuilder
drop	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    fn drop(&mut self) {$/;"	P	implementation:ArrayConsumer
drop	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/cache.rs	/^        fn drop(&mut self) {$/;"	P	implementation:imp::CachedGuard
drop_group	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    fn drop_group(&mut self, client: usize) {$/;"	f
drop_group	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    fn drop_group(&self, client: usize) {$/;"	f
dropped_group	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    dropped_group: usize,$/;"	m	struct:GroupInner
dropping	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn dropping(mut self, n: usize) -> Self$/;"	P	interface:Itertools
dropping_back	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn dropping_back(mut self, n: usize) -> Self$/;"	P	interface:Itertools
e	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/real.rs	/^    fn e() -> Self;$/;"	P	interface:RealField
earliest	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^    pub fn earliest(self) -> Option<T> {$/;"	P	implementation:LocalResult
east	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/fixed.rs	/^    pub fn east(secs: i32) -> FixedOffset {$/;"	P	implementation:FixedOffset
east_opt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/fixed.rs	/^    pub fn east_opt(secs: i32) -> Option<FixedOffset> {$/;"	P	implementation:FixedOffset
edition	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs	/^mod edition;$/;"	n
eigenvalues	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/eigen.rs	/^    pub eigenvalues: VectorN<N, D>,$/;"	m	struct:Eigen
eigenvalues	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs	/^    pub fn eigenvalues(&self) -> Option<VectorN<N, D>> {$/;"	f
eigenvalues	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs	/^    pub eigenvalues: VectorN<N::RealField, D>,$/;"	m	struct:SymmetricEigen
eigenvectors	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/eigen.rs	/^    pub eigenvectors: MatrixN<N, D>,$/;"	m	struct:Eigen
eigenvectors	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs	/^    pub eigenvectors: MatrixN<N, D>,$/;"	m	struct:SymmetricEigen
either_or_both	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^mod either_or_both;$/;"	n
element	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/intersperse.rs	/^    element: I::Item,$/;"	m	struct:Intersperse
elementwise_add	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    pub fn elementwise_add(polya: &Self, polyb: &Self) -> Self {$/;"	P	implementation:Poly
elementwise_map	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    pub fn elementwise_map(&self, map: impl Fn(&Term<P>) -> Term<P>) -> Self {$/;"	P	implementation:Poly
elementwise_map_mut	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    pub fn elementwise_map_mut(&mut self, map: impl Fn(&mut Term<P>)) {$/;"	P	implementation:Poly
elimination_tree	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_cholesky.rs	/^    fn elimination_tree<S: CsStorage<N, D, D>>(m: &CsMatrix<N, D, D, S>) -> Vec<usize> {$/;"	f
elt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/repeatn.rs	/^    elt: Option<A>,$/;"	m	struct:RepeatN
empty	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    fn empty() -> FreqyPacked {$/;"	P	implementation:FreqyPacked
empty	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    pub fn empty() -> Self {$/;"	P	implementation:LiteralSearcher
empty	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/mod.rs	/^        pub fn empty() -> Self {$/;"	P	implementation:imp::LiteralSearcher
empty_trait_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/sign.rs	/^macro_rules! empty_trait_impl {$/;"	M
enabled	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^    pub fn enabled(&self, metadata: &Metadata) -> bool {$/;"	P	implementation:Filter
enabled	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^fn enabled(directives: &[Directive], level: Level, target: &str) -> bool {$/;"	f
enabled	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    fn enabled(&self, metadata: &Metadata) -> bool {$/;"	P	implementation:Logger
enabled	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn enabled(&self, _: &Metadata) -> bool {$/;"	P	implementation:NopLogger
enabled	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn enabled(&self, metadata: &Metadata) -> bool;$/;"	P	interface:Log
encode	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^        fn encode<S: Encoder>(&self, s: &mut S) -> Result<(), S::Error> {$/;"	P	implementation:rustc_serialize::DateTime
encode	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^        fn encode<S: Encoder>(&self, s: &mut S) -> Result<(), S::Error> {$/;"	P	implementation:rustc_serialize::NaiveDate
encode	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^        fn encode<S: Encoder>(&self, s: &mut S) -> Result<(), S::Error> {$/;"	P	implementation:rustc_serialize::NaiveDateTime
encode	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^        fn encode<S: Encoder>(&self, s: &mut S) -> Result<(), S::Error> {$/;"	P	implementation:rustc_serialize::NaiveTime
end	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^    fn end(&self, _: D) -> usize {$/;"	P	implementation:Range
end	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^    fn end(&self, _: D) -> usize {$/;"	P	implementation:RangeTo
end	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^    fn end(&self, _: D) -> usize {$/;"	P	implementation:usize
end	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^    fn end(&self, dim: D) -> usize {$/;"	P	implementation:RangeFrom
end	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^    fn end(&self, dim: D) -> usize {$/;"	P	implementation:RangeFull
end	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^    fn end(&self, shape: D) -> usize;$/;"	P	interface:SliceRange
end	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    end: u8,$/;"	m	struct:SuffixCacheKey
end	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    end: bool,$/;"	m	struct:EmptyFlags
end	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/expand.rs	/^    end: usize,$/;"	m	struct:CaptureRef
end	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    pub end: u8,$/;"	m	struct:InstBytes
end	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    end: usize,$/;"	m	struct:Match
end	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    pub fn end(&self) -> usize {$/;"	P	implementation:Match
end	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    end: usize,$/;"	m	struct:Match
end	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    pub fn end(&self) -> usize {$/;"	P	implementation:Match
end_line	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    end_line: bool,$/;"	m	struct:EmptyFlags
entomb	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^    unsafe fn entomb<W: Write>(&self, writer: &mut W) -> IOResult<()> {$/;"	f
entomb	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    unsafe fn entomb<W: Write>(&self, writer: &mut W) -> IOResult<()> {$/;"	P	implementation:Matrix
entomb	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs	/^    unsafe fn entomb<W: Write>(&self, writer: &mut W) -> IOResult<()> {$/;"	P	implementation:Unit
entomb	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^    unsafe fn entomb<W: Write>(&self, writer: &mut W) -> IOResult<()> {$/;"	P	implementation:VecStorage
entomb	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^    unsafe fn entomb<W: Write>(&self, writer: &mut W) -> IOResult<()> {$/;"	f
entomb	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^    unsafe fn entomb<W: Write>(&self, writer: &mut W) -> IOResult<()> {$/;"	f
entomb	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    unsafe fn entomb<W: Write>(&self, writer: &mut W) -> IOResult<()> {$/;"	f
entomb	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^    unsafe fn entomb<W: Write>(&self, writer: &mut W) -> IOResult<()> {$/;"	f
entomb	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^    unsafe fn entomb<W: Write>(&self, writer: &mut W) -> IOResult<()> {$/;"	f
entomb	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs	/^    unsafe fn entomb<W: Write>(&self, writer: &mut W) -> IOResult<()> {$/;"	f
entropy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/mod.rs	/^#[cfg(feature = "std")] mod entropy;$/;"	n
entry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    entry: InstPtr,$/;"	m	struct:Patch
enumerate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs	/^pub fn enumerate<I>(iterable: I) -> iter::Enumerate<I::IntoIter>$/;"	f
env_get_filter_reads_from_default_if_var_not_set	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    fn env_get_filter_reads_from_default_if_var_not_set() {$/;"	f	module:tests
env_get_filter_reads_from_var_if_set	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    fn env_get_filter_reads_from_var_if_set() {$/;"	f	module:tests
env_get_write_style_reads_from_default_if_var_not_set	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    fn env_get_write_style_reads_from_default_if_var_not_set() {$/;"	f	module:tests
env_get_write_style_reads_from_var_if_set	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    fn env_get_write_style_reads_from_var_if_set() {$/;"	f	module:tests
eof	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn eof() -> Self {$/;"	P	implementation:Byte
epsilon	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn epsilon() -> Self {$/;"	P	interface:Float
epsilon	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn epsilon() -> Self;$/;"	P	interface:FloatCore
epsilon	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn epsilon() -> Self;$/;"	P	interface:Real
eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^    fn eq(&self, _: &Id<O>) -> bool {$/;"	P	implementation:Id
eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/wrapper.rs	/^    fn eq(&self, other: &Self) -> bool {$/;"	P	implementation:Wrapper
eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    fn eq(&self, other: &Date<Tz2>) -> bool { self.date == other.date }$/;"	P	implementation:Date
eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn eq(&self, other: &DateTime<Tz2>) -> bool { self.datetime == other.datetime }$/;"	P	implementation:DateTime
eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    fn eq(&self, _other: &InternalNumeric) -> bool {$/;"	P	implementation:InternalNumeric
eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/impls.rs	/^    fn eq(&self, other: &Self) -> bool {$/;"	f
eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^    fn eq(&self, other: &Key<'ko>) -> bool {$/;"	P	implementation:Key
eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn eq(&self, other: &Level) -> bool {$/;"	P	implementation:Level
eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn eq(&self, other: &Level) -> bool {$/;"	P	implementation:LevelFilter
eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn eq(&self, other: &LevelFilter) -> bool {$/;"	P	implementation:Level
eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn eq(&self, other: &LevelFilter) -> bool {$/;"	P	implementation:LevelFilter
eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^    fn eq(&self, right: &Self) -> bool {$/;"	f
eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    fn eq(&self, right: &Matrix<N, R2, C2, S2>) -> bool {$/;"	f
eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn eq<R2, C2, SB>(&self, other: &Matrix<N, R2, C2, SB>) -> bool$/;"	P	implementation:Matrix
eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^    fn eq(&self, right: &Self) -> bool {$/;"	f
eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^    fn eq(&self, right: &Self) -> bool {$/;"	P	implementation:Orthographic3
eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^    fn eq(&self, right: &Self) -> bool {$/;"	P	implementation:Perspective3
eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^    fn eq(&self, right: &Self) -> bool {$/;"	f
eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    fn eq(&self, rhs: &Self) -> bool {$/;"	f
eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^    fn eq(&self, right: &Self) -> bool {$/;"	f
eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^    fn eq(&self, right: &Self) -> bool {$/;"	f
eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^    fn eq(&self, right: &Self) -> bool {$/;"	f
eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs	/^    fn eq(&self, right: &Translation<N, D>) -> bool {$/;"	f
eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^    fn eq(&self, other: &IndexVec) -> bool {$/;"	P	implementation:IndexVec
eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    fn eq(&self, other: &Char) -> bool {$/;"	P	implementation:char
eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    fn eq(&self, other: &char) -> bool {$/;"	P	implementation:Char
eq	/Users/williamcashman/Honours/Program/n_poly/src/algebras/complex.rs	/^    fn eq(&self, other: &Self) -> bool {$/;"	P	implementation:CC
eq	/Users/williamcashman/Honours/Program/n_poly/src/algebras/finite_field.rs	/^    fn eq(&self, other: &Self) -> bool {$/;"	P	implementation:FF
eq	/Users/williamcashman/Honours/Program/n_poly/src/algebras/real.rs	/^    fn eq(&self, other: &Self) -> bool {$/;"	P	implementation:RR
eq_ignore_ascii_case	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^fn eq_ignore_ascii_case(a: &str, b: &str) -> bool {$/;"	f
equal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^pub fn equal<I, J>(a: I, b: J) -> bool$/;"	f
equality_trait_decl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs	/^macro_rules! equality_trait_decl($/;"	M
equals	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/scan.rs	/^fn equals(s: &str, pattern: &str) -> bool {$/;"	f
error	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs	/^    error: &'a mut Result<(), E>,$/;"	m	struct:ProcessResults
error	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/mod.rs	/^mod error;$/;"	n
error	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/macros.rs	/^macro_rules! error {$/;"	M
error	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^macro_rules! error { ($($x:tt)*) => ($/;"	M
error	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/lib.rs	/^mod error;$/;"	n
error	/Users/williamcashman/Honours/Program/n_poly/src/lib.rs	/^pub mod error;$/;"	n
escape	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^pub fn escape(text: &str) -> String {$/;"	f
escape_byte	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^        fn escape_byte(byte: u8) -> String {$/;"	f	method:CapturesDebug::fmt
escape_bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^        fn escape_bytes(bytes: &[u8]) -> String {$/;"	f	method:CapturesDebug::fmt
euclid_div	/Users/williamcashman/Honours/Program/n_poly/src/algebras/integers.rs	/^    fn euclid_div(&self, other: &Self) -> Option<(Self, Self)> {$/;"	P	implementation:ZZ
euclid_div	/Users/williamcashman/Honours/Program/n_poly/src/algebras/mod.rs	/^    fn euclid_div(&self, other: &Self) -> Option<(Self, Self)> {$/;"	P	implementation:F
euclid_div	/Users/williamcashman/Honours/Program/n_poly/src/algebras/mod.rs	/^    fn euclid_div(&self, other: &Self) -> Option<(Self, Self)>;$/;"	P	interface:EuclideanDomain
euclid_div	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    fn euclid_div(&self, other: &Self) -> Option<(Self, Self)> {$/;"	P	implementation:Poly
euclid_div_multi	/Users/williamcashman/Honours/Program/n_poly/src/algebras/mod.rs	/^    fn euclid_div_multi(&self, others: &Vec<&Self>) -> Option<(Vec<Self>, Self)> {$/;"	P	interface:EuclideanDomain
euclid_div_multi	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    fn euclid_div_multi(&self, divisors: &Vec<&Self>) -> Option<(Vec<Self>, Self)> {$/;"	P	implementation:Poly
euler_angles	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn euler_angles(&self) -> (N, N, N)$/;"	f
euler_angles	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^    pub fn euler_angles(&self) -> (N, N, N)$/;"	f
eval_interp	/Users/williamcashman/Honours/Program/n_poly/src/fft.rs	/^pub fn eval_interp<F>(a_sig: &mut [F], b_sig: &mut [F]) -> Result<(), &'static str>$/;"	f
exactly_one	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn exactly_one(mut self) -> Result<Self::Item, ExactlyOneError<Self>>$/;"	P	interface:Itertools
exactly_one_err	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^mod exactly_one_err;$/;"	n
exec	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/backtrack.rs	/^    pub fn exec($/;"	P	implementation:Bounded
exec	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/lib.rs	/^mod exec;$/;"	n
exec	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/pikevm.rs	/^    pub fn exec($/;"	P	implementation:Fsm
exec_	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/backtrack.rs	/^    fn exec_(&mut self, mut at: InputAt, end: usize) -> bool {$/;"	P	implementation:Bounded
exec_	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/pikevm.rs	/^    fn exec_($/;"	P	implementation:Fsm
exec_at	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn exec_at($/;"	P	implementation:Fsm
exec_at_reverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn exec_at_reverse($/;"	P	implementation:Fsm
exec_backtrack	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    fn exec_backtrack($/;"	P	implementation:ExecNoSync
exec_byte	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn exec_byte($/;"	P	implementation:Fsm
exec_dfa_reverse_suffix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    fn exec_dfa_reverse_suffix($/;"	P	implementation:ExecNoSync
exec_nfa	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    fn exec_nfa($/;"	P	implementation:ExecNoSync
exec_pikevm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    fn exec_pikevm($/;"	P	implementation:ExecNoSync
exhume	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^    unsafe fn exhume<'a, 'b>(&'a mut self, mut bytes: &'b mut [u8]) -> Option<&'b mut [u8]> {$/;"	f
exhume	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    unsafe fn exhume<'a, 'b>(&'a mut self, bytes: &'b mut [u8]) -> Option<&'b mut [u8]> {$/;"	P	implementation:Matrix
exhume	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs	/^    unsafe fn exhume<'a, 'b>(&'a mut self, bytes: &'b mut [u8]) -> Option<&'b mut [u8]> {$/;"	P	implementation:Unit
exhume	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^    unsafe fn exhume<'a, 'b>(&'a mut self, bytes: &'b mut [u8]) -> Option<&'b mut [u8]> {$/;"	P	implementation:VecStorage
exhume	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^    unsafe fn exhume<'a, 'b>(&'a mut self, bytes: &'b mut [u8]) -> Option<&'b mut [u8]> {$/;"	f
exhume	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^    unsafe fn exhume<'a, 'b>(&'a mut self, bytes: &'b mut [u8]) -> Option<&'b mut [u8]> {$/;"	f
exhume	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    unsafe fn exhume<'a, 'b>(&'a mut self, bytes: &'b mut [u8]) -> Option<&'b mut [u8]> {$/;"	f
exhume	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^    unsafe fn exhume<'a, 'b>(&'a mut self, bytes: &'b mut [u8]) -> Option<&'b mut [u8]> {$/;"	f
exhume	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^    unsafe fn exhume<'a, 'b>(&'a mut self, bytes: &'b mut [u8]) -> Option<&'b mut [u8]> {$/;"	f
exhume	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs	/^    unsafe fn exhume<'a, 'b>(&'a mut self, bytes: &'b mut [u8]) -> Option<&'b mut [u8]> {$/;"	f
exp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn exp(self) -> Self {$/;"	P	implementation:Complex
exp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn exp(self) -> Self;$/;"	P	interface:ComplexField
exp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn exp(&self) -> Quaternion<N> {$/;"	f
exp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn exp(&self) -> Self {$/;"	f
exp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub fn exp(&self) -> Self {$/;"	P	implementation:Complex
exp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn exp(self) -> Self {$/;"	P	implementation:f32
exp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn exp(self) -> Self {$/;"	P	implementation:f64
exp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn exp(self) -> Self;$/;"	P	interface:Float
exp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn exp(self) -> Self;$/;"	P	interface:Real
exp2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn exp2(self) -> Self {$/;"	P	implementation:Complex
exp2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn exp2(self) -> Self;$/;"	P	interface:ComplexField
exp2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn exp2(self) -> Self {$/;"	P	implementation:f32
exp2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn exp2(self) -> Self {$/;"	P	implementation:f64
exp2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn exp2(self) -> Self;$/;"	P	interface:Float
exp2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn exp2(self) -> Self;$/;"	P	interface:Real
exp_eps	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn exp_eps(&self, eps: N) -> Self {$/;"	f
exp_lambda	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/poisson.rs	/^    exp_lambda: f64,$/;"	m	struct:Poisson
exp_m1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn exp_m1(self) -> Self {$/;"	P	implementation:Complex
exp_m1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn exp_m1(self) -> Self;$/;"	P	interface:ComplexField
exp_m1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn exp_m1(self) -> Self {$/;"	P	implementation:f32
exp_m1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn exp_m1(self) -> Self {$/;"	P	implementation:f64
exp_m1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn exp_m1(self) -> Self;$/;"	P	interface:Float
exp_m1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn exp_m1(self) -> Self;$/;"	P	interface:Real
expand	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/lib.rs	/^mod expand;$/;"	n
expand	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    pub fn expand(&self, replacement: &[u8], dst: &mut Vec<u8>) {$/;"	P	implementation:Captures
expand	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    pub fn expand(&self, replacement: &str, dst: &mut String) {$/;"	P	implementation:Captures
expand_bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/expand.rs	/^pub fn expand_bytes($/;"	f
expand_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/expand.rs	/^pub fn expand_str($/;"	f
expected_shift	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs	/^    fn expected_shift(m: Matrix2<f64>) -> f64 {$/;"	f	module:test
expecting	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result$/;"	P	implementation:serde::ts_milliseconds::MilliSecondsTimestampVisitor
expecting	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result$/;"	P	implementation:serde::ts_milliseconds_option::OptionMilliSecondsTimestampVisitor
expecting	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result$/;"	P	implementation:serde::ts_nanoseconds::NanoSecondsTimestampVisitor
expecting	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result$/;"	P	implementation:serde::ts_nanoseconds_option::OptionNanoSecondsTimestampVisitor
expecting	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result$/;"	P	implementation:serde::ts_seconds::SecondsTimestampVisitor
expecting	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result$/;"	P	implementation:serde::ts_seconds_option::OptionSecondsTimestampVisitor
expecting	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result$/;"	P	implementation:serde::DateTimeVisitor
expecting	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^        fn expecting(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:weekday_serde::WeekdayVisitor
expecting	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result$/;"	P	implementation:serde::NaiveDateVisitor
expecting	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result$/;"	P	implementation:serde::ts_milliseconds::NaiveDateTimeFromMilliSecondsVisitor
expecting	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result$/;"	P	implementation:serde::ts_nanoseconds::NaiveDateTimeFromNanoSecondsVisitor
expecting	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result$/;"	P	implementation:serde::ts_seconds::NaiveDateTimeFromSecondsVisitor
expecting	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result$/;"	P	implementation:serde::NaiveDateTimeVisitor
expecting	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result$/;"	P	implementation:serde::NaiveTimeVisitor
expecting	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/impl_serde.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Level::deserialize::LevelEnum
expecting	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Level::deserialize::LevelIdentifier
expecting	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:LevelFilter::deserialize::LevelFilterEnum
expecting	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:LevelFilter::deserialize::LevelFilterIdentifier
expecting	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^    fn expecting(&self, formatter: &mut Formatter) -> fmt::Result {$/;"	f
expf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub fn expf(&self, base: T) -> Self {$/;"	P	implementation:Complex
exponential	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^#[cfg(feature = "std")] mod exponential;$/;"	n
exprs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    exprs: Vec<Hir>,$/;"	m	struct:Parsed
extend	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    fn extend<I: IntoIterator<Item = N>>(&mut self, iter: I) {$/;"	f
extend	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    fn extend<I: IntoIterator<Item = Vector<N, RV, SV>>>(&mut self, iter: I) {$/;"	f
extend	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^    fn extend<I: IntoIterator<Item = &'a N>>(&mut self, iter: I) {$/;"	P	implementation:VecStorage
extend	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^    fn extend<I: IntoIterator<Item = N>>(&mut self, iter: I) {$/;"	P	implementation:VecStorage
extend	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^    fn extend<I: IntoIterator<Item = Vector<N, RV, SV>>>(&mut self, iter: I) {$/;"	f
extend_rows	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^unsafe fn extend_rows<N: Scalar>($/;"	f
extent	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^    fn extent(&self) -> usize {$/;"	f
extent	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    fn extent(&self) -> usize {$/;"	P	implementation:Matrix
extent	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs	/^    fn extent(&self) -> usize {$/;"	P	implementation:Unit
extent	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^    fn extent(&self) -> usize {$/;"	P	implementation:VecStorage
extent	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^    fn extent(&self) -> usize {$/;"	f
extent	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^    fn extent(&self) -> usize {$/;"	f
extent	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    fn extent(&self) -> usize {$/;"	f
extent	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^    fn extent(&self) -> usize {$/;"	f
extent	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^    fn extent(&self) -> usize {$/;"	f
extent	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs	/^    fn extent(&self) -> usize {$/;"	f
extract	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_simba.rs	/^    fn extract(&self, i: usize) -> Self::Element {$/;"	f
extract	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_simba.rs	/^    fn extract(&self, i: usize) -> Self::Element {$/;"	f
extract	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_simba.rs	/^    fn extract(&self, i: usize) -> Self::Element {$/;"	f
extract	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_simba.rs	/^    fn extract(&self, i: usize) -> Self::Element {$/;"	f
extract	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_simba.rs	/^    fn extract(&self, i: usize) -> Self::Element {$/;"	f
extract	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_simba.rs	/^    fn extract(&self, i: usize) -> Self::Element {$/;"	f
extract	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_simba.rs	/^    fn extract(&self, i: usize) -> Self::Element {$/;"	f
extract	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_simba.rs	/^    fn extract(&self, i: usize) -> Self::Element {$/;"	f
extract	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_simba.rs	/^    fn extract(&self, i: usize) -> Self::Element {$/;"	f
extract	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/utils.rs	/^    fn extract(self, index: usize) -> Self {$/;"	P	interface:FloatAsSIMD
extract_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_simba.rs	/^    unsafe fn extract_unchecked(&self, i: usize) -> Self::Element {$/;"	f
extract_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_simba.rs	/^    unsafe fn extract_unchecked(&self, i: usize) -> Self::Element {$/;"	f
extract_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_simba.rs	/^    unsafe fn extract_unchecked(&self, i: usize) -> Self::Element {$/;"	f
extract_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_simba.rs	/^    unsafe fn extract_unchecked(&self, i: usize) -> Self::Element {$/;"	f
extract_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_simba.rs	/^    unsafe fn extract_unchecked(&self, i: usize) -> Self::Element {$/;"	f
extract_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_simba.rs	/^    unsafe fn extract_unchecked(&self, i: usize) -> Self::Element {$/;"	f
extract_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_simba.rs	/^    unsafe fn extract_unchecked(&self, i: usize) -> Self::Element {$/;"	f
extract_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_simba.rs	/^    unsafe fn extract_unchecked(&self, i: usize) -> Self::Element {$/;"	f
extract_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_simba.rs	/^    unsafe fn extract_unchecked(&self, i: usize) -> Self::Element {$/;"	f
f	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    f: F$/;"	m	struct:MapResults
f	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    f: F,$/;"	m	struct:Batching
f	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    f: F,$/;"	m	struct:Coalesce
f	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    f: F,$/;"	m	struct:Positions
f	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    f: F,$/;"	m	struct:TakeWhileRef
f	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    f: F,$/;"	m	struct:Update
f	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs	/^    f: F,$/;"	m	struct:PeekingTakeWhile
f	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs	/^    f: F,$/;"	m	struct:Iterate
f	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs	/^    f: F,$/;"	m	struct:RepeatCall
f	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs	/^    f: F,$/;"	m	struct:Unfold
f	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs	/^    f: F,$/;"	m	struct:UniqueBy
f32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/operator.rs	/^impl TwoSidedInverse<Multiplicative> for f32 {$/;"	c
f32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^impl ToValue for f32 {$/;"	c
f32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^impl Float for f32 {$/;"	c
f32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^impl FloatCore for f32 {$/;"	c
f32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/inv.rs	/^impl Inv for f32 {$/;"	c
f32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/inv.rs	/^impl<'a> Inv for &'a f32 {$/;"	c
f32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/mul_add.rs	/^impl MulAdd<f32, f32> for f32 {$/;"	c
f32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/mul_add.rs	/^impl MulAddAssign<f32, f32> for f32 {$/;"	c
f4	/Users/williamcashman/Honours/Program/n_poly/src/ideals/f4.rs	/^pub fn f4<'a, P: FPolyRing>(f_gens: Vec<Poly<'a, P>>) -> Ideal<'a, P> {$/;"	f
f4	/Users/williamcashman/Honours/Program/n_poly/src/ideals/mod.rs	/^pub mod f4;$/;"	n
f4_test	/Users/williamcashman/Honours/Program/n_poly/src/ideals/f4.rs	/^    fn f4_test() {$/;"	f	module:tests
f64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/operator.rs	/^impl TwoSidedInverse<Multiplicative> for f64 {$/;"	c
f64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^impl ToValue for f64 {$/;"	c
f64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        fn f64(&mut self, v: f64) -> Result<(), Error> {$/;"	P	implementation:fmt_support::FmtVisitor
f64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        fn f64(&mut self, v: f64) -> Result<(), Error> {$/;"	P	implementation:sval_support::SvalVisitor
f64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    fn f64(&mut self, v: f64) -> Result<(), Error>;$/;"	P	interface:Visitor
f64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/test.rs	/^            fn f64(&mut self, v: f64) -> Result<(), Error> {$/;"	P	implementation:Value::to_token::TestVisitor
f64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^impl Float for f64 {$/;"	c
f64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^impl FloatCore for f64 {$/;"	c
f64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/inv.rs	/^impl Inv for f64 {$/;"	c
f64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/inv.rs	/^impl<'a> Inv for &'a f64 {$/;"	c
f64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/mul_add.rs	/^impl MulAdd<f64, f64> for f64 {$/;"	c
f64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/mul_add.rs	/^impl MulAddAssign<f64, f64> for f64 {$/;"	c
f64_to_i64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/binomial.rs	/^fn f64_to_i64(x: f64) -> i64 {$/;"	f
face_towards	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs	/^    pub fn face_towards(eye: &Point3<N>, target: &Point3<N>, up: &Vector3<N>) -> Self {$/;"	P	implementation:Matrix4
face_towards	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^    pub fn face_towards<SB, SC>(dir: &Vector<N, U3, SB>, up: &Vector<N, U3, SC>) -> Self$/;"	f
face_towards	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^    pub fn face_towards<SB, SC>(dir: &Vector<N, U3, SB>, up: &Vector<N, U3, SC>) -> Self$/;"	f
fast_mult	/Users/williamcashman/Honours/Program/n_poly/src/fast_mult.rs	/^    fn fast_mult(&self, b: &Self) -> Self;$/;"	P	interface:FastMult
fast_mult	/Users/williamcashman/Honours/Program/n_poly/src/fast_mult.rs	/^    fn fast_mult(&self, other: &Self) -> Self {$/;"	P	implementation:PolyU
fast_mult	/Users/williamcashman/Honours/Program/n_poly/src/lib.rs	/^pub mod fast_mult;$/;"	n
fdiv	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub fn fdiv(&self, other: Complex<T>) -> Complex<T> {$/;"	P	implementation:Complex
fft	/Users/williamcashman/Honours/Program/n_poly/src/lib.rs	/^pub mod fft;$/;"	n
file	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    file: Option<MaybeStaticStr<'a>>,$/;"	m	struct:Record
file	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn file(&mut self, file: Option<&'a str>) -> &mut RecordBuilder<'a> {$/;"	P	implementation:RecordBuilder
file	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn file(&self) -> Option<&'a str> {$/;"	P	implementation:Record
file_static	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn file_static(&mut self, file: Option<&'static str>) -> &mut RecordBuilder<'a> {$/;"	P	implementation:RecordBuilder
file_static	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn file_static(&self) -> Option<&'static str> {$/;"	P	implementation:Record
fill	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^            fn fill(&self, slot: &mut Slot) -> Result<(), Error> {$/;"	P	implementation:tests::fill_multiple_times_panics::BadFill
fill	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^            fn fill(&self, slot: &mut Slot) -> Result<(), Error> {$/;"	P	implementation:tests::fill_value::TestFill
fill	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^    fn fill(&self, slot: &mut Slot) -> Result<(), Error> {$/;"	f
fill	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^    fn fill(&self, slot: &mut Slot) -> Result<(), Error>;$/;"	P	interface:Fill
fill	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^    pub fn fill(&mut self, value: Value) -> Result<(), Error> {$/;"	P	implementation:Slot
fill	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn fill(&mut self, val: N) {$/;"	P	implementation:Matrix
fill	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^    fn fill<T: AsByteSliceMut + ?Sized>(&mut self, dest: &mut T) {$/;"	P	interface:Rng
fill	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn fill(&mut self, goto: InstPtr) {$/;"	P	implementation:MaybeInst
fill	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn fill(&mut self, hole: Hole, goto: InstPtr) {$/;"	P	implementation:Compiler
fill	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn fill(&self, goto: InstPtr) -> Inst {$/;"	P	implementation:InstHole
fill_bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/read.rs	/^    fn fill_bytes(&mut self, dest: &mut [u8]) {$/;"	P	implementation:ReadRng
fill_bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/reseeding.rs	/^    fn fill_bytes(&mut self, dest: &mut [u8]) {$/;"	f
fill_bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/entropy.rs	/^    fn fill_bytes(&mut self, dest: &mut [u8]) {$/;"	P	implementation:EntropyRng
fill_bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/mock.rs	/^    fn fill_bytes(&mut self, dest: &mut [u8]) {$/;"	P	implementation:StepRng
fill_bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/small.rs	/^    fn fill_bytes(&mut self, dest: &mut [u8]) {$/;"	P	implementation:SmallRng
fill_bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/std.rs	/^    fn fill_bytes(&mut self, dest: &mut [u8]) {$/;"	P	implementation:StdRng
fill_bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/thread.rs	/^    fn fill_bytes(&mut self, dest: &mut [u8]) {$/;"	P	implementation:ThreadRng
fill_column	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn fill_column(&mut self, j: usize, val: N) {$/;"	P	implementation:Matrix
fill_diagonal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn fill_diagonal(&mut self, val: N) {$/;"	P	implementation:Matrix
fill_lower_triangle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn fill_lower_triangle(&mut self, val: N, shift: usize) {$/;"	P	implementation:Matrix
fill_lower_triangle_with_upper_triangle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn fill_lower_triangle_with_upper_triangle(&mut self) {$/;"	P	implementation:Matrix
fill_multiple_times_panics	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^    fn fill_multiple_times_panics() {$/;"	f	module:tests
fill_row	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn fill_row(&mut self, i: usize, val: N) {$/;"	P	implementation:Matrix
fill_split	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn fill_split($/;"	P	implementation:Compiler
fill_split	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn fill_split(&mut self, goto1: InstPtr, goto2: InstPtr) {$/;"	P	implementation:MaybeInst
fill_to_next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn fill_to_next(&mut self, hole: Hole) {$/;"	P	implementation:Compiler
fill_upper_triangle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn fill_upper_triangle(&mut self, val: N, shift: usize) {$/;"	P	implementation:Matrix
fill_upper_triangle_with_lower_triangle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn fill_upper_triangle_with_lower_triangle(&mut self) {$/;"	P	implementation:Matrix
fill_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^    fn fill_value() {$/;"	f	module:tests
fill_with_identity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn fill_with_identity(&mut self)$/;"	P	implementation:Matrix
filled	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^    filled: bool,$/;"	m	struct:Slot
filler	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/pad_tail.rs	/^    filler: F,$/;"	m	struct:PadUsing
filter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^    filter: Option<inner::Filter>,$/;"	m	struct:Builder
filter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^    filter: Option<inner::Filter>,$/;"	m	struct:Filter
filter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^    pub fn filter(&mut self, module: Option<&str>, level: LevelFilter) -> &mut Self {$/;"	P	implementation:Builder
filter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^    pub fn filter(&self) -> LevelFilter {$/;"	P	implementation:Filter
filter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    filter: Filter,$/;"	m	struct:Logger
filter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    filter: Var<'a>,$/;"	m	struct:Env
filter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    filter: filter::Builder,$/;"	m	struct:Builder
filter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    pub fn filter(&mut self, module: Option<&str>, level: LevelFilter) -> &mut Self {$/;"	P	implementation:Builder
filter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    pub fn filter(&self) -> LevelFilter {$/;"	P	implementation:Logger
filter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    pub fn filter<E>(mut self, filter_env: E) -> Self$/;"	P	implementation:Env
filter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^pub mod filter;$/;"	n
filter_beginning_longest_match	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^    fn filter_beginning_longest_match() {$/;"	f	module:tests
filter_info	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^    fn filter_info() {$/;"	f	module:tests
filter_level	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^    pub fn filter_level(&mut self, level: LevelFilter) -> &mut Self {$/;"	P	implementation:Builder
filter_level	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    pub fn filter_level(&mut self, level: LevelFilter) -> &mut Self {$/;"	P	implementation:Builder
filter_module	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^    pub fn filter_module(&mut self, module: &str, level: LevelFilter) -> &mut Self {$/;"	P	implementation:Builder
filter_module	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    pub fn filter_module(&mut self, module: &str, level: LevelFilter) -> &mut Self {$/;"	P	implementation:Builder
filter_or	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    pub fn filter_or<E, V>(mut self, filter_env: E, default: V) -> Self$/;"	P	implementation:Env
find	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/expand.rs	/^    macro_rules! find {$/;"	M	module:tests
find	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    fn find(&self, haystack: &[u8]) -> Option<usize> {$/;"	P	implementation:BoyerMooreSearch
find	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    fn find(&self, text: &[u8]) -> Option<usize> {$/;"	P	implementation:SingleByteSet
find	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    pub fn find(&self, haystack: &[u8]) -> Option<(usize, usize)> {$/;"	P	implementation:LiteralSearcher
find	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    pub fn find(&self, haystack: &[u8]) -> Option<usize> {$/;"	P	implementation:FreqyPacked
find	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/mod.rs	/^        pub fn find(&self, _: &[u8]) -> Option<(usize, usize)> {$/;"	P	implementation:imp::LiteralSearcher
find	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    pub fn find<'t>(&self, text: &'t [u8]) -> Option<Match<'t>> {$/;"	P	implementation:Regex
find	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    pub fn find<'t>(&self, text: &'t str) -> Option<Match<'t>> {$/;"	P	implementation:Regex
find_at	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    fn find_at(&self, text: &[u8], start: usize) -> Option<(usize, usize)> {$/;"	P	implementation:ExecNoSync
find_at	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    fn find_at(&self, text: &str, start: usize) -> Option<(usize, usize)> {$/;"	P	implementation:ExecNoSyncStr
find_at	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    pub fn find_at<'t>($/;"	P	implementation:Regex
find_at	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_trait.rs	/^    fn find_at($/;"	P	interface:RegularExpression
find_at	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    pub fn find_at<'t>($/;"	P	implementation:Regex
find_byte	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/find_byte.rs	/^pub fn find_byte(needle: u8, haystack: &[u8]) -> Option<usize> {$/;"	f
find_byte	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/lib.rs	/^mod find_byte;$/;"	n
find_cap_ref	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/expand.rs	/^fn find_cap_ref<T: ?Sized + AsRef<[u8]>>($/;"	f
find_dfa_anchored_reverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    fn find_dfa_anchored_reverse($/;"	P	implementation:ExecNoSync
find_dfa_forward	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    fn find_dfa_forward($/;"	P	implementation:ExecNoSync
find_dfa_reverse_suffix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    fn find_dfa_reverse_suffix($/;"	P	implementation:ExecNoSync
find_end	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    pub fn find_end(&self, haystack: &[u8]) -> Option<(usize, usize)> {$/;"	P	implementation:LiteralSearcher
find_end	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/mod.rs	/^        pub fn find_end(&self, _: &[u8]) -> Option<(usize, usize)> {$/;"	P	implementation:imp::LiteralSearcher
find_iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    pub fn find_iter<'r, 't>(&'r self, text: &'t [u8]) -> Matches<'r, 't> {$/;"	P	implementation:Regex
find_iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_trait.rs	/^    fn find_iter(self, text: &Self::Text) -> Matches<Self> {$/;"	P	interface:RegularExpression
find_iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    pub fn find_iter<'r, 't>(&'r self, text: &'t str) -> Matches<'r, 't> {$/;"	P	implementation:Regex
find_literals	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    fn find_literals($/;"	P	implementation:ExecNoSync
find_nfa	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    fn find_nfa($/;"	P	implementation:ExecNoSync
find_position	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn find_position<P>(&mut self, mut pred: P) -> Option<(usize, Self::Item)>$/;"	P	interface:Itertools
find_start	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    pub fn find_start(&self, haystack: &[u8]) -> Option<(usize, usize)> {$/;"	P	implementation:LiteralSearcher
find_start	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/mod.rs	/^        pub fn find_start(&self, _: &[u8]) -> Option<(usize, usize)> {$/;"	P	implementation:imp::LiteralSearcher
finder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    finder: Matches<'r, 't>,$/;"	m	struct:Split
finder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    finder: Matches<'r, 't>,$/;"	m	struct:Split
finish_header	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    fn finish_header(&mut self) -> io::Result<()> {$/;"	P	implementation:DefaultFormat
finite_field	/Users/williamcashman/Honours/Program/n_poly/src/algebras/mod.rs	/^pub mod finite_field;$/;"	n
finite_mask	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/utils.rs	/^    fn finite_mask(self) -> Self::Mask;$/;"	P	interface:FloatSIMDUtils
finv	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub fn finv(&self) -> Complex<T> {$/;"	P	implementation:Complex
first	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations.rs	/^    first: bool,$/;"	m	struct:Combinations
first	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations_with_replacement.rs	/^    first: bool,$/;"	m	struct:CombinationsWithReplacement
first	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    first: Option<I::Item>,$/;"	m	struct:Chunk
first	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    first: Option<I::Item>,$/;"	m	struct:Group
first	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^    first: V,$/;"	m	struct:TArr
first_two	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/exactly_one_err.rs	/^    first_two: (Option<I::Item>, Option<I::Item>),$/;"	m	struct:ExactlyOneError
fix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^macro_rules! fix  { ($x:ident) => (Item::Fixed(Fixed::$x)) }$/;"	M
fix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/fixed.rs	/^    fn fix(&self) -> FixedOffset { *self }$/;"	P	implementation:FixedOffset
fix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^    fn fix(&self) -> FixedOffset;$/;"	P	interface:Offset
fix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/utc.rs	/^    fn fix(&self) -> FixedOffset { FixedOffset::east(0) }$/;"	P	implementation:Utc
fixed	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^mod fixed;$/;"	n
fixed_resize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn fixed_resize<R2: DimName, C2: DimName>(self, val: N) -> MatrixMN<N, R2, C2>$/;"	P	implementation:Matrix
flag	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    flag: bool,$/;"	m	struct:Interleave
flags	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    pub fn flags(&self) -> YearFlags {$/;"	P	implementation:Mdf
flags	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    pub fn flags(&self) -> YearFlags {$/;"	P	implementation:Of
flags	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn flags(&self) -> StateFlags {$/;"	P	implementation:State
flip	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs	/^    pub fn flip(self) -> EitherOrBoth<B, A> {$/;"	P	implementation:EitherOrBoth
float	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    mod float {$/;"	n	module:test
float	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^pub mod float;$/;"	n
float	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^mod float;$/;"	n
float_const_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^macro_rules! float_const_impl {$/;"	M
float_impl_libm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^macro_rules! float_impl_libm {$/;"	M
float_impl_std	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^macro_rules! float_impl_std {$/;"	M
float_impls	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/pow.rs	/^mod float_impls {$/;"	n
float_impls	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/float.rs	/^macro_rules! float_impls {$/;"	M
float_trait_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^macro_rules! float_trait_impl {$/;"	M
floor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn floor(self) -> Self {$/;"	P	implementation:Complex
floor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn floor(self) -> Self;$/;"	P	interface:ComplexField
floor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn floor(self) -> Self {$/;"	P	implementation:f32
floor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn floor(self) -> Self {$/;"	P	implementation:f64
floor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn floor(self) -> Self {$/;"	P	interface:FloatCore
floor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn floor(self) -> Self;$/;"	P	interface:Float
floor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn floor(self) -> Self;$/;"	P	interface:Real
flush	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^                    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:DefaultFormat::write_args::IndentWrapper
flush	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:Formatter
flush	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    pub(in crate::fmt) fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:Buffer
flush	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/shim_impl.rs	/^    pub(in crate::fmt) fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:Buffer
flush	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    fn flush(&self) {}$/;"	P	implementation:Logger
flush	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn flush(&self) {}$/;"	P	implementation:NopLogger
flush	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn flush(&self);$/;"	P	interface:Log
flush_count	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    flush_count: u64,$/;"	m	struct:CacheInner
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Id
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/wrapper.rs	/^    fn fmt(&self, fmt: &mut Formatter) -> Result<(), Error> {$/;"	P	implementation:Wrapper
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Date
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^                fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:serde::DateTime::serialize::FormatWrapped
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:DateTime
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:DelayedFormat
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:InternalNumeric
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ParseError
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ParseWeekdayError
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:SerdeError
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Weekday
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^                fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:serde::NaiveDate::serialize::FormatWrapped
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result { fmt::Debug::fmt(self, f) }$/;"	P	implementation:NaiveDate
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:NaiveDate
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^                fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:serde::NaiveDateTime::serialize::FormatWrapped
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:NaiveDateTime
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Mdf
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Of
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:YearFlags
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/isoweek.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:IsoWeek
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result { fmt::Debug::fmt(self, f) }$/;"	P	implementation:NaiveTime
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:NaiveTime
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/fixed.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result { fmt::Debug::fmt(self, f) }$/;"	P	implementation:FixedOffset
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/fixed.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:FixedOffset
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/utc.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result { write!(f, "UTC") }$/;"	P	implementation:Utc
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/utc.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result { write!(f, "Z") }$/;"	P	implementation:Utc
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Duration
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:OutOfRangeError
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Builder
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Filter
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/regex.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Filter
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/string.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Filter
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/humantime/extern_impl.rs	/^            fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Timestamp::fmt::TimestampValue
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/humantime/extern_impl.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Timestamp
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^                    fmt: &'a mut DefaultFormat<'b>,$/;"	m	struct:DefaultFormat::write_args::IndentWrapper
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Formatter
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Builder
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Writer
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Style
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^        fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:std_fmt_impls::Builder
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^        fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:std_fmt_impls::Logger
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^pub mod fmt;$/;"	n
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/hex.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/impls.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/iter.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/format.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Error
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Key
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:fmt_support::Value
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    pub(super) fn fmt(f: &mut fmt::Formatter, v: &sval::Value) -> Result<(), Error> {$/;"	f	module:sval_support
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Slot
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:KeyValues
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Level
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:LevelFilter
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ParseLevelError
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:SetLoggerError
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^    fn fmt(&self, fmt: &mut Formatter) -> fmt::Result {$/;"	f
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> Result<(), fmt::Error> {$/;"	P	implementation:Matrix
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {$/;"	P	implementation:Orthographic3
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {$/;"	P	implementation:Perspective3
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Quaternion
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:UnitQuaternion
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:UnitComplex
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ParseComplexError
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ParseFloatError
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/bernoulli.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:BernoulliError
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:WeightedError
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/read.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ReadError
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:State
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:StateFlags
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Transitions
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:TransitionsRow
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Error
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Char
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Program
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Captures
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:CapturesDebug
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Regex
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Captures
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:CapturesDebug
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Regex
fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/sparse.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:SparseSet
fmt	/Users/williamcashman/Honours/Program/n_poly/src/algebras/complex.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:CC
fmt	/Users/williamcashman/Honours/Program/n_poly/src/algebras/finite_field.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:FF
fmt	/Users/williamcashman/Honours/Program/n_poly/src/algebras/integers.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:ZZ
fmt	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/Users/williamcashman/Honours/Program/n_poly/src/algebras/real.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:RR
fmt	/Users/williamcashman/Honours/Program/n_poly/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:PolyErr
fmt	/Users/williamcashman/Honours/Program/n_poly/src/ideals/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Ideal
fmt	/Users/williamcashman/Honours/Program/n_poly/src/polyu.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Poly
fmt_rfc2822_datetime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parse.rs	/^    fn fmt_rfc2822_datetime(dt: DateTime<FixedOffset>) -> String {$/;"	f	function:test_rfc2822
fmt_rfc3339_datetime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parse.rs	/^    fn fmt_rfc3339_datetime(dt: DateTime<FixedOffset>) -> String {$/;"	f	function:test_rfc3339
fmt_support	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^mod fmt_support {$/;"	n
fold	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/functional.rs	/^    fn fold<U, F>(self, init: U, f: F) -> U$/;"	P	interface:FunctionalSequence
fold	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/iter.rs	/^    fn fold<B, F>(mut self, init: B, mut f: F) -> B$/;"	f
fold	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    fn fold<U, F>(self, init: U, mut f: F) -> U$/;"	f
fold	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    fn fold<Acc, Fold>(self, init: Acc, mut fold_f: Fold) -> Acc$/;"	f
fold	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    fn fold<Acc, G>(mut self, init: Acc, mut f: G) -> Acc$/;"	f
fold	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    fn fold<Acc, G>(mut self, mut accum: Acc, mut f: G) -> Acc$/;"	f
fold	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    fn fold<Acc, G>(self, init: Acc, mut g: G) -> Acc$/;"	f
fold	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    fn fold<Acc, G>(self, mut accum: Acc, mut f: G) -> Acc$/;"	f
fold	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs	/^pub fn fold<I, B, F>(iterable: I, init: B, f: F) -> B$/;"	f
fold	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/intersperse.rs	/^    fn fold<B, F>(mut self, init: B, mut f: F) -> B where$/;"	f
fold	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn fold<Acc>(&self, init: Acc, mut f: impl FnMut(Acc, N) -> Acc) -> Acc {$/;"	P	implementation:Matrix
fold1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn fold1<F>(mut self, f: F) -> Option<Self::Item>$/;"	P	interface:Itertools
fold_options	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn fold_options<A, B, F>(&mut self, mut start: B, mut f: F) -> Option<B>$/;"	P	interface:Itertools
fold_results	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn fold_results<A, E, B, F>(&mut self, mut start: B, mut f: F) -> Result<B, E>$/;"	P	interface:Itertools
fold_while	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn fold_while<B, F>(&mut self, init: B, mut f: F) -> FoldWhile<B>$/;"	P	interface:Itertools
fold_with	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn fold_with<N2>($/;"	P	implementation:Matrix
follow_epsilons	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn follow_epsilons($/;"	P	implementation:Fsm
for_each_tuple	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/bounds.rs	/^macro_rules! for_each_tuple {$/;"	M
for_each_tuple_	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/bounds.rs	/^macro_rules! for_each_tuple_ {$/;"	M
foreach	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn foreach<F>(self, f: F)$/;"	P	interface:Itertools
fork	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/reseeding.rs	/^mod fork {$/;"	n
fork_counter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/reseeding.rs	/^    fork_counter: usize,$/;"	m	struct:ReseedingCore
fork_handler	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/reseeding.rs	/^    extern "C" fn fork_handler() {$/;"	f	module:fork
format	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    pub fn format<'a>(&self, fmt: &'a str) -> DelayedFormat<StrftimeItems<'a>> {$/;"	f
format	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    pub fn format<'a>(&self, fmt: &'a str) -> DelayedFormat<StrftimeItems<'a>> {$/;"	f
format	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^pub fn format<'a, I, B>($/;"	f
format	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^pub mod format;$/;"	n
format	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    pub fn format<'a>(&self, fmt: &'a str) -> DelayedFormat<StrftimeItems<'a>> {$/;"	P	implementation:NaiveDate
format	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    pub fn format<'a>(&self, fmt: &'a str) -> DelayedFormat<StrftimeItems<'a>> {$/;"	P	implementation:NaiveDateTime
format	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    pub fn format<'a>(&self, fmt: &'a str) -> DelayedFormat<StrftimeItems<'a>> {$/;"	P	implementation:NaiveTime
format	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    format: Box<Fn(&mut Formatter, &Record) -> io::Result<()> + Sync + Send>,$/;"	m	struct:Logger
format	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    format: fmt::Builder,$/;"	m	struct:Builder
format	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    pub fn format<F: 'static>(&mut self, format: F) -> &mut Self$/;"	P	implementation:Builder
format	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/format.rs	/^    fn format<F>(&self, f: &mut fmt::Formatter, mut cb: F) -> fmt::Result$/;"	f
format	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn format(self, sep: &str) -> Format<Self>$/;"	P	interface:Itertools
format	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^mod format;$/;"	n
format_indent	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    pub format_indent: Option<usize>,$/;"	m	struct:Builder
format_indent	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    pub fn format_indent(&mut self, indent: Option<usize>) -> &mut Self {$/;"	P	implementation:Builder
format_indent_spaces	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    fn format_indent_spaces() {$/;"	f	module:tests
format_indent_spaces_no_header	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    fn format_indent_spaces_no_header() {$/;"	f	module:tests
format_indent_zero_spaces	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    fn format_indent_zero_spaces() {$/;"	f	module:tests
format_level	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    pub format_level: bool,$/;"	m	struct:Builder
format_level	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    pub fn format_level(&mut self, write: bool) -> &mut Self {$/;"	P	implementation:Builder
format_module_path	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    pub format_module_path: bool,$/;"	m	struct:Builder
format_module_path	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    pub fn format_module_path(&mut self, write: bool) -> &mut Self {$/;"	P	implementation:Builder
format_no_header	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    fn format_no_header() {$/;"	f	module:tests
format_timestamp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    pub format_timestamp: Option<TimestampPrecision>,$/;"	m	struct:Builder
format_timestamp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    pub fn format_timestamp(&mut self, timestamp: Option<fmt::TimestampPrecision>) -> &mut Self /;"	P	implementation:Builder
format_timestamp_micros	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    pub fn format_timestamp_micros(&mut self) -> &mut Self {$/;"	P	implementation:Builder
format_timestamp_millis	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    pub fn format_timestamp_millis(&mut self) -> &mut Self {$/;"	P	implementation:Builder
format_timestamp_nanos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    pub fn format_timestamp_nanos(&mut self) -> &mut Self {$/;"	P	implementation:Builder
format_timestamp_secs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    pub fn format_timestamp_secs(&mut self) -> &mut Self {$/;"	P	implementation:Builder
format_with	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn format_with<F>(self, sep: &str, format: F) -> FormatWith<Self, F>$/;"	P	interface:Itertools
format_with_header	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    fn format_with_header() {$/;"	f	module:tests
format_with_items	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    pub fn format_with_items<'a, I, B>(&self, items: I) -> DelayedFormat<I>$/;"	f
format_with_items	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    pub fn format_with_items<'a, I, B>(&self, items: I) -> DelayedFormat<I>$/;"	f
format_with_items	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    pub fn format_with_items<'a, I, B>(&self, items: I) -> DelayedFormat<I>$/;"	P	implementation:NaiveDate
format_with_items	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    pub fn format_with_items<'a, I, B>(&self, items: I) -> DelayedFormat<I>$/;"	P	implementation:NaiveDateTime
format_with_items	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    pub fn format_with_items<'a, I, B>(&self, items: I) -> DelayedFormat<I>$/;"	P	implementation:NaiveTime
forward	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/macros.rs	/^macro_rules! forward {$/;"	M
forward	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    pub fn forward($/;"	P	implementation:Fsm
forward_all_binop	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^macro_rules! forward_all_binop {$/;"	M
forward_many	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    pub fn forward_many($/;"	P	implementation:Fsm
forward_op_assign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    macro_rules! forward_op_assign {$/;"	M	module:opassign
forward_ref_ref_binop	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^macro_rules! forward_ref_ref_binop {$/;"	M
forward_ref_val_binop	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^macro_rules! forward_ref_val_binop {$/;"	M
forward_val_ref_binop	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^macro_rules! forward_val_ref_binop {$/;"	M
found	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^            found: Option<Value<'v>>,$/;"	m	struct:Source::get::Get
fovy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^    pub fn fovy(&self) -> N {$/;"	P	implementation:Perspective3
frac	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    frac: u32,$/;"	m	struct:NaiveTime
frac_1_pi	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/real.rs	/^    fn frac_1_pi() -> Self;$/;"	P	interface:RealField
frac_2_pi	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/real.rs	/^    fn frac_2_pi() -> Self;$/;"	P	interface:RealField
frac_2_sqrt_pi	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/real.rs	/^    fn frac_2_sqrt_pi() -> Self;$/;"	P	interface:RealField
frac_pi_2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/real.rs	/^    fn frac_pi_2() -> Self;$/;"	P	interface:RealField
frac_pi_3	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/real.rs	/^    fn frac_pi_3() -> Self;$/;"	P	interface:RealField
frac_pi_4	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/real.rs	/^    fn frac_pi_4() -> Self;$/;"	P	interface:RealField
frac_pi_6	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/real.rs	/^    fn frac_pi_6() -> Self;$/;"	P	interface:RealField
frac_pi_8	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/real.rs	/^    fn frac_pi_8() -> Self;$/;"	P	interface:RealField
fract	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn fract(self) -> Self {$/;"	P	implementation:Complex
fract	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn fract(self) -> Self;$/;"	P	interface:ComplexField
fract	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn fract(self) -> Self {$/;"	P	interface:FloatCore
fract	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn fract(self) -> Self;$/;"	P	interface:Float
fract	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn fract(self) -> Self;$/;"	P	interface:Real
free	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^pub mod free;$/;"	n
freq_rank	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^fn freq_rank(b: u8) -> usize {$/;"	f
freqs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/lib.rs	/^mod freqs;$/;"	n
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^        fn from(obj: TsSeconds<Tz>) -> DateTime<Tz> {$/;"	P	implementation:rustc_serialize::DateTime
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn from(dt: DateTime<Tz>) -> SystemTime {$/;"	P	implementation:SystemTime
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn from(src: DateTime<FixedOffset>) -> Self {$/;"	P	implementation:DateTime
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn from(src: DateTime<Local>) -> Self {$/;"	P	implementation:DateTime
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn from(src: DateTime<Utc>) -> Self {$/;"	P	implementation:DateTime
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn from(t: SystemTime) -> DateTime<Local> {$/;"	P	implementation:DateTime
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn from(t: SystemTime) -> DateTime<Utc> {$/;"	P	implementation:DateTime
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn from<T, D>(me: LocalResult<T>, d: &mut D) -> Result<T, D::Error>$/;"	f	module:rustc_serialize
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^        fn from(obj: TsSeconds) -> NaiveDateTime {$/;"	P	implementation:rustc_serialize::NaiveDateTime
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    fn from(filter_env: T) -> Self {$/;"	f
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    fn from(slice: &[T]) -> &GenericArray<T, N> {$/;"	P	implementation:GenericArray
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    fn from(slice: &mut [T]) -> &mut GenericArray<T, N> {$/;"	P	implementation:GenericArray
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    fn from(iter: I) -> Self {$/;"	P	implementation:Tuple1Combination
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/error.rs	/^        fn from(err: Error) -> Self {$/;"	P	implementation:std_support::Error
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/error.rs	/^        fn from(err: io::Error) -> Self {$/;"	P	implementation:std_support::Error
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/error.rs	/^    fn from(_: Error) -> Self {$/;"	P	implementation:Error
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/error.rs	/^    fn from(_: fmt::Error) -> Self {$/;"	P	implementation:Error
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^    fn from(s: &'k str) -> Self {$/;"	P	implementation:Key
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn from(value: &'v str) -> Self {$/;"	P	implementation:Value
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn from(value: bool) -> Self {$/;"	P	implementation:Value
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn from(value: char) -> Self {$/;"	P	implementation:Value
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn from(value: f32) -> Self {$/;"	P	implementation:Value
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn from(value: f64) -> Self {$/;"	P	implementation:Value
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn from(value: i16) -> Self {$/;"	P	implementation:Value
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn from(value: i32) -> Self {$/;"	P	implementation:Value
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn from(value: i64) -> Self {$/;"	P	implementation:Value
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn from(value: i8) -> Self {$/;"	P	implementation:Value
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn from(value: isize) -> Self {$/;"	P	implementation:Value
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn from(value: u16) -> Self {$/;"	P	implementation:Value
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn from(value: u32) -> Self {$/;"	P	implementation:Value
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn from(value: u64) -> Self {$/;"	P	implementation:Value
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn from(value: u8) -> Self {$/;"	P	implementation:Value
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn from(value: usize) -> Self {$/;"	P	implementation:Value
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^    fn from(m: &'a Matrix<N, R, C, S>) -> Self {$/;"	f
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^    fn from(m: &'a mut Matrix<N, R, C, S>) -> Self {$/;"	f
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^    fn from(matrix_slice: MatrixSlice<'a, N, Dynamic, C, RStride, CStride>) -> Self {$/;"	f
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^    fn from(matrix_slice: MatrixSlice<'a, N, R, C, RStride, CStride>) -> Self {$/;"	f
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^    fn from(matrix_slice: MatrixSlice<'a, N, R, Dynamic, RStride, CStride>) -> Self {$/;"	f
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^    fn from(matrix_slice: MatrixSliceMut<'a, N, Dynamic, C, RStride, CStride>) -> Self {$/;"	f
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^    fn from(matrix_slice: MatrixSliceMut<'a, N, R, C, RStride, CStride>) -> Self {$/;"	f
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^    fn from(matrix_slice: MatrixSliceMut<'a, N, R, Dynamic, RStride, CStride>) -> Self {$/;"	f
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^    fn from(slice: &'a [N]) -> Self {$/;"	P	implementation:DVectorSlice
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^    fn from(slice: &'a mut [N]) -> Self {$/;"	P	implementation:DVectorSliceMut
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^    fn from(slice_mut: MatrixSliceMut<'a, N, R, C, RStride, CStride>) -> Self {$/;"	f
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_conversion.rs	/^    fn from(iso: Isometry<N, D, R>) -> Self {$/;"	f
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^    fn from(orth: Orthographic3<N>) -> Self {$/;"	P	implementation:Matrix4
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^    fn from(orth: Perspective3<N>) -> Self {$/;"	P	implementation:Matrix4
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_conversion.rs	/^    fn from(coords: VectorN<N, D>) -> Self {$/;"	f
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_conversion.rs	/^    fn from(t: Point<N, D>) -> Self {$/;"	f
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^    fn from(coords: Vector4<N>) -> Self {$/;"	P	implementation:Quaternion
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^    fn from(q: Rotation3<N>) -> Self {$/;"	f
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^    fn from(q: UnitQuaternion<N>) -> Self {$/;"	f
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^    fn from(q: mint::Quaternion<N>) -> Self {$/;"	P	implementation:Quaternion
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^    fn from(euler: mint::EulerAngles<N, mint::IntraXYZ>) -> Self {$/;"	P	implementation:Rotation3
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^    fn from(q: Rotation2<N>) -> Self {$/;"	P	implementation:Matrix2
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^    fn from(q: Rotation2<N>) -> Self {$/;"	P	implementation:Matrix3
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^    fn from(q: Rotation3<N>) -> Self {$/;"	P	implementation:Matrix3
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^    fn from(q: Rotation3<N>) -> Self {$/;"	P	implementation:Matrix4
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_conversion.rs	/^    fn from(sim: Similarity<N, D, R>) -> Self {$/;"	f
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_conversion.rs	/^    fn from(t: Transform<N, D, C>) -> Self {$/;"	f
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs	/^    fn from(t: Translation<N, D>) -> Self {$/;"	f
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs	/^    fn from(vector: VectorN<N, D>) -> Self {$/;"	f
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs	/^    fn from(q: Rotation2<N>) -> Self {$/;"	f
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs	/^    fn from(q: UnitComplex<N>) -> Matrix3<N> {$/;"	f
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs	/^    fn from(q: UnitComplex<N>) -> Self {$/;"	f
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_conversion.rs	/^    fn from(m: CsMatrix<N, R, C, S>) -> Self {$/;"	f
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_conversion.rs	/^    fn from(m: Matrix<N, R, C, S>) -> Self {$/;"	f
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/cast.rs	/^    fn from<U: ToPrimitive>(n: U) -> Option<Self> {$/;"	P	implementation:Complex
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn from(re: &T) -> Self {$/;"	P	implementation:Complex
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn from(re: T) -> Self {$/;"	P	implementation:Complex
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^    fn from<T: ToPrimitive>(n: T) -> Option<Self>;$/;"	P	interface:NumCast
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^    fn from<U: ToPrimitive>(n: U) -> Option<Self> {$/;"	P	implementation:Wrapping
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^    fn from(r: ::core::ops::Range<X>) -> Uniform<X> {$/;"	P	implementation:Uniform
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^    fn from(r: ::core::ops::RangeInclusive<X>) -> Uniform<X> {$/;"	P	implementation:Uniform
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^    fn from(v: Vec<u32>) -> Self {$/;"	P	implementation:IndexVec
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^    fn from(v: Vec<usize>) -> Self {$/;"	P	implementation:IndexVec
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/expand.rs	/^    fn from(x: &'a str) -> Ref<'a> {$/;"	P	implementation:Ref
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/expand.rs	/^    fn from(x: usize) -> Ref<'static> {$/;"	P	implementation:Ref
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    fn from(c: Option<char>) -> Char {$/;"	P	implementation:Char
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    fn from(c: char) -> Char {$/;"	P	implementation:Char
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    fn from(exec: Exec) -> Regex {$/;"	P	implementation:Regex
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    fn from(m: Match<'t>) -> Range<usize> {$/;"	P	implementation:Range
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    fn from(exec: Exec) -> Regex {$/;"	P	implementation:Regex
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    fn from(m: Match<'t>) -> &'t str {$/;"	P	implementation:str
from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    fn from(m: Match<'t>) -> Range<usize> {$/;"	P	implementation:Range
from	/Users/williamcashman/Honours/Program/n_poly/src/error.rs	/^    fn from(err: io::Error) -> Self {$/;"	P	implementation:PolyErr
from	/Users/williamcashman/Honours/Program/n_poly/src/error.rs	/^    fn from(err: num::ParseIntError) -> Self {$/;"	P	implementation:PolyErr
from	/Users/williamcashman/Honours/Program/n_poly/src/error.rs	/^    fn from(kind: io::ErrorKind) -> Self {$/;"	P	implementation:PolyErr
from	/Users/williamcashman/Honours/Program/n_poly/src/ideals/mod.rs	/^    pub fn from(poly_ideal: &'b Ideal<'a, P>) -> Self {$/;"	P	implementation:MonomialIdeal
from_angle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs	/^    pub fn from_angle(angle: N) -> Self {$/;"	f
from_array_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs	/^macro_rules! from_array_impl($/;"	M
from_axis_angle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs	/^    pub fn from_axis_angle(axis: &Unit<Vector3<N>>, angle: N) -> Self {$/;"	P	implementation:Matrix4
from_axis_angle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^    pub fn from_axis_angle<SB>(axis: &Unit<Vector<N, U3, SB>>, angle: N) -> Self$/;"	f
from_axis_angle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^    pub fn from_axis_angle<SB>(axis: &Unit<Vector<N, U3, SB>>, angle: N) -> Self$/;"	f
from_be	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/int.rs	/^    fn from_be(x: Self) -> Self;$/;"	P	interface:PrimInt
from_coeff	/Users/williamcashman/Honours/Program/n_poly/src/polyu.rs	/^    pub(crate) fn from_coeff(ring: P, coeffs: Vec<P::Coeff>) -> Poly<P> {$/;"	P	implementation:Poly
from_column_slice_generic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^    pub fn from_column_slice_generic(nrows: R, ncols: C, slice: &[N]) -> Self {$/;"	f
from_columns	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^    pub fn from_columns<SB>(columns: &[Vector<N, R, SB>]) -> Self$/;"	f
from_complete	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs	/^        fn from_complete(complete_state: CompleteState) -> usize {$/;"	f	function:count
from_complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs	/^    pub fn from_complex(q: Complex<N>) -> Self {$/;"	f
from_complex_and_get	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs	/^    pub fn from_complex_and_get(q: Complex<N>) -> (Self, N) {$/;"	f
from_coordinates	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^    pub fn from_coordinates(coords: VectorN<N, D>) -> Self {$/;"	f
from_coordinates	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_alga.rs	/^    fn from_coordinates(coords: Self::Coordinates) -> Self {$/;"	f
from_cos_sin_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs	/^    pub fn from_cos_sin_unchecked(cos: N, sin: N) -> Self {$/;"	f
from_data	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn from_data(data: S) -> Self {$/;"	P	implementation:Matrix
from_data	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    pub(crate) fn from_data(data: S) -> Self {$/;"	P	implementation:CsMatrix
from_data_statically_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub unsafe fn from_data_statically_unchecked(data: S) -> Matrix<N, R, C, S> {$/;"	P	implementation:Matrix
from_debug	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        pub fn from_debug<T>(value: &'v T) -> Self$/;"	P	implementation:fmt_support::Value
from_default_env	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    pub fn from_default_env() -> Self {$/;"	P	implementation:Builder
from_default_env	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    pub fn from_default_env() -> Self {$/;"	P	implementation:Logger
from_diagonal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/matrix.rs	/^    fn from_diagonal(diag: &Self::Vector) -> Self;$/;"	P	interface:SquareMatrixMut
from_diagonal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^    pub fn from_diagonal<SB: Storage<N, D>>(diag: &Vector<N, D, SB>) -> Self$/;"	f
from_diagonal_element_generic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^    pub fn from_diagonal_element_generic(nrows: R, ncols: C, elt: N) -> Self$/;"	f
from_display	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        pub fn from_display<T>(value: &'v T) -> Self$/;"	P	implementation:fmt_support::Value
from_distribution_generic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^    pub fn from_distribution_generic<Distr: Distribution<N> + ?Sized, G: Rng + ?Sized>($/;"	f
from_element_generic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^    pub fn from_element_generic(nrows: R, ncols: C, elem: N) -> Self {$/;"	f
from_env	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^    pub fn from_env(env: &str) -> Builder {$/;"	P	implementation:Builder
from_env	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    pub fn from_env<'a, E>(env: E) -> Self$/;"	P	implementation:Builder
from_env	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    pub fn from_env<'a, E>(env: E) -> Self$/;"	P	implementation:Logger
from_env	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^pub fn from_env<'a, E>(env: E) -> Builder$/;"	f
from_error	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn from_error(error: E) -> Self {$/;"	P	implementation:ParseComplexError
from_euler_angles	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs	/^    pub fn from_euler_angles(roll: N, pitch: N, yaw: N) -> Self {$/;"	P	implementation:Matrix4
from_euler_angles	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^    pub fn from_euler_angles(roll: N, pitch: N, yaw: N) -> Self {$/;"	f
from_euler_angles	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^    pub fn from_euler_angles(roll: N, pitch: N, yaw: N) -> Self {$/;"	f
from_exact_iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    pub fn from_exact_iter<I>(iter: I) -> Option<Self>$/;"	f
from_f32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^    fn from_f32(n: f32) -> Option<Self> {$/;"	P	interface:FromPrimitive
from_f64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^    fn from_f64(n: f64) -> Option<Self> {$/;"	P	interface:FromPrimitive
from_fill	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^    pub fn from_fill<T>(value: &'v T) -> Self$/;"	P	implementation:Value
from_fn_generic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^    pub fn from_fn_generic<F>(nrows: R, ncols: C, mut f: F) -> Self$/;"	f
from_fov	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^    pub fn from_fov(aspect: N, vfov: N, znear: N, zfar: N) -> Self {$/;"	P	implementation:Orthographic3
from_hms	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    pub fn from_hms(hour: u32, min: u32, sec: u32) -> NaiveTime {$/;"	P	implementation:NaiveTime
from_hms_micro	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    pub fn from_hms_micro(hour: u32, min: u32, sec: u32, micro: u32) -> NaiveTime {$/;"	P	implementation:NaiveTime
from_hms_micro_opt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    pub fn from_hms_micro_opt(hour: u32, min: u32, sec: u32, micro: u32) -> Option<NaiveTime> {$/;"	P	implementation:NaiveTime
from_hms_milli	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    pub fn from_hms_milli(hour: u32, min: u32, sec: u32, milli: u32) -> NaiveTime {$/;"	P	implementation:NaiveTime
from_hms_milli_opt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    pub fn from_hms_milli_opt(hour: u32, min: u32, sec: u32, milli: u32) -> Option<NaiveTime> {$/;"	P	implementation:NaiveTime
from_hms_nano	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    pub fn from_hms_nano(hour: u32, min: u32, sec: u32, nano: u32) -> NaiveTime {$/;"	P	implementation:NaiveTime
from_hms_nano_opt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    pub fn from_hms_nano_opt(hour: u32, min: u32, sec: u32, nano: u32) -> Option<NaiveTime> {$/;"	P	implementation:NaiveTime
from_hms_opt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    pub fn from_hms_opt(hour: u32, min: u32, sec: u32) -> Option<NaiveTime> {$/;"	P	implementation:NaiveTime
from_homogeneous	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn from_homogeneous<SB>(v: Vector<N, DimSum<D, U1>, SB>) -> Option<VectorN<N, D>>$/;"	P	implementation:Vector
from_homogeneous	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs	/^    pub fn from_homogeneous(v: VectorN<N, DimNameSum<D, U1>>) -> Option<Self>$/;"	f
from_i128	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^    fn from_i128(n: i128) -> Option<Self> {$/;"	P	interface:FromPrimitive
from_i16	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^    fn from_i16(n: i16) -> Option<Self> {$/;"	P	interface:FromPrimitive
from_i32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^    fn from_i32(n: i32) -> Option<Self> {$/;"	P	interface:FromPrimitive
from_i64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    fn from_i64(n: i64) -> Option<Weekday> {$/;"	P	implementation:Weekday
from_i64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^    fn from_i64(n: i64) -> Option<Self>;$/;"	P	interface:FromPrimitive
from_i8	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^    fn from_i8(n: i8) -> Option<Self> {$/;"	P	interface:FromPrimitive
from_im	/Users/williamcashman/Honours/Program/n_poly/src/algebras/complex.rs	/^    pub fn from_im(val: i32) -> CC {$/;"	P	implementation:CC
from_imag	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^    pub fn from_imag(vector: Vector3<N>) -> Self {$/;"	P	implementation:Quaternion
from_inst	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    from_inst: InstPtr,$/;"	m	struct:SuffixCacheKey
from_isize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^    fn from_isize(n: isize) -> Option<Self> {$/;"	P	interface:FromPrimitive
from_isometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^    pub fn from_isometry(isometry: Isometry<N, D, R>, scaling: N) -> Self {$/;"	f
from_isoywd	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    pub fn from_isoywd(year: i32, week: u32, weekday: Weekday) -> NaiveDate {$/;"	P	implementation:NaiveDate
from_isoywd_opt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    pub fn from_isoywd_opt(year: i32, week: u32, weekday: Weekday) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
from_iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    fn from_iter<I>(iter: I) -> GenericArray<T, N>$/;"	f
from_iter	/Users/williamcashman/Honours/Program/n_poly/src/polym.rs	/^    fn from_iter<I: IntoIterator<Item = usize>>(iter: I) -> Self {$/;"	P	implementation:MultiIndex
from_iter_length_fail	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^fn from_iter_length_fail(length: usize, expected: usize) -> ! {$/;"	f
from_iterator_generic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^    pub fn from_iterator_generic<I>(nrows: R, ncols: C, iter: I) -> Self$/;"	f
from_le	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/int.rs	/^    fn from_le(x: Self) -> Self;$/;"	P	interface:PrimInt
from_local_date	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/local.rs	/^    fn from_local_date(&self, local: &NaiveDate) -> LocalResult<Date<Local>> {$/;"	P	implementation:Local
from_local_date	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^    fn from_local_date(&self, local: &NaiveDate) -> LocalResult<Date<Self>> {$/;"	P	interface:TimeZone
from_local_datetime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/local.rs	/^    fn from_local_datetime(&self, local: &NaiveDateTime) -> LocalResult<DateTime<Local>> {$/;"	P	implementation:Local
from_local_datetime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^    fn from_local_datetime(&self, local: &NaiveDateTime) -> LocalResult<DateTime<Self>> {$/;"	P	interface:TimeZone
from_matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^    pub fn from_matrix(m: &Matrix3<N>) -> Self$/;"	f
from_matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^    pub fn from_matrix(m: &Matrix2<N>) -> Self$/;"	P	implementation:Rotation2
from_matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^    pub fn from_matrix(m: &Matrix3<N>) -> Self$/;"	f
from_matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs	/^    pub fn from_matrix(m: &Matrix2<N>) -> Self$/;"	f
from_matrix_eps	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^    pub fn from_matrix_eps(m: &Matrix3<N>, eps: N, max_iter: usize, guess: Self) -> Self$/;"	f
from_matrix_eps	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^    pub fn from_matrix_eps(m: &Matrix2<N>, eps: N, mut max_iter: usize, guess: Self) -> Self$/;"	P	implementation:Rotation2
from_matrix_eps	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^    pub fn from_matrix_eps(m: &Matrix3<N>, eps: N, mut max_iter: usize, guess: Self) -> Self$/;"	f
from_matrix_eps	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs	/^    pub fn from_matrix_eps(m: &Matrix2<N>, eps: N, max_iter: usize, guess: Self) -> Self$/;"	f
from_matrix_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^    pub fn from_matrix_unchecked(matrix: Matrix4<N>) -> Self {$/;"	P	implementation:Orthographic3
from_matrix_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^    pub fn from_matrix_unchecked(matrix: Matrix4<N>) -> Self {$/;"	P	implementation:Perspective3
from_matrix_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^    pub fn from_matrix_unchecked(matrix: MatrixN<N, D>) -> Self {$/;"	f
from_matrix_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^    pub fn from_matrix_unchecked(matrix: MatrixN<N, DimNameSum<D, U1>>) -> Self {$/;"	f
from_mdf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn from_mdf(year: i32, mdf: Mdf) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
from_mdf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    pub fn from_mdf(Mdf(mdf): Mdf) -> Of {$/;"	P	implementation:Of
from_mut_slice	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    pub fn from_mut_slice(slice: &mut [T]) -> &mut GenericArray<T, N> {$/;"	f
from_num_days_from_ce	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    pub fn from_num_days_from_ce(days: i32) -> NaiveDate {$/;"	P	implementation:NaiveDate
from_num_days_from_ce_opt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    pub fn from_num_days_from_ce_opt(days: i32) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
from_num_seconds_from_midnight	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    pub fn from_num_seconds_from_midnight(secs: u32, nano: u32) -> NaiveTime {$/;"	P	implementation:NaiveTime
from_num_seconds_from_midnight_opt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    pub fn from_num_seconds_from_midnight_opt(secs: u32, nano: u32) -> Option<NaiveTime> {$/;"	P	implementation:NaiveTime
from_of	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn from_of(year: i32, of: Of) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
from_of	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    pub fn from_of(Of(of): Of) -> Mdf {$/;"	P	implementation:Mdf
from_offset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/fixed.rs	/^    fn from_offset(offset: &FixedOffset) -> FixedOffset { *offset }$/;"	P	implementation:FixedOffset
from_offset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/local.rs	/^    fn from_offset(_offset: &FixedOffset) -> Local { Local }$/;"	P	implementation:Local
from_offset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^    fn from_offset(offset: &Self::Offset) -> Self;$/;"	P	interface:TimeZone
from_offset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/utc.rs	/^    fn from_offset(_state: &Utc) -> Utc { Utc }$/;"	P	implementation:Utc
from_partial_diagonal_generic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^    pub fn from_partial_diagonal_generic(nrows: R, ncols: C, elts: &[N]) -> Self$/;"	f
from_parts	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^    pub fn from_parts(translation: Translation<N, D>, rotation: R) -> Self {$/;"	f
from_parts	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^    pub fn from_parts<SB>(scalar: N, vector: Vector<N, U3, SB>) -> Self$/;"	P	implementation:Quaternion
from_parts	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^    pub fn from_parts(translation: Translation<N, D>, rotation: R, scaling: N) -> Self {$/;"	f
from_polar	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub fn from_polar(r: &T, theta: &T) -> Self {$/;"	P	implementation:Complex
from_polar_decomposition	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^    pub fn from_polar_decomposition<SB>(scale: N, theta: N, axis: Unit<Vector<N, U3, SB>>) -> Se/;"	f
from_primitive	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^    fn from_primitive(value: Primitive<'v>) -> Self {$/;"	P	implementation:Value
from_quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^    pub fn from_quaternion(q: Quaternion<N>) -> Self {$/;"	f
from_ratio	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/bernoulli.rs	/^    pub fn from_ratio(numerator: u32, denominator: u32) -> Result<Bernoulli, BernoulliError> {$/;"	P	implementation:Bernoulli
from_re	/Users/williamcashman/Honours/Program/n_poly/src/algebras/complex.rs	/^    pub fn from_re(val: i32) -> CC {$/;"	P	implementation:CC
from_real	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn from_real(re: Self::RealField) -> Self {$/;"	P	implementation:Complex
from_real	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn from_real(re: Self::RealField) -> Self;$/;"	P	interface:ComplexField
from_real	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn from_real(r: E::RealField) -> Option<Self> {$/;"	P	interface:Scaling
from_real	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn from_real(r: E::RealField) -> Option<Self> {$/;"	f
from_real	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^    pub fn from_real(r: N) -> Self {$/;"	P	implementation:Quaternion
from_ref_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs	/^    pub fn from_ref_unchecked<'a>(value: &'a T) -> &'a Self {$/;"	P	implementation:Unit
from_rng	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/small.rs	/^    fn from_rng<R: RngCore>(rng: R) -> Result<Self, Error> {$/;"	P	implementation:SmallRng
from_rng	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/std.rs	/^    fn from_rng<R: RngCore>(rng: R) -> Result<Self, Error> {$/;"	P	implementation:StdRng
from_rotation_matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^    pub fn from_rotation_matrix(rotmat: &Rotation3<N>) -> Self {$/;"	f
from_rotation_matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs	/^    pub fn from_rotation_matrix(rotmat: &Rotation2<N>) -> Self {$/;"	f
from_row_slice_generic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^    pub fn from_row_slice_generic(nrows: R, ncols: C, slice: &[N]) -> Self {$/;"	f
from_rows	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^    pub fn from_rows<SB>(rows: &[Matrix<N, U1, C, SB>]) -> Self$/;"	f
from_scaled_axis	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs	/^    pub fn from_scaled_axis(axisangle: Vector3<N>) -> Self {$/;"	P	implementation:Matrix4
from_scaled_axis	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^    pub fn from_scaled_axis<SB>(axisangle: Vector<N, U3, SB>) -> Self$/;"	f
from_scaled_axis	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^    pub fn from_scaled_axis<SB: Storage<N, U1>>(axisangle: Vector<N, U1, SB>) -> Self {$/;"	P	implementation:Rotation2
from_scaled_axis	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^    pub fn from_scaled_axis<SB: Storage<N, U3>>(axisangle: Vector<N, U3, SB>) -> Self {$/;"	f
from_scaled_axis	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs	/^    pub fn from_scaled_axis<SB: Storage<N, U1>>(axisangle: Vector<N, U1, SB>) -> Self {$/;"	f
from_scaled_axis_eps	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^    pub fn from_scaled_axis_eps<SB>(axisangle: Vector<N, U3, SB>, eps: N) -> Self$/;"	f
from_scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^    pub fn from_scaling(scaling: N) -> Self {$/;"	f
from_seed	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/small.rs	/^    fn from_seed(seed: Self::Seed) -> Self {$/;"	P	implementation:SmallRng
from_seed	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/std.rs	/^    fn from_seed(seed: Self::Seed) -> Self {$/;"	P	implementation:StdRng
from_slice	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    pub fn from_slice(slice: &[T]) -> &GenericArray<T, N> {$/;"	f
from_slice	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs	/^    pub fn from_slice(components: &[N]) -> Self {$/;"	f
from_slice_generic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs	/^    pub fn from_slice_generic(data: &'a [N], nrows: R, ncols: C) -> Self {$/;"	P	implementation:MatrixSliceMN
from_slice_generic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs	/^    pub fn from_slice_generic(data: &'a mut [N], nrows: R, ncols: C) -> Self {$/;"	P	implementation:MatrixSliceMutMN
from_slice_generic_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs	/^    pub unsafe fn from_slice_generic_unchecked($/;"	P	implementation:MatrixSliceMN
from_slice_generic_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs	/^    pub unsafe fn from_slice_generic_unchecked($/;"	P	implementation:MatrixSliceMutMN
from_slice_with_strides_generic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs	/^    pub fn from_slice_with_strides_generic($/;"	P	implementation:MatrixSliceMN
from_slice_with_strides_generic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs	/^    pub fn from_slice_with_strides_generic($/;"	P	implementation:MatrixSliceMutMN
from_slice_with_strides_generic_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs	/^    pub unsafe fn from_slice_with_strides_generic_unchecked($/;"	P	implementation:MatrixSliceMN
from_slice_with_strides_generic_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs	/^    pub unsafe fn from_slice_with_strides_generic_unchecked($/;"	P	implementation:MatrixSliceMutMN
from_std	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    pub fn from_std(duration: StdDuration) -> Result<Duration, OutOfRangeError> {$/;"	P	implementation:Duration
from_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn from_str(s: &str) -> ParseResult<DateTime<FixedOffset>> {$/;"	P	implementation:DateTime
from_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn from_str(s: &str) -> ParseResult<DateTime<Local>> {$/;"	P	implementation:DateTime
from_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn from_str(s: &str) -> ParseResult<DateTime<Utc>> {$/;"	P	implementation:DateTime
from_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    fn from_str(s: &str) -> Result<Self, Self::Err> {$/;"	P	implementation:Weekday
from_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn from_str(s: &str) -> ParseResult<NaiveDate> {$/;"	P	implementation:NaiveDate
from_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn from_str(s: &str) -> ParseResult<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
from_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    fn from_str(s: &str) -> ParseResult<NaiveTime> {$/;"	P	implementation:NaiveTime
from_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^    pub fn from_str(key: &'k str) -> Self {$/;"	P	implementation:Key
from_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn from_str(level: &str) -> Result<Level, Self::Err> {$/;"	P	implementation:Level
from_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn from_str(level: &str) -> Result<LevelFilter, Self::Err> {$/;"	P	implementation:LevelFilter
from_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn from_str(s: &str) -> Result<Self, Self::Err> {$/;"	f
from_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    fn from_str(s: &str) -> Result<Regex, Error> {$/;"	P	implementation:Regex
from_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    fn from_str(s: &str) -> Result<Regex, Error> {$/;"	P	implementation:Regex
from_str	/Users/williamcashman/Honours/Program/n_poly/src/algebras/complex.rs	/^    fn from_str(s: &str) -> Result<Self, Self::Err> {$/;"	P	implementation:CC
from_str	/Users/williamcashman/Honours/Program/n_poly/src/algebras/finite_field.rs	/^    fn from_str(s: &str) -> Result<Self, Self::Err> {$/;"	P	implementation:FF
from_str	/Users/williamcashman/Honours/Program/n_poly/src/algebras/integers.rs	/^    fn from_str(s: &str) -> Result<Self, Self::Err> {$/;"	P	implementation:ZZ
from_str	/Users/williamcashman/Honours/Program/n_poly/src/algebras/real.rs	/^    fn from_str(s: &str) -> Result<Self, Self::Err> {$/;"	P	implementation:RR
from_str	/Users/williamcashman/Honours/Program/n_poly/src/parse.rs	/^    fn from_str(ring:  P, s: &str) -> Result<Self, Self::Err> {$/;"	P	implementation:Poly
from_str	/Users/williamcashman/Honours/Program/n_poly/src/parse.rs	/^    fn from_str(ring: P, s: &str) -> Result<Self, Self::Err>;$/;"	P	interface:MyFromStr
from_str_generic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^fn from_str_generic<T, E, F>(s: &str, from: F) -> Result<Complex<T>, ParseComplexError<E>>$/;"	f
from_str_radix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn from_str_radix(s: &str, radix: u32) -> Result<Self, Self::FromStrRadixErr> {$/;"	P	implementation:Complex
from_str_radix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^    fn from_str_radix(str: &str, radix: u32) -> Result<Self, Self::FromStrRadixErr> {$/;"	f
from_str_radix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^    fn from_str_radix(str: &str, radix: u32) -> Result<Self, Self::FromStrRadixErr>;$/;"	P	interface:Num
from_str_radix_multi_byte_fail	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^fn from_str_radix_multi_byte_fail() {$/;"	f
from_str_radix_unwrap	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^fn from_str_radix_unwrap() {$/;"	f
from_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/subset.rs	/^    fn from_subset(element: &SS) -> Self {$/;"	P	implementation:SP
from_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/subset.rs	/^    fn from_subset(element: &T) -> Self;$/;"	P	interface:SupersetOf
from_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/subset.rs	/^    fn from_superset(element: &T) -> Option<Self> {$/;"	P	interface:SubsetOf
from_superset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^    unsafe fn from_superset_unchecked(_: &T) -> Self {$/;"	P	implementation:Id
from_superset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/subset.rs	/^    unsafe fn from_superset_unchecked(element: &Complex<N2>) -> Complex<N1> {$/;"	P	implementation:Complex
from_superset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/subset.rs	/^    unsafe fn from_superset_unchecked(element: &T) -> Self;$/;"	P	interface:SubsetOf
from_superset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^    fn from_superset_unchecked(m: &MatrixMN<N2, R2, C2>) -> Self {$/;"	f
from_superset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_conversion.rs	/^    fn from_superset_unchecked(iso: &Isometry<N2, D, R2>) -> Self {$/;"	f
from_superset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_conversion.rs	/^    fn from_superset_unchecked(m: &MatrixN<N2, DimNameSum<D, U1>>) -> Self {$/;"	f
from_superset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_conversion.rs	/^    fn from_superset_unchecked(sim: &Similarity<N2, D, R2>) -> Self {$/;"	f
from_superset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_conversion.rs	/^    fn from_superset_unchecked(t: &Transform<N2, D, C>) -> Self {$/;"	f
from_superset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_conversion.rs	/^    fn from_superset_unchecked(m: &Point<N2, D>) -> Self {$/;"	f
from_superset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_conversion.rs	/^    fn from_superset_unchecked(v: &VectorN<N2, DimNameSum<D, U1>>) -> Self {$/;"	f
from_superset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^    fn from_superset_unchecked(iso: &Isometry<N2, U3, R>) -> Self {$/;"	f
from_superset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^    fn from_superset_unchecked(m: &Matrix4<N2>) -> Self {$/;"	P	implementation:UnitQuaternion
from_superset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^    fn from_superset_unchecked(q: &Quaternion<N2>) -> Self {$/;"	f
from_superset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^    fn from_superset_unchecked(rot: &Rotation3<N2>) -> Self {$/;"	f
from_superset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^    fn from_superset_unchecked(sim: &Similarity<N2, U3, R>) -> Self {$/;"	f
from_superset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^    fn from_superset_unchecked(t: &Transform<N2, U3, C>) -> Self {$/;"	f
from_superset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^    fn from_superset_unchecked(uq: &UnitQuaternion<N2>) -> Self {$/;"	f
from_superset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^    fn from_superset_unchecked(iso: &Isometry<N2, D, R>) -> Self {$/;"	f
from_superset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^    fn from_superset_unchecked(m: &MatrixN<N2, DimNameSum<D, U1>>) -> Self {$/;"	f
from_superset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^    fn from_superset_unchecked(q: &UnitComplex<N2>) -> Self {$/;"	f
from_superset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^    fn from_superset_unchecked(q: &UnitQuaternion<N2>) -> Self {$/;"	f
from_superset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^    fn from_superset_unchecked(rot: &Rotation<N2, D>) -> Self {$/;"	f
from_superset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^    fn from_superset_unchecked(sim: &Similarity<N2, D, R>) -> Self {$/;"	f
from_superset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^    fn from_superset_unchecked(t: &Transform<N2, D, C>) -> Self {$/;"	f
from_superset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_conversion.rs	/^    fn from_superset_unchecked(m: &MatrixN<N2, DimNameSum<D, U1>>) -> Self {$/;"	f
from_superset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_conversion.rs	/^    fn from_superset_unchecked(sim: &Similarity<N2, D, R2>) -> Self {$/;"	f
from_superset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_conversion.rs	/^    fn from_superset_unchecked(t: &Transform<N2, D, C>) -> Self {$/;"	f
from_superset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_conversion.rs	/^    fn from_superset_unchecked(m: &MatrixN<N2, DimNameSum<D, U1>>) -> Self {$/;"	f
from_superset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_conversion.rs	/^    fn from_superset_unchecked(t: &Transform<N2, D, C2>) -> Self {$/;"	f
from_superset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs	/^    fn from_superset_unchecked(iso: &Isometry<N2, D, R>) -> Self {$/;"	f
from_superset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs	/^    fn from_superset_unchecked(m: &MatrixN<N2, DimNameSum<D, U1>>) -> Self {$/;"	f
from_superset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs	/^    fn from_superset_unchecked(rot: &Translation<N2, D>) -> Self {$/;"	f
from_superset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs	/^    fn from_superset_unchecked(sim: &Similarity<N2, D, R>) -> Self {$/;"	f
from_superset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs	/^    fn from_superset_unchecked(t: &Transform<N2, D, C>) -> Self {$/;"	f
from_superset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs	/^    fn from_superset_unchecked(iso: &Isometry<N2, U2, R>) -> Self {$/;"	f
from_superset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs	/^    fn from_superset_unchecked(m: &Matrix3<N2>) -> Self {$/;"	P	implementation:UnitComplex
from_superset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs	/^    fn from_superset_unchecked(rot: &Rotation2<N2>) -> Self {$/;"	f
from_superset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs	/^    fn from_superset_unchecked(sim: &Similarity<N2, U2, R>) -> Self {$/;"	f
from_superset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs	/^    fn from_superset_unchecked(t: &Transform<N2, U2, C>) -> Self {$/;"	f
from_superset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs	/^    fn from_superset_unchecked(uq: &UnitComplex<N2>) -> Self {$/;"	f
from_sval	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        fn from_sval(_: sval::value::Error) -> Self {$/;"	P	implementation:sval_support::Error
from_sval	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        pub fn from_sval<T>(value: &'v T) -> Self$/;"	P	implementation:sval_support::Value
from_terms	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    pub fn from_terms(terms: Vec<Term<P>>, ring: &'a P) -> Poly<'a, P> {$/;"	P	implementation:Poly
from_terms_test	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    fn from_terms_test() {$/;"	f	module:tests
from_terms_unchecked	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    pub fn from_terms_unchecked(terms: Vec<Term<P>>, ring: &'a P) -> Poly<'a, P> {$/;"	P	implementation:Poly
from_timestamp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    pub fn from_timestamp(secs: i64, nsecs: u32) -> NaiveDateTime {$/;"	P	implementation:NaiveDateTime
from_timestamp_opt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    pub fn from_timestamp_opt(secs: i64, nsecs: u32) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
from_triplet	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_conversion.rs	/^    pub fn from_triplet($/;"	P	implementation:CsMatrix
from_triplet_generic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_conversion.rs	/^    pub fn from_triplet_generic($/;"	f
from_u128	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^    fn from_u128(n: u128) -> Option<Self> {$/;"	P	interface:FromPrimitive
from_u16	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^    fn from_u16(n: u16) -> Option<Self> {$/;"	P	interface:FromPrimitive
from_u32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^    fn from_u32(n: u32) -> Option<Self> {$/;"	P	interface:FromPrimitive
from_u64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    fn from_u64(n: u64) -> Option<Weekday> {$/;"	P	implementation:Weekday
from_u64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^    fn from_u64(n: u64) -> Option<Self>;$/;"	P	interface:FromPrimitive
from_u8	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^    fn from_u8(n: u8) -> Option<Self> {$/;"	P	interface:FromPrimitive
from_usize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn from_usize(u: usize) -> Option<Level> {$/;"	P	implementation:Level
from_usize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn from_usize(u: usize) -> Option<LevelFilter> {$/;"	P	implementation:LevelFilter
from_usize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^    fn from_usize(dim: usize) -> Self {$/;"	P	implementation:Dynamic
from_usize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^    fn from_usize(dim: usize) -> Self {$/;"	P	implementation:U1
from_usize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^    fn from_usize(dim: usize) -> Self {$/;"	P	implementation:UInt
from_usize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^    fn from_usize(dim: usize) -> Self;$/;"	P	interface:Dim
from_usize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^    fn from_usize(n: usize) -> Option<Self> {$/;"	P	interface:FromPrimitive
from_utc	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    pub fn from_utc(date: NaiveDate, offset: Tz::Offset) -> Date<Tz> {$/;"	P	implementation:Date
from_utc	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    pub fn from_utc(datetime: NaiveDateTime, offset: Tz::Offset) -> DateTime<Tz> {$/;"	P	implementation:DateTime
from_utc_date	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/local.rs	/^    fn from_utc_date(&self, utc: &NaiveDate) -> Date<Local> {$/;"	P	implementation:Local
from_utc_date	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^    fn from_utc_date(&self, utc: &NaiveDate) -> Date<Self> {$/;"	P	interface:TimeZone
from_utc_datetime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/local.rs	/^    fn from_utc_datetime(&self, utc: &NaiveDateTime) -> DateTime<Local> {$/;"	P	implementation:Local
from_utc_datetime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^    fn from_utc_datetime(&self, utc: &NaiveDateTime) -> DateTime<Self> {$/;"	P	interface:TimeZone
from_vec_generic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^    pub fn from_vec_generic(nrows: R, ncols: C, data: Vec<N>) -> Self {$/;"	f
from_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/id.rs	/^    fn from_vector(v: E::Coordinates) -> Option<Self> {$/;"	P	implementation:Id
from_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn from_vector(v: E::Coordinates) -> Option<Self>;$/;"	P	interface:Translation
from_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^    pub fn from_vector(vector: Vector4<N>) -> Self {$/;"	P	implementation:Quaternion
from_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs	/^    pub fn from_vector(vector: VectorN<N, D>) -> Translation<N, D> {$/;"	f
from_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alga.rs	/^    fn from_vector(v: VectorN<N, D>) -> Option<Self> {$/;"	f
from_year	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    pub fn from_year(year: i32) -> YearFlags {$/;"	P	implementation:YearFlags
from_year_mod_400	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    pub fn from_year_mod_400(year: i32) -> YearFlags {$/;"	P	implementation:YearFlags
from_ymd	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    pub fn from_ymd(year: i32, month: u32, day: u32) -> NaiveDate {$/;"	P	implementation:NaiveDate
from_ymd_opt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    pub fn from_ymd_opt(year: i32, month: u32, day: u32) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
from_yo	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    pub fn from_yo(year: i32, ordinal: u32) -> NaiveDate {$/;"	P	implementation:NaiveDate
from_yo_opt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    pub fn from_yo_opt(year: i32, ordinal: u32) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
full_byte_classes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn full_byte_classes() {$/;"	f	module:tests
full_piv_lu	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs	/^    pub fn full_piv_lu(self) -> FullPivLU<N, R, C> {$/;"	f
full_piv_lu	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/mod.rs	/^mod full_piv_lu;$/;"	n
functional	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^pub mod functional;$/;"	n
fused	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    fused: Option<bool>,$/;"	m	struct:MergeBy
gamma	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^#[cfg(feature = "std")] mod gamma;$/;"	n
gamma_a	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    gamma_a: Gamma,$/;"	m	struct:Beta
gamma_b	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    gamma_b: Gamma,$/;"	m	struct:Beta
gauss_step	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs	/^pub fn gauss_step<N, R: Dim, C: Dim, S>(matrix: &mut Matrix<N, R, C, S>, diag: N, i: usize)$/;"	f
gauss_step_swap	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs	/^pub fn gauss_step_swap<N, R: Dim, C: Dim, S>($/;"	f
gcd	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn gcd() {$/;"	f	module:gcd_tests
gcd	/Users/williamcashman/Honours/Program/n_poly/src/algebras/integers.rs	/^    fn gcd(&self, other: &Self) -> Self {$/;"	P	implementation:ZZ
gcd	/Users/williamcashman/Honours/Program/n_poly/src/algebras/mod.rs	/^    fn gcd(&self, _other: &Self) -> Self {$/;"	P	implementation:F
gcd	/Users/williamcashman/Honours/Program/n_poly/src/algebras/mod.rs	/^    fn gcd(&self, other: &Self) -> Self;$/;"	P	interface:EuclideanDomain
gcd	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    fn gcd(&self, _other: &Self) -> Self {$/;"	P	implementation:Poly
gcd	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    fn gcd(&self, other: &Self) -> Self;$/;"	P	interface:Variate
gcd	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    pub fn gcd(&self, other: &Self) -> Self {$/;"	P	implementation:Term
gcd	/Users/williamcashman/Honours/Program/n_poly/src/polym.rs	/^    fn gcd(&self, other: &Self) -> Self {$/;"	P	implementation:MultiIndex
gcd	/Users/williamcashman/Honours/Program/n_poly/src/polyu.rs	/^    fn gcd(&self, other: &Self) -> Self {$/;"	P	implementation:UniIndex
gcd_test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    macro_rules! gcd_test {$/;"	M	module:gcd_tests
gcd_tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^mod gcd_tests {$/;"	n
ge	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn ge(&self, other: &Level) -> bool {$/;"	P	implementation:Level
ge	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn ge(&self, other: &Level) -> bool {$/;"	P	implementation:LevelFilter
ge	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn ge(&self, other: &LevelFilter) -> bool {$/;"	P	implementation:Level
ge	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn ge(&self, other: &LevelFilter) -> bool {$/;"	P	implementation:LevelFilter
ge	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    fn ge(&self, right: &Self) -> bool {$/;"	f
ge	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^    fn ge(&self, right: &Self) -> bool {$/;"	f
ge_mask	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/utils.rs	/^    fn ge_mask(self, other: Self) -> Self::Mask;$/;"	P	interface:FloatSIMDUtils
gemm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^    pub fn gemm<R2: Dim, C2: Dim, R3: Dim, C3: Dim, SB, SC>($/;"	f
gemm_ad	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^    pub fn gemm_ad<R2: Dim, C2: Dim, R3: Dim, C3: Dim, SB, SC>($/;"	f
gemm_tr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^    pub fn gemm_tr<R2: Dim, C2: Dim, R3: Dim, C3: Dim, SB, SC>($/;"	f
gemv	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^    pub fn gemv<R2: Dim, C2: Dim, D3: Dim, SB, SC>($/;"	f
gemv_ad	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^    pub fn gemv_ad<R2: Dim, C2: Dim, D3: Dim, SB, SC>($/;"	f
gemv_symm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^    pub fn gemv_symm<D2: Dim, D3: Dim, SB, SC>($/;"	f
gemv_tr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^    pub fn gemv_tr<R2: Dim, C2: Dim, D3: Dim, SB, SC>($/;"	f
gemv_xx	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^    fn gemv_xx<R2: Dim, C2: Dim, D3: Dim, SB, SC>($/;"	f
gen	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^    fn gen<T>(&mut self) -> T$/;"	P	interface:Rng
gen_bool	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^    fn gen_bool(&mut self, p: f64) -> bool {$/;"	P	interface:Rng
gen_index	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^fn gen_index<R: Rng + ?Sized>(rng: &mut R, ubound: usize) -> usize {$/;"	f
gen_range	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^    fn gen_range<T: SampleUniform, B1, B2>(&mut self, low: B1, high: B2) -> T$/;"	P	interface:Rng
gen_ratio	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^    fn gen_ratio(&mut self, numerator: u32, denominator: u32) -> bool {$/;"	P	interface:Rng
general	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/lib.rs	/^pub mod general;$/;"	n
generate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    fn generate<F>(mut f: F) -> GenericArray<T, N>$/;"	f
generate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^    fn generate<F>(f: F) -> Self::Sequence$/;"	P	interface:GenericSequence
generate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^    fn generate<F>(f: F) -> Self::Sequence$/;"	f
generate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/reseeding.rs	/^    fn generate(&mut self, results: &mut Self::Results) {$/;"	f
generated	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/lib.rs	/^mod generated {$/;"	n
generic_mixed_f64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/crand.rs	/^fn generic_mixed_f64() {$/;"	f
generic_standard_f64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/crand.rs	/^fn generic_standard_f64() {$/;"	f
generic_uniform_f64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/crand.rs	/^fn generic_uniform_f64() {$/;"	f
generic_uniform_i32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/crand.rs	/^fn generic_uniform_i32() {$/;"	f
gens	/Users/williamcashman/Honours/Program/n_poly/src/ideals/mod.rs	/^    gens: Vec<Term<P>>,$/;"	m	struct:MonomialIdeal
gens	/Users/williamcashman/Honours/Program/n_poly/src/ideals/mod.rs	/^    pub gens: Vec<Poly<'a, P>>,$/;"	m	struct:Ideal
geometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs	/^pub mod geometry;$/;"	n
ger	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^    pub fn ger<D2: Dim, D3: Dim, SB, SC>($/;"	f
ger_symm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^    pub fn ger_symm<D2: Dim, D3: Dim, SB, SC>($/;"	f
gerc	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^    pub fn gerc<D2: Dim, D3: Dim, SB, SC>($/;"	f
gerx	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^    fn gerx<D2: Dim, D3: Dim, SB, SC>($/;"	f
get	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn get(&self, index: usize) -> &T {$/;"	P	implementation:LRUList
get	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    fn get(&self) -> Option<String> {$/;"	P	implementation:Var
get	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^        fn get() {$/;"	f	module:std_support::tests
get	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^        fn get<'v>(&'v self, key: Key) -> Option<Value<'v>> {$/;"	f	module:std_support
get	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^    fn get() {$/;"	f	module:tests
get	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^    fn get<'v>(&'v self, key: Key) -> Option<Value<'v>> {$/;"	P	interface:Source
get	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^    fn get<'v>(&'v self, key: Key) -> Option<Value<'v>> {$/;"	f
get	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn get(&self) -> &'a str {$/;"	P	implementation:MaybeStaticStr
get	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    fn get(self, matrix: &'a Matrix<N, R, C, S>) -> Option<Self::Output> {$/;"	P	interface:MatrixIndex
get	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    pub fn get<'a, I>(&'a self, index: I) -> Option<I::Output>$/;"	P	implementation:Matrix
get	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn get(&mut self, key: SuffixCacheKey, pc: InstPtr) -> Option<InstPtr> {$/;"	P	implementation:SuffixCache
get	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    pub fn get(&self, i: usize) -> Option<(usize, usize)> {$/;"	P	implementation:CaptureLocations
get	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    pub fn get(&self, i: usize) -> Option<Match<'t>> {$/;"	P	implementation:Captures
get	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    pub fn get(&self, i: usize) -> Option<(usize, usize)> {$/;"	P	implementation:CaptureLocations
get	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    pub fn get(&self, i: usize) -> Option<Match<'t>> {$/;"	P	implementation:Captures
get	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    fn get(&self, ind: usize) -> Option<&usize>;$/;"	P	interface:Variate
get	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    pub fn get(&self, i: usize) -> Option<&Term<P>> {$/;"	P	implementation:Poly
get	/Users/williamcashman/Honours/Program/n_poly/src/polym.rs	/^    fn get(&self, ind: usize) -> Option<&usize> {$/;"	P	implementation:MultiIndex
get	/Users/williamcashman/Honours/Program/n_poly/src/polyu.rs	/^    fn get(&self, _ind: usize) -> Option<&usize> {$/;"	P	implementation:UniIndex
get_address_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs	/^    unsafe fn get_address_unchecked(&self, irow: usize, icol: usize) -> *const N {$/;"	P	interface:Storage
get_address_unchecked_linear	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs	/^    unsafe fn get_address_unchecked_linear(&self, i: usize) -> *const N {$/;"	P	interface:Storage
get_address_unchecked_linear_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs	/^    unsafe fn get_address_unchecked_linear_mut(&mut self, i: usize) -> *mut N {$/;"	P	interface:StorageMut
get_address_unchecked_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs	/^    unsafe fn get_address_unchecked_mut(&mut self, irow: usize, icol: usize) -> *mut N {$/;"	P	interface:StorageMut
get_bit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn get_bit<IM: InternalMarker>(&self, &I) -> Self::Output;$/;"	P	interface:GetBit
get_bit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn get_bit<IM: InternalMarker>(&self, _: &I) -> Self::Output {$/;"	P	implementation:UTerm
get_bit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn get_bit<IM: InternalMarker>(&self, _: &U0) -> Self::Output {$/;"	f
get_bit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn get_bit<IM: InternalMarker>(&self, i: &UInt<Ui, Bi>) -> Self::Output {$/;"	f
get_closest_trait	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga_derive-0.9.2/src/lib.rs	/^fn get_closest_trait(tra1t: &str) -> &str {$/;"	f
get_dependencies	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga_derive-0.9.2/src/lib.rs	/^fn get_dependencies(tra1t: &str, op: usize) -> Vec<String> {$/;"	f
get_filter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    fn get_filter(&self) -> Option<String> {$/;"	P	implementation:Env
get_fork_counter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/reseeding.rs	/^    pub fn get_fork_counter() -> usize {$/;"	f	module:fork
get_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn get_mut(&mut self, index: usize) -> &mut T {$/;"	P	implementation:LRUList
get_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    fn get_mut(self, matrix: &'a mut Matrix<N, R, C, S>) -> Option<Self::OutputMut> {$/;"	P	interface:MatrixIndexMut
get_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    pub fn get_mut<'a, I>(&'a mut self, index: I) -> Option<I::OutputMut>$/;"	P	implementation:Matrix
get_next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lazy_buffer.rs	/^    pub fn get_next(&mut self) -> bool {$/;"	f
get_op_arity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga_derive-0.9.2/src/lib.rs	/^fn get_op_arity(tra1t: &str) -> usize {$/;"	f
get_or	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/cache.rs	/^        pub fn get_or(&self, create: impl FnOnce() -> T) -> CachedGuard<T> {$/;"	P	implementation:imp::Cached
get_poly	/Users/williamcashman/Honours/Program/n_poly/src/ideals/mod.rs	/^    pub fn get_poly(&self, term: &Term<P>) -> Option<&Poly<'a, P>> {$/;"	P	implementation:MonomialIdeal
get_props	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga_derive-0.9.2/src/lib.rs	/^fn get_props(tra1t: &str) -> Vec<(Ident, Ident, usize)> {$/;"	f
get_ptr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn get_ptr(&self, state: &State) -> Option<StatePtr> {$/;"	P	implementation:StateMap
get_state	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn get_state(&self, si: StatePtr) -> Option<&State> {$/;"	P	implementation:StateMap
get_uc	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    pub(crate) fn get_uc(&self, i: usize) -> &Term<P> {$/;"	P	implementation:Poly
get_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    pub unsafe fn get_unchecked<'a, I>(&'a self, index: I) -> I::Output$/;"	P	implementation:Matrix
get_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    unsafe fn get_unchecked(self, matrix: &'a Matrix<N, R, C, S>) -> Self::Output {$/;"	f
get_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    unsafe fn get_unchecked(self, matrix: &'a Matrix<N, R, C, S>) -> Self::Output;$/;"	P	interface:MatrixIndex
get_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs	/^    unsafe fn get_unchecked(&self, irow: usize, icol: usize) -> &N {$/;"	P	interface:Storage
get_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^    pub unsafe fn get_unchecked(&self, i: usize) -> &N {$/;"	f
get_unchecked_linear	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs	/^    unsafe fn get_unchecked_linear(&self, i: usize) -> &N {$/;"	P	interface:Storage
get_unchecked_linear_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs	/^    unsafe fn get_unchecked_linear_mut(&mut self, i: usize) -> &mut N {$/;"	P	interface:StorageMut
get_unchecked_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    pub unsafe fn get_unchecked_mut<'a, I>(&'a mut self, index: I) -> I::OutputMut$/;"	P	implementation:Matrix
get_unchecked_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    unsafe fn get_unchecked_mut(self, matrix: &'a mut Matrix<N, R, C, S>) -> Self::OutputMut$/;"	f
get_unchecked_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    unsafe fn get_unchecked_mut(self, matrix: &'a mut Matrix<N, R, C, S>) -> Self::OutputMut;$/;"	P	interface:MatrixIndexMut
get_unchecked_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs	/^    unsafe fn get_unchecked_mut(&mut self, irow: usize, icol: usize) -> &mut N {$/;"	P	interface:StorageMut
get_unchecked_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^    pub unsafe fn get_unchecked_mut(&mut self, i: usize) -> &mut N {$/;"	f
get_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    fn get_value(&self, i: usize) -> &N {$/;"	f
get_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    fn get_value(&self, i: usize) -> &N;$/;"	P	interface:CsStorage
get_value_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    unsafe fn get_value_unchecked(&self, i: usize) -> &N {$/;"	f
get_value_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    unsafe fn get_value_unchecked(&self, i: usize) -> &N;$/;"	P	interface:CsStorage
get_weight	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^        fn get_weight<T>(item: &(u32, T)) -> u32 {$/;"	f	function:test::test_weighted
get_write_style	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    fn get_write_style(&self) -> Option<String> {$/;"	P	implementation:Env
givens	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/mod.rs	/^pub mod givens;$/;"	n
glex	/Users/williamcashman/Honours/Program/n_poly/src/polym.rs	/^    fn glex(a: &Self, b: &Self) -> Ordering {$/;"	P	implementation:MultiIndex
glex	/Users/williamcashman/Honours/Program/n_poly/src/polym.rs	/^    fn glex(a: &Self, b: &Self) -> Ordering;$/;"	P	interface:MultiIndexTrait
glob	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/humantime/extern_impl.rs	/^pub(in crate::fmt) mod glob {$/;"	n
glob	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/humantime/shim_impl.rs	/^pub(in crate::fmt) mod glob {}$/;"	n
glob	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^pub(crate) mod glob {$/;"	n
glob	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^pub(in crate::fmt) mod glob {$/;"	n
glob	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^pub(in crate::fmt::writer) mod glob {$/;"	n
glob	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/shim_impl.rs	/^pub(in crate::fmt::writer) mod glob {}$/;"	n
go_fast	/Users/williamcashman/Honours/Program/n_poly/src/fft.rs	/^pub fn go_fast<F: SupportsFFT>(signal: &mut [F], inv: bool) {$/;"	f
go_fast_base_n	/Users/williamcashman/Honours/Program/n_poly/src/fft-multi-base.rs	/^pub fn go_fast_base_n<T: SupportsFFT>(sig: &mut [T], inv: bool, m: usize) {$/;"	f
goto	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    pub goto: InstPtr,$/;"	m	struct:InstBytes
goto	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    pub goto: InstPtr,$/;"	m	struct:InstChar
goto	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    pub goto: InstPtr,$/;"	m	struct:InstEmptyLook
goto	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    pub goto: InstPtr,$/;"	m	struct:InstRanges
goto	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    pub goto: InstPtr,$/;"	m	struct:InstSave
goto1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    pub goto1: InstPtr,$/;"	m	struct:InstSplit
goto2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    pub goto2: InstPtr,$/;"	m	struct:InstSplit
grlex	/Users/williamcashman/Honours/Program/n_poly/src/polym.rs	/^    fn grlex(a: &Self, b: &Self) -> Ordering {$/;"	P	implementation:MultiIndex
grlex	/Users/williamcashman/Honours/Program/n_poly/src/polym.rs	/^    fn grlex(a: &Self, b: &Self) -> Ordering;$/;"	P	interface:MultiIndexTrait
groebner_basis	/Users/williamcashman/Honours/Program/n_poly/src/ideals/mod.rs	/^pub mod groebner_basis;$/;"	n
group_by	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn group_by<K, F>(self, key: F) -> GroupBy<K, Self, F>$/;"	P	interface:Itertools
group_key	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    fn group_key(&mut self, client: usize) -> K {$/;"	f
group_map	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^mod group_map;$/;"	n
groupbylazy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^mod groupbylazy;$/;"	n
gt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn gt(&self, other: &Level) -> bool {$/;"	P	implementation:Level
gt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn gt(&self, other: &Level) -> bool {$/;"	P	implementation:LevelFilter
gt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn gt(&self, other: &LevelFilter) -> bool {$/;"	P	implementation:Level
gt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn gt(&self, other: &LevelFilter) -> bool {$/;"	P	implementation:LevelFilter
gt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    fn gt(&self, right: &Self) -> bool {$/;"	f
gt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^    fn gt(&self, right: &Self) -> bool {$/;"	f
gt_mask	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/utils.rs	/^    fn gt_mask(self, other: Self) -> Self::Mask;$/;"	P	interface:FloatSIMDUtils
guard	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    guard: u8,$/;"	m	struct:BoyerMooreSearch
guard_reverse_idx	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    guard_reverse_idx: usize,$/;"	m	struct:BoyerMooreSearch
h	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs	/^    pub fn h(&self) -> MatrixN<N, D> {$/;"	f
half	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn half(&self) -> Self {$/;"	f
half_fill_split_goto1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn half_fill_split_goto1(&mut self, goto1: InstPtr) {$/;"	P	implementation:MaybeInst
half_fill_split_goto2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn half_fill_split_goto2(&mut self, goto2: InstPtr) {$/;"	P	implementation:MaybeInst
handled_first	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs	/^    handled_first: bool,$/;"	m	struct:WithPosition
has	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    pub fn has(&self, t: &P::Var) -> Option<P::Coeff> {$/;"	P	implementation:Poly
has_empty	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn has_empty(&self) -> bool {$/;"	P	implementation:StateFlags
has_left	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs	/^    pub fn has_left(&self) -> bool {$/;"	P	implementation:EitherOrBoth
has_normalizer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^    fn has_normalizer() -> bool {$/;"	P	implementation:TAffine
has_normalizer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^    fn has_normalizer() -> bool {$/;"	P	interface:TCategory
has_prefix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn has_prefix(&self) -> bool {$/;"	P	implementation:Fsm
has_right	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs	/^    pub fn has_right(&self) -> bool {$/;"	P	implementation:EitherOrBoth
has_unicode_word_boundary	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    pub has_unicode_word_boundary: bool,$/;"	m	struct:Program
has_visited	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/backtrack.rs	/^    fn has_visited(&mut self, ip: InstPtr, at: InputAt) -> bool {$/;"	P	implementation:Bounded
hash	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    fn hash<H: hash::Hasher>(&self, state: &mut H) { self.date.hash(state) }$/;"	P	implementation:Date
hash	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn hash<H: hash::Hasher>(&self, state: &mut H) { self.datetime.hash(state) }$/;"	P	implementation:DateTime
hash	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn hash<H: hash::Hasher>(&self, state: &mut H) {$/;"	P	implementation:NaiveDateTime
hash	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    fn hash<H: hash::Hasher>(&self, state: &mut H) {$/;"	P	implementation:NaiveTime
hash	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/impls.rs	/^    fn hash<H>(&self, state: &mut H)$/;"	f
hash	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^    fn hash<H>(&self, state: &mut H)$/;"	P	implementation:Key
hash	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^    fn hash<H: Hasher>(&self, state: &mut H) {$/;"	f
hash	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    fn hash<H: Hasher>(&self, state: &mut H) {$/;"	f
hash	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^    fn hash<H: hash::Hasher>(&self, state: &mut H) {$/;"	f
hash	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^    fn hash<H: hash::Hasher>(&self, state: &mut H) {$/;"	f
hash	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    fn hash<H: hash::Hasher>(&self, state: &mut H) {$/;"	P	implementation:Quaternion
hash	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^    fn hash<H: hash::Hasher>(&self, state: &mut H) {$/;"	f
hash	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^    fn hash<H: hash::Hasher>(&self, state: &mut H) {$/;"	f
hash	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs	/^    fn hash<H: hash::Hasher>(&self, state: &mut H) {$/;"	f
hash	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^fn hash<T: hash::Hash>(x: &T) -> u64 {$/;"	f
hash	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn hash(&self, suffix: &SuffixCacheKey) -> usize {$/;"	P	implementation:SuffixCache
hash_map	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^        fn hash_map() {$/;"	f	module:std_support::tests
haystack	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/pattern.rs	/^    fn haystack(&self) -> &'t str {$/;"	P	implementation:RegexSearcher
haystack	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/pattern.rs	/^    haystack: &'t str,$/;"	m	struct:RegexSearcher
head	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs	/^    head: I::Item,$/;"	m	struct:HeadTail
heap	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs	/^    heap: Vec<HeadTail<I>>,$/;"	m	struct:KMergeBy
heapify	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs	/^fn heapify<T, S>(data: &mut [T], mut less_than: S)$/;"	f
hegemv	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^    pub fn hegemv<D2: Dim, D3: Dim, SB, SC>($/;"	f
hegerc	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^    pub fn hegerc<D2: Dim, D3: Dim, SB, SC>($/;"	f
helper	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs	/^pub mod helper;$/;"	n
hermitian_part	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn hermitian_part(&self) -> MatrixMN<N, D, D>$/;"	P	implementation:SquareMatrix
hess	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs	/^    hess: MatrixN<N, D>,$/;"	m	struct:Hessenberg
hess_internal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs	/^    pub fn hess_internal(&self) -> &MatrixN<N, D> {$/;"	f
hessenberg	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs	/^    pub fn hessenberg(self) -> Hessenberg<N, D> {$/;"	f
hessenberg	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/mod.rs	/^mod hessenberg;$/;"	n
hex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^mod hex;$/;"	n
hidden_export	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^pub mod hidden_export {$/;"	n
hint_total_size	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^        hint_total_size: bool,$/;"	m	struct:test::ChunkHintedIterator
hint_total_size	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^        hint_total_size: bool,$/;"	m	struct:test::WindowHintedIterator
hits	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    hits: u64,$/;"	m	struct:SizedCache
hits	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    hits: u64,$/;"	m	struct:TimedCache
hits	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    hits: u64,$/;"	m	struct:UnboundCache
hms	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    fn hms(&self) -> (u32, u32, u32) {$/;"	P	implementation:NaiveTime
hole	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    hole: Hole,$/;"	m	struct:Patch
hour	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    #[inline] fn hour(&self) -> u32 { self.naive_local().hour() }$/;"	P	implementation:DateTime
hour	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    fn hour(&self) -> u32;$/;"	P	interface:Timelike
hour	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn hour(&self) -> u32 {$/;"	P	implementation:NaiveDateTime
hour	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    fn hour(&self) -> u32 {$/;"	P	implementation:NaiveTime
hour12	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    fn hour12(&self) -> (bool, u32) {$/;"	P	interface:Timelike
hour_div_12	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub hour_div_12: Option<u32>,$/;"	m	struct:Parsed
hour_mod_12	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub hour_mod_12: Option<u32>,$/;"	m	struct:Parsed
hours	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    pub fn hours(hours: i64) -> Duration {$/;"	P	implementation:Duration
householder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/mod.rs	/^pub mod householder;$/;"	n
humantime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^mod humantime;$/;"	n
hypot	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn hypot(self, b: Self) -> Self::RealField {$/;"	P	implementation:Complex
hypot	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn hypot(self, other: Self) -> Self::RealField;$/;"	P	interface:ComplexField
hypot	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn hypot(self, other: Self) -> Self {$/;"	P	implementation:f32
hypot	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn hypot(self, other: Self) -> Self {$/;"	P	implementation:f64
hypot	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn hypot(self, other: Self) -> Self;$/;"	P	interface:Float
hypot	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn hypot(self, other: Self) -> Self;$/;"	P	interface:Real
i	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    i: &'a [usize],$/;"	m	struct:ColumnEntries
i	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    pub fn i(&self) -> &[usize] {$/;"	f
i	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub fn i() -> Self {$/;"	P	implementation:Complex
i16	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^impl ToValue for i16 {$/;"	c
i32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^impl ToValue for i32 {$/;"	c
i64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^impl ToValue for i64 {$/;"	c
i64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        fn i64(&mut self, v: i64) -> Result<(), Error> {$/;"	P	implementation:fmt_support::FmtVisitor
i64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        fn i64(&mut self, v: i64) -> Result<(), Error> {$/;"	P	implementation:sval_support::SvalVisitor
i64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    fn i64(&mut self, v: i64) -> Result<(), Error>;$/;"	P	interface:Visitor
i64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/test.rs	/^            fn i64(&mut self, v: i64) -> Result<(), Error> {$/;"	P	implementation:Value::to_token::TestVisitor
i8	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^impl ToValue for i8 {$/;"	c
iamax	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^    pub fn iamax(&self) -> usize$/;"	P	implementation:Vector
iamax_full	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^    pub fn iamax_full(&self) -> (usize, usize) {$/;"	P	implementation:Matrix
iamin	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^    pub fn iamin(&self) -> usize$/;"	P	implementation:Vector
icamax	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^    pub fn icamax(&self) -> usize {$/;"	P	implementation:Vector
icamax_full	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^    pub fn icamax_full(&self) -> (usize, usize) {$/;"	P	implementation:Matrix
id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^    fn id(_: O) -> Self$/;"	P	interface:Identity
id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/mod.rs	/^mod id;$/;"	n
id	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tee.rs	/^    id: bool,$/;"	m	struct:Tee
ideals	/Users/williamcashman/Honours/Program/n_poly/src/lib.rs	/^pub mod ideals;$/;"	n
identities	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^pub mod identities;$/;"	n
identity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^    fn identity() -> Id<O> {$/;"	P	implementation:Id
identity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^    fn identity() -> Self {$/;"	P	implementation:Complex
identity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^    fn identity() -> Self;$/;"	P	interface:Identity
identity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/mod.rs	/^mod identity;$/;"	n
identity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^    fn identity() -> Self {$/;"	f
identity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs	/^    fn identity() -> Self {$/;"	f
identity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs	/^    fn identity() -> Self;$/;"	P	interface:AbstractRotation
identity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alga.rs	/^    fn identity() -> Self {$/;"	f
identity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs	/^    pub fn identity() -> Self {$/;"	f
identity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    fn identity() -> Self {$/;"	P	implementation:Quaternion
identity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    fn identity() -> Self {$/;"	P	implementation:UnitQuaternion
identity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^    pub fn identity() -> Self {$/;"	P	implementation:Quaternion
identity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^    pub fn identity() -> Self {$/;"	f
identity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alga.rs	/^    fn identity() -> Self {$/;"	f
identity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_construction.rs	/^    pub fn identity() -> Rotation<N, D> {$/;"	f
identity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alga.rs	/^    fn identity() -> Self {$/;"	f
identity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs	/^    pub fn identity() -> Self {$/;"	f
identity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_alga.rs	/^    fn identity() -> Self {$/;"	f
identity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_construction.rs	/^    pub fn identity() -> Self {$/;"	f
identity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alga.rs	/^    fn identity() -> Self {$/;"	f
identity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_construction.rs	/^    pub fn identity() -> Translation<N, D> {$/;"	f
identity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_alga.rs	/^    fn identity() -> Self {$/;"	P	implementation:UnitComplex
identity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs	/^    pub fn identity() -> Self {$/;"	f
identity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs	/^    pub fn identity() -> Self {$/;"	P	implementation:GivensRotation
identity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs	/^    pub fn identity() -> Self {$/;"	f
identity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs	/^    pub fn identity(n: usize) -> Self {$/;"	f
identity	/Users/williamcashman/Honours/Program/n_poly/src/algebras/integers.rs	/^    fn identity() -> Self {$/;"	P	implementation:ZZ
identity_generic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^    pub fn identity_generic(nrows: R, ncols: C) -> Self$/;"	f
identity_generic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs	/^    pub fn identity_generic(dim: D) -> Self {$/;"	f
idx	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_trait.rs	/^    idx: usize,$/;"	m	struct:SubCapturesPosIter
ignore_whitespace	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_builder.rs	/^    pub ignore_whitespace: bool,$/;"	m	struct:RegexOptions
im	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/crand.rs	/^    im: Im,$/;"	m	struct:ComplexDistribution
im	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub im: T,$/;"	m	struct:Complex
imag	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn imag(&self) -> Vector3<N> {$/;"	f
imaginary	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn imaginary(self) -> Self::RealField {$/;"	P	implementation:Complex
imaginary	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn imaginary(self) -> Self::RealField;$/;"	P	interface:ComplexField
imax	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^    pub fn imax(&self) -> usize {$/;"	P	implementation:Vector
imin	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^    pub fn imin(&self) -> usize {$/;"	P	implementation:Vector
imp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/humantime/mod.rs	/^mod imp;$/;"	n
imp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/atty.rs	/^mod imp {$/;"	n
imp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/mod.rs	/^mod imp;$/;"	n
imp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/cache.rs	/^mod imp {$/;"	n
imp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^        fn imp(_: &ExecReadOnly) -> Option<MatchType> {$/;"	f	method:ExecReadOnly::choose_dfa_match_type
imp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^        fn imp(_: &ExecReadOnly) -> Option<MatchType> {$/;"	f	method:ExecReadOnly::choose_literal_match_type
imp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^        fn imp(_: &ExecReadOnly, _: &[u8]) -> bool {$/;"	f	method:ExecNoSync::is_anchor_end_match
imp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^        fn imp(ro: &ExecReadOnly) -> Option<MatchType> {$/;"	f	method:ExecReadOnly::choose_dfa_match_type
imp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^        fn imp(ro: &ExecReadOnly) -> Option<MatchType> {$/;"	f	method:ExecReadOnly::choose_literal_match_type
imp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^        fn imp(ro: &ExecReadOnly, text: &[u8]) -> bool {$/;"	f	method:ExecNoSync::is_anchor_end_match
imp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/find_byte.rs	/^    fn imp(needle: u8, haystack: &[u8]) -> Option<usize> {$/;"	f	function:find_byte
imp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/mod.rs	/^mod imp {$/;"	n
imp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/mod.rs	/^mod imp;$/;"	n
impl_abelian	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/one_operator.rs	/^macro_rules! impl_abelian($/;"	M
impl_abstract_module	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/module.rs	/^macro_rules! impl_abstract_module($/;"	M
impl_additive_inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/operator.rs	/^macro_rules! impl_additive_inverse($/;"	M
impl_approx_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/macros.rs	/^macro_rules! impl_approx_eq {$/;"	M
impl_as_byte_slice	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^macro_rules! impl_as_byte_slice {$/;"	M
impl_as_byte_slice_arrays	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^macro_rules! impl_as_byte_slice_arrays {$/;"	M
impl_as_primitive	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^macro_rules! impl_as_primitive {$/;"	M
impl_complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^macro_rules! impl_complex($/;"	M
impl_cons_iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/cons_tuples_impl.rs	/^macro_rules! impl_cons_iter($/;"	M
impl_constructors	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^macro_rules! impl_constructors($/;"	M
impl_constructors	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs	/^macro_rules! impl_constructors($/;"	M
impl_constructors_from_data	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^macro_rules! impl_constructors_from_data($/;"	M
impl_constructors_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs	/^macro_rules! impl_constructors_mut($/;"	M
impl_field	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/two_operators.rs	/^macro_rules! impl_field($/;"	M
impl_fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^macro_rules! impl_fmt {$/;"	M
impl_format	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/format.rs	/^macro_rules! impl_format {$/;"	M
impl_from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/impls.rs	/^macro_rules! impl_from {$/;"	M
impl_from_into_asref_1D	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^macro_rules! impl_from_into_asref_1D($/;"	M
impl_from_into_asref_2D	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^macro_rules! impl_from_into_asref_2D($/;"	M
impl_from_into_mint_1D	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^macro_rules! impl_from_into_mint_1D($/;"	M
impl_from_into_mint_1D	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_conversion.rs	/^macro_rules! impl_from_into_mint_1D($/;"	M
impl_from_into_mint_2D	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^macro_rules! impl_from_into_mint_2D($/;"	M
impl_from_primitive	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/cast.rs	/^macro_rules! impl_from_primitive {$/;"	M
impl_from_primitive	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^macro_rules! impl_from_primitive {$/;"	M
impl_from_primitive_wrapping	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^macro_rules! impl_from_primitive_wrapping {$/;"	M
impl_group	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/one_operator.rs	/^macro_rules! impl_group($/;"	M
impl_ident	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/macros.rs	/^macro_rules! impl_ident {$/;"	M
impl_index_pair	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^macro_rules! impl_index_pair {$/;"	M
impl_index_pairs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^macro_rules! impl_index_pairs {$/;"	M
impl_int_div	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^macro_rules! impl_int_div {$/;"	M
impl_int_from_uint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/integer.rs	/^macro_rules! impl_int_from_uint {$/;"	M
impl_int_rem	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^macro_rules! impl_int_rem {$/;"	M
impl_inversible_multiplicative_structures	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_alga.rs	/^macro_rules! impl_inversible_multiplicative_structures($/;"	M
impl_lattice	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/lattice.rs	/^macro_rules! impl_lattice($/;"	M
impl_loop	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/one_operator.rs	/^macro_rules! impl_loop($/;"	M
impl_macros	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^mod impl_macros;$/;"	n
impl_magma	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/one_operator.rs	/^macro_rules! impl_magma($/;"	M
impl_marker	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/macros.rs	/^macro_rules! impl_marker($/;"	M
impl_monoid	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/one_operator.rs	/^macro_rules! impl_monoid($/;"	M
impl_multiplicative_structure	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^macro_rules! impl_multiplicative_structure($/;"	M
impl_multiplicative_structures	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alga.rs	/^macro_rules! impl_multiplicative_structures($/;"	M
impl_multiplicative_structures	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alga.rs	/^macro_rules! impl_multiplicative_structures($/;"	M
impl_multiplicative_structures	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alga.rs	/^macro_rules! impl_multiplicative_structures($/;"	M
impl_multiplicative_structures	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_alga.rs	/^macro_rules! impl_multiplicative_structures($/;"	M
impl_multiplicative_structures	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alga.rs	/^macro_rules! impl_multiplicative_structures($/;"	M
impl_num_cast	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^macro_rules! impl_num_cast {$/;"	M
impl_nzint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/integer.rs	/^macro_rules! impl_nzint {$/;"	M
impl_pow_f	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^macro_rules! impl_pow_f {$/;"	M
impl_pow_i	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^macro_rules! impl_pow_i {$/;"	M
impl_quasigroup	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/one_operator.rs	/^macro_rules! impl_quasigroup($/;"	M
impl_real	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/real.rs	/^macro_rules! impl_real($/;"	M
impl_ring	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/two_operators.rs	/^macro_rules! impl_ring($/;"	M
impl_ring_commutative	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/two_operators.rs	/^macro_rules! impl_ring_commutative($/;"	M
impl_scalar_subset_of_complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/subset.rs	/^macro_rules! impl_scalar_subset_of_complex($/;"	M
impl_semigroup	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/one_operator.rs	/^macro_rules! impl_semigroup($/;"	M
impl_serde	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^mod impl_serde;$/;"	n
impl_structures	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^macro_rules! impl_structures($/;"	M
impl_structures	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_alga.rs	/^macro_rules! impl_structures($/;"	M
impl_styled_value_fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^macro_rules! impl_styled_value_fmt {$/;"	M
impl_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/subset.rs	/^macro_rules! impl_subset($/;"	M
impl_swizzle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs	/^macro_rules! impl_swizzle {$/;"	M
impl_swizzle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs	/^macro_rules! impl_swizzle {$/;"	M
impl_to_primitive	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/cast.rs	/^macro_rules! impl_to_primitive {$/;"	M
impl_to_primitive_float	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^macro_rules! impl_to_primitive_float {$/;"	M
impl_to_primitive_float_to_float	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^macro_rules! impl_to_primitive_float_to_float {$/;"	M
impl_to_primitive_float_to_signed_int	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^macro_rules! impl_to_primitive_float_to_signed_int {$/;"	M
impl_to_primitive_float_to_unsigned_int	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^macro_rules! impl_to_primitive_float_to_unsigned_int {$/;"	M
impl_to_primitive_int	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^macro_rules! impl_to_primitive_int {$/;"	M
impl_to_primitive_int_to_int	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^macro_rules! impl_to_primitive_int_to_int {$/;"	M
impl_to_primitive_int_to_uint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^macro_rules! impl_to_primitive_int_to_uint {$/;"	M
impl_to_primitive_uint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^macro_rules! impl_to_primitive_uint {$/;"	M
impl_to_primitive_uint_to_int	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^macro_rules! impl_to_primitive_uint_to_int {$/;"	M
impl_to_primitive_uint_to_uint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^macro_rules! impl_to_primitive_uint_to_uint {$/;"	M
impl_to_primitive_wrapping	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^macro_rules! impl_to_primitive_wrapping {$/;"	M
impl_tuple_collect	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs	/^macro_rules! impl_tuple_collect {$/;"	M
impl_tuple_combination	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^macro_rules! impl_tuple_combination {$/;"	M
impl_weight_for_float	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^macro_rules! impl_weight_for_float {$/;"	M
impl_weight_for_int	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^macro_rules! impl_weight_for_int {$/;"	M
impl_zip_iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs	/^macro_rules! impl_zip_iter {$/;"	M
impls	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^mod impls;$/;"	n
impls	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^mod impls;$/;"	n
in_progress	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs	/^    fn in_progress(&self) -> bool {$/;"	f
indent	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    indent: Option<usize>,$/;"	m	struct:DefaultFormat
indent_count	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^                    indent_count: usize,$/;"	m	struct:DefaultFormat::write_args::IndentWrapper
index	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    index: usize,$/;"	m	struct:LRUListIterator
index	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/iter.rs	/^    index: usize,$/;"	m	struct:GenericArrayIter
index	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    index: Cell<usize>,$/;"	m	struct:GroupBy
index	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    index: Cell<usize>,$/;"	m	struct:IntoChunks
index	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    index: usize,$/;"	m	struct:Chunk
index	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    index: usize,$/;"	m	struct:ChunkIndex
index	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    index: usize,$/;"	m	struct:Group
index	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lazy_buffer.rs	/^    fn index(&self, _index: J) -> &Self::Output {$/;"	f
index	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs	/^    index: usize,$/;"	m	struct:MultiPeek
index	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    fn index(self, matrix: &'a Matrix<N, R, C, S>) -> Self::Output {$/;"	P	interface:MatrixIndex
index	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    pub fn index<'a, I>(&'a self, index: I) -> I::Output$/;"	P	implementation:Matrix
index	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^    fn index(&self, i: usize) -> &Self::Output {$/;"	P	implementation:Matrix
index	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^    fn index(&self, ij: (usize, usize)) -> &Self::Output {$/;"	f
index	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_ops.rs	/^    fn index(&self, i: usize) -> &Self::Output {$/;"	f
index	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_ops.rs	/^    fn index(&self, i: usize) -> &Self::Output {$/;"	P	implementation:Quaternion
index	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_ops.rs	/^    fn index(&self, row_col: (usize, usize)) -> &N {$/;"	f
index	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_ops.rs	/^    fn index(&self, ij: (usize, usize)) -> &N {$/;"	f
index	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^    pub fn index(&self, index: usize) -> usize {$/;"	P	implementation:IndexVec
index	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^#[cfg(feature = "alloc")] pub mod index;$/;"	n
index	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    fn index(&self, i: usize) -> &[u8] {$/;"	P	implementation:Captures
index	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    fn index<'a>(&'a self, name: &'i str) -> &'a [u8] {$/;"	P	implementation:Captures
index	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    fn index(&self, i: usize) -> &str {$/;"	P	implementation:Captures
index	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    fn index<'a>(&'a self, name: &'i str) -> &'a str {$/;"	P	implementation:Captures
index_back	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/iter.rs	/^    index_back: usize,$/;"	m	struct:GenericArrayIter
index_map	/Users/williamcashman/Honours/Program/n_poly/src/polym.rs	/^fn index_map<N: VarNumber>(lhs: &MultiIndex<N>, rhs: &MultiIndex<N>, func: impl Fn(usize, usize)/;"	f
index_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    fn index_mut(self, matrix: &'a mut Matrix<N, R, C, S>) -> Self::OutputMut {$/;"	P	interface:MatrixIndexMut
index_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    pub fn index_mut<'a, I>(&'a mut self, index: I) -> I::OutputMut$/;"	P	implementation:Matrix
index_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^    fn index_mut(&mut self, i: usize) -> &mut N {$/;"	P	implementation:Matrix
index_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^    fn index_mut(&mut self, ij: (usize, usize)) -> &mut N {$/;"	f
index_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_ops.rs	/^    fn index_mut(&mut self, i: usize) -> &mut Self::Output {$/;"	f
index_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_ops.rs	/^    fn index_mut(&mut self, i: usize) -> &mut N {$/;"	P	implementation:Quaternion
index_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_ops.rs	/^    fn index_mut(&mut self, ij: (usize, usize)) -> &mut N {$/;"	f
indexing	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs	/^pub mod indexing;$/;"	n
indices	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations.rs	/^    indices: Vec<usize>,$/;"	m	struct:Combinations
indices	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations_with_replacement.rs	/^    indices: Vec<usize>,$/;"	m	struct:CombinationsWithReplacement
indices	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^    indices: index::IndexVecIntoIter,$/;"	m	struct:SliceChooseIter
indices	/Users/williamcashman/Honours/Program/n_poly/src/polym.rs	/^    indices: GenericArray<usize, N>,$/;"	m	struct:MultiIndex
inf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs	/^    pub fn inf(&self, other: &Self) -> MatrixMN<N, R, C> {$/;"	f
inf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^    pub fn inf(&self, other: &Self) -> Point<N, D> {$/;"	f
inf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs	/^pub fn inf<N, R: Dim, C: Dim>(a: &MatrixMN<N, R, C>, b: &MatrixMN<N, R, C>) -> MatrixMN<N, R, C>$/;"	f
inf_sup	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs	/^    pub fn inf_sup(&self, other: &Self) -> (MatrixMN<N, R, C>, MatrixMN<N, R, C>) {$/;"	f
inf_sup	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^    pub fn inf_sup(&self, other: &Self) -> (Point<N, D>, Point<N, D>) {$/;"	f
inf_sup	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs	/^pub fn inf_sup<N, R: Dim, C: Dim>($/;"	f
infinity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn infinity() -> Self;$/;"	P	interface:Float
infinity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn infinity() -> Self;$/;"	P	interface:FloatCore
info	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/macros.rs	/^macro_rules! info {$/;"	M
info	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^macro_rules! info { ($($x:tt)*) => ($/;"	M
inherit_additive_structure	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^macro_rules! inherit_additive_structure($/;"	M
init	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    pub fn init(&mut self) {$/;"	P	implementation:Builder
init	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^pub fn init() {$/;"	f
init_from_env	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^pub fn init_from_env<'a, E>(env: E)$/;"	f
initial_capacity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    initial_capacity: Option<usize>,$/;"	m	struct:TimedCache
initial_capacity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    initial_capacity: Option<usize>,$/;"	m	struct:UnboundCache
inlined_clone	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/scalar.rs	/^    fn inlined_clone(&self) -> Self {$/;"	P	interface:Scalar
inlined_clone	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/scalar.rs	/^    fn inlined_clone(&self) -> T {$/;"	P	implementation:T
inner	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^                inner: &'a D$/;"	m	struct:serde::DateTime::serialize::FormatWrapped
inner	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^                inner: &'a D$/;"	m	struct:serde::NaiveDate::serialize::FormatWrapped
inner	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^                inner: &'a D$/;"	m	struct:serde::NaiveDateTime::serialize::FormatWrapped
inner	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^mod inner;$/;"	n
inner	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/regex.rs	/^    inner: Regex,$/;"	m	struct:Filter
inner	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/string.rs	/^    inner: String,$/;"	m	struct:Filter
inner	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^    inner: BufferWriter,$/;"	m	struct:Writer
inner	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    inner: termcolor::Buffer,$/;"	m	struct:Buffer
inner	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    inner: termcolor::BufferWriter,$/;"	m	struct:BufferWriter
inner	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/exactly_one_err.rs	/^    inner: I,$/;"	m	struct:ExactlyOneError
inner	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/format.rs	/^    inner: RefCell<Option<(I, F)>>,$/;"	m	struct:FormatWith
inner	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/format.rs	/^    inner: RefCell<Option<I>>,$/;"	m	struct:Format
inner	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    inner: RefCell<GroupInner<K, I, F>>,$/;"	m	struct:GroupBy
inner	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    inner: RefCell<GroupInner<usize, I, ChunkIndex>>,$/;"	m	struct:IntoChunks
inner	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^        fn inner<T, II, FF>(stop: usize, it: &mut II, f: &mut FF) -> State<T>$/;"	f	method:Itertools::tree_fold1
inner	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/error.rs	/^    inner: Inner$/;"	m	struct:Error
inner	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^    inner: Inner<'v>,$/;"	m	struct:Value
inner	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn inner(&self, other: &Self) -> Self {$/;"	f
inner	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/reseeding.rs	/^    inner: R,$/;"	m	struct:ReseedingCore
inner	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    inner: CacheInner,$/;"	m	struct:Cache
inner0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^        fn inner0<T, II, FF>(it: &mut II, f: &mut FF) -> State<T>$/;"	f	method:Itertools::tree_fold1
inner_product	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/vector.rs	/^    fn inner_product(&self, other: &Self) -> Self::ComplexField;$/;"	P	interface:InnerSpace
inner_product	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^    fn inner_product(&self, other: &Self) -> N {$/;"	f
input	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/backtrack.rs	/^    input: I,$/;"	m	struct:Bounded
input	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/lib.rs	/^mod input;$/;"	n
input	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/pikevm.rs	/^    input: I,$/;"	m	struct:Fsm
insert	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn insert(&mut self, state: State, si: StatePtr) {$/;"	P	implementation:StateMap
insert	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/sparse.rs	/^    pub fn insert(&mut self, value: usize) {$/;"	P	implementation:SparseSet
insert_column	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn insert_column(self, i: usize, val: N) -> MatrixMN<N, R, DimSum<C, U1>>$/;"	P	implementation:Matrix
insert_column	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs	/^    pub fn insert_column<R2, S2>($/;"	f
insert_columns	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn insert_columns(self, i: usize, n: usize, val: N) -> MatrixMN<N, R, Dynamic>$/;"	P	implementation:Matrix
insert_columns_generic_uninitialized	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub unsafe fn insert_columns_generic_uninitialized<D>($/;"	P	implementation:Matrix
insert_fixed_columns	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn insert_fixed_columns<D>(self, i: usize, val: N) -> MatrixMN<N, R, DimSum<C, D>>$/;"	P	implementation:Matrix
insert_fixed_rows	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn insert_fixed_rows<D>(self, i: usize, val: N) -> MatrixMN<N, DimSum<R, D>, C>$/;"	P	implementation:Matrix
insert_row	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn insert_row(self, i: usize, val: N) -> MatrixMN<N, DimSum<R, U1>, C>$/;"	P	implementation:Matrix
insert_rows	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn insert_rows(self, i: usize, n: usize, val: N) -> MatrixMN<N, Dynamic, C>$/;"	P	implementation:Matrix
insert_rows_generic_uninitialized	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub unsafe fn insert_rows_generic_uninitialized<D>($/;"	P	implementation:Matrix
inst_ptrs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn inst_ptrs(&self) -> InstPtrs {$/;"	P	implementation:State
insts	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    insts: Vec<MaybeInst>,$/;"	m	struct:Compiler
insts	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    pub insts: Vec<Inst>,$/;"	m	struct:Program
insts_scratch_space	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    insts_scratch_space: Vec<u8>,$/;"	m	struct:CacheInner
int	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^pub mod int;$/;"	n
int	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/lib.rs	/^pub mod int;$/;"	n
int_trait_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^macro_rules! int_trait_impl {$/;"	M
integer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-0.2.1/src/lib.rs	/^pub mod integer {$/;"	n
integer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^mod integer;$/;"	n
integer_decode	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn integer_decode(self) -> (u64, i16, i8) {$/;"	P	implementation:f32
integer_decode	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn integer_decode(self) -> (u64, i16, i8) {$/;"	P	implementation:f64
integer_decode	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn integer_decode(self) -> (u64, i16, i8);$/;"	P	interface:Float
integer_decode	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn integer_decode(self) -> (u64, i16, i8);$/;"	P	interface:FloatCore
integer_decode_f32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^fn integer_decode_f32(f: f32) -> (u64, i16, i8) {$/;"	f
integer_decode_f64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^fn integer_decode_f64(f: f64) -> (u64, i16, i8) {$/;"	f
integers	/Users/williamcashman/Honours/Program/n_poly/src/algebras/mod.rs	/^pub mod integers;$/;"	n
interleave	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub fn interleave<I, J>(i: I, j: J) -> Interleave<<I as IntoIterator>::IntoIter, <J as IntoItera/;"	f
interleave	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn interleave<J>(self, other: J) -> Interleave<Self, J::IntoIter>$/;"	P	interface:Itertools
interleave_shortest	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub fn interleave_shortest<I, J>(a: I, b: J) -> InterleaveShortest<I, J>$/;"	f
interleave_shortest	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn interleave_shortest<J>(self, other: J) -> InterleaveShortest<Self, J::IntoIter>$/;"	P	interface:Itertools
internal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^mod internal;$/;"	n
internal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/lib.rs	/^pub mod internal {$/;"	n
internal_fix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^macro_rules! internal_fix { ($x:ident) => (Item::Fixed(Fixed::Internal(InternalFixed { val: Inte/;"	M
internal_tri	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs	/^    pub fn internal_tri(&self) -> &MatrixN<N, D> {$/;"	f
internals	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    mod internals;$/;"	n	module:naive
intersperse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/intersperse.rs	/^pub fn intersperse<I>(iter: I, elt: I::Item) -> Intersperse<I>$/;"	f
intersperse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn intersperse(self, element: Self::Item) -> Intersperse<Self>$/;"	P	interface:Itertools
intersperse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^mod intersperse;$/;"	n
into	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs	/^    fn into(self) -> Option<Either<A, B>> {$/;"	P	implementation:EitherOrBoth
into	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^    fn into(self) -> &'a [N] {$/;"	P	implementation:Matrix
into	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^    fn into(self) -> &'a mut [N] {$/;"	P	implementation:Matrix
into	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^    fn into(self) -> Vec<N> {$/;"	P	implementation:VecStorage
into	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^    fn into(self) -> mint::Quaternion<N> {$/;"	P	implementation:Quaternion
into	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^    fn into(self) -> mint::Quaternion<N> {$/;"	P	implementation:UnitQuaternion
into_buffer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs	/^    pub fn into_buffer(self) -> TupleBuffer<T> {$/;"	f
into_byte_regex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    pub fn into_byte_regex(self) -> re_bytes::Regex {$/;"	P	implementation:Exec
into_byte_regex_set	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    pub fn into_byte_regex_set(self) -> re_set::bytes::RegexSet {$/;"	P	implementation:Exec
into_color_choice	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    fn into_color_choice(self) -> ColorChoice {$/;"	P	implementation:WriteStyle
into_float_with_exponent	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/float.rs	/^    fn into_float_with_exponent(self, exponent: i32) -> Self::F;$/;"	P	interface:IntoFloat
into_group_map	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/group_map.rs	/^pub fn into_group_map<I, K, V>(iter: I) -> HashMap<K, Vec<V>>$/;"	f
into_group_map	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn into_group_map<K, V>(self) -> HashMap<K, Vec<V>>$/;"	P	interface:Itertools
into_inner	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    pub unsafe fn into_inner(self) -> GenericArray<T, N> {$/;"	P	implementation:ArrayBuilder
into_inner	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    pub fn into_inner(self) -> T {$/;"	P	implementation:FoldWhile
into_inner	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs	/^    pub fn into_inner(self) -> T {$/;"	P	implementation:Position
into_inner	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs	/^    pub fn into_inner(self) -> T {$/;"	P	implementation:Unit
into_inner	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^    pub fn into_inner(self) -> Matrix4<N> {$/;"	P	implementation:Orthographic3
into_inner	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^    pub fn into_inner(self) -> Matrix4<N> {$/;"	P	implementation:Perspective3
into_inner	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^    pub fn into_inner(self) -> MatrixN<N, D> {$/;"	f
into_inner	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^    pub fn into_inner(self) -> MatrixN<N, DimNameSum<D, U1>> {$/;"	f
into_iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/iter.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	f
into_iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    fn into_iter(self: &'a GenericArray<T, N>) -> Self::IntoIter {$/;"	f
into_iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    fn into_iter(self: &'a mut GenericArray<T, N>) -> Self::IntoIter {$/;"	f
into_iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	f
into_iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs	/^    fn into_iter(self) -> RcIter<I> {$/;"	f
into_iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	P	implementation:Matrix
into_iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^    pub fn into_iter(self) -> IndexVecIntoIter {$/;"	P	implementation:IndexVec
into_iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	P	implementation:Program
into_iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/sparse.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	P	implementation:SparseSet
into_iter	/Users/williamcashman/Honours/Program/n_poly/src/polym.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	P	implementation:MultiIndex
into_option	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs	/^    pub fn into_option(self) -> Option<(T,T)> {$/;"	P	implementation:MinMaxResult
into_owned	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^    fn into_owned(self) -> Owned<N, R, C>$/;"	f
into_owned	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn into_owned(self) -> MatrixMN<N, R, C>$/;"	P	implementation:Matrix
into_owned	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs	/^    fn into_owned(self) -> Owned<N, R, C>$/;"	P	interface:Storage
into_owned	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^    fn into_owned(self) -> Owned<N, Dynamic, C>$/;"	f
into_owned	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^    fn into_owned(self) -> Owned<N, R, Dynamic>$/;"	f
into_owned	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn into_owned(self) -> Self {$/;"	f
into_owned_sum	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn into_owned_sum<R2, C2>(self) -> MatrixSum<N, R, C, R2, C2>$/;"	P	implementation:Matrix
into_parts	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    pub fn into_parts(self) -> (Option<I::Item>, I) {$/;"	f
into_regex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    pub fn into_regex(self) -> re_unicode::Regex {$/;"	P	implementation:Exec
into_regex_set	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    pub fn into_regex_set(self) -> re_set::unicode::RegexSet {$/;"	P	implementation:Exec
into_searcher	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/pattern.rs	/^    fn into_searcher(self, haystack: &'t str) -> RegexSearcher<'r, 't> {$/;"	P	implementation:Regex
into_sval	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        fn into_sval(self) -> sval::value::Error {$/;"	P	implementation:sval_support::Error
into_termcolor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    fn into_termcolor(self) -> Option<termcolor::Color> {$/;"	P	implementation:Color
into_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    pub(crate) fn into_value<T>(&mut self, value: T) -> StyledValue<'static, T> {$/;"	P	implementation:Style
into_vec	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^    pub fn into_vec(self) -> Vec<usize> {$/;"	P	implementation:IndexVec
inv	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn inv(self) -> Self::Output {$/;"	P	implementation:Complex
inv	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub fn inv(&self) -> Self {$/;"	P	implementation:Complex
inv	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/inv.rs	/^    fn inv(self) -> Self::Output;$/;"	P	interface:Inv
inv	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/inv.rs	/^    fn inv(self) -> f32 {$/;"	P	implementation:f32
inv	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/inv.rs	/^    fn inv(self) -> f64 {$/;"	P	implementation:f64
inv	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/mod.rs	/^pub mod inv;$/;"	n
inv_neg_shape	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/pareto.rs	/^    inv_neg_shape: f64,$/;"	m	struct:Pareto
inv_permute_columns	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs	/^    pub fn inv_permute_columns<N: Scalar, R2: Dim, C2: Dim, S2>($/;"	f
inv_permute_rows	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs	/^    pub fn inv_permute_rows<N: Scalar, R2: Dim, C2: Dim, S2>(&self, rhs: &mut Matrix<N, R2, C2, /;"	f
inv_shape	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    inv_shape: f64,$/;"	m	struct:GammaSmallShape
inv_shape	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weibull.rs	/^    inv_shape: f64,$/;"	m	struct:Weibull
invalid	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/pareto.rs	/^    fn invalid() {$/;"	f	module:tests
invalid	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weibull.rs	/^    fn invalid() {$/;"	f	module:tests
inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs	/^    fn inverse(&self) -> Self {$/;"	f
inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs	/^    fn inverse(&self) -> Self;$/;"	P	interface:AbstractRotation
inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^    pub fn inverse(&self) -> Self {$/;"	f
inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^    pub fn inverse(&self) -> Matrix4<N> {$/;"	P	implementation:Orthographic3
inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^    pub fn inverse(&self) -> Matrix4<N> {$/;"	P	implementation:Perspective3
inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn inverse(&self) -> Self {$/;"	f
inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^    pub fn inverse(&self) -> Self {$/;"	f
inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^    pub fn inverse(&self) -> Self {$/;"	f
inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^    pub fn inverse(self) -> Transform<N, D, C>$/;"	f
inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs	/^    pub fn inverse(&self) -> Translation<N, D>$/;"	f
inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs	/^    pub fn inverse(&self) -> Self {$/;"	f
inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs	/^    pub fn inverse(&self) -> MatrixN<N, D> {$/;"	f
inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs	/^    pub fn inverse(&self) -> Self {$/;"	P	implementation:GivensRotation
inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/mod.rs	/^mod inverse;$/;"	n
inverse_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs	/^    fn inverse_mut(&mut self) {$/;"	f
inverse_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs	/^    fn inverse_mut(&mut self);$/;"	P	interface:AbstractRotation
inverse_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^    pub fn inverse_mut(&mut self) {$/;"	f
inverse_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn inverse_mut(&mut self) {$/;"	f
inverse_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^    pub fn inverse_mut(&mut self) {$/;"	f
inverse_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^    pub fn inverse_mut(&mut self) {$/;"	f
inverse_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^    pub fn inverse_mut(&mut self)$/;"	f
inverse_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs	/^    pub fn inverse_mut(&mut self)$/;"	f
inverse_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs	/^    pub fn inverse_mut(&mut self) {$/;"	f
inverse_rotate_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn inverse_rotate_point(&self, pt: &E) -> E {$/;"	P	interface:Similarity
inverse_rotate_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn inverse_rotate_vector(&self, pt: &E::Coordinates) -> E::Coordinates {$/;"	P	interface:Similarity
inverse_scale_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn inverse_scale_point(&self, pt: &E) -> E {$/;"	P	interface:Similarity
inverse_scale_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn inverse_scale_vector(&self, pt: &E::Coordinates) -> E::Coordinates {$/;"	P	interface:Similarity
inverse_transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/id.rs	/^    fn inverse_transform_point(&self, pt: &E) -> E {$/;"	P	implementation:Id
inverse_transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn inverse_transform_point(&self, pt: &E) -> E {$/;"	f
inverse_transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn inverse_transform_point(&self, pt: &E) -> E;$/;"	P	interface:ProjectiveTransformation
inverse_transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs	/^    fn inverse_transform_point(&self, p: &Point<N, D>) -> Point<N, D>$/;"	P	interface:AbstractRotation
inverse_transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs	/^    fn inverse_transform_point(&self, p: &Point<N, D>) -> Point<N, D>$/;"	f
inverse_transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs	/^    fn inverse_transform_point(&self, p: &Point<N, U2>) -> Point<N, U2> {$/;"	f
inverse_transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs	/^    fn inverse_transform_point(&self, p: &Point<N, U3>) -> Point<N, U3> {$/;"	f
inverse_transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^    pub fn inverse_transform_point(&self, pt: &Point<N, D>) -> Point<N, D> {$/;"	f
inverse_transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alga.rs	/^    fn inverse_transform_point(&self, pt: &Point<N, D>) -> Point<N, D> {$/;"	f
inverse_transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn inverse_transform_point(&self, pt: &Point3<N>) -> Point3<N> {$/;"	f
inverse_transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    fn inverse_transform_point(&self, pt: &Point3<N>) -> Point3<N> {$/;"	P	implementation:UnitQuaternion
inverse_transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^    pub fn inverse_transform_point(&self, pt: &Point<N, D>) -> Point<N, D> {$/;"	f
inverse_transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alga.rs	/^    fn inverse_transform_point(&self, pt: &Point<N, D>) -> Point<N, D> {$/;"	f
inverse_transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^    pub fn inverse_transform_point(&self, pt: &Point<N, D>) -> Point<N, D> {$/;"	f
inverse_transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alga.rs	/^    fn inverse_transform_point(&self, pt: &Point<N, D>) -> Point<N, D> {$/;"	f
inverse_transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^    pub fn inverse_transform_point(&self, pt: &Point<N, D>) -> Point<N, D> {$/;"	f
inverse_transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_alga.rs	/^    fn inverse_transform_point(&self, pt: &Point<N, D>) -> Point<N, D> {$/;"	f
inverse_transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs	/^    pub fn inverse_transform_point(&self, pt: &Point<N, D>) -> Point<N, D> {$/;"	f
inverse_transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alga.rs	/^    fn inverse_transform_point(&self, pt: &Point<N, D>) -> Point<N, D> {$/;"	f
inverse_transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs	/^    pub fn inverse_transform_point(&self, pt: &Point2<N>) -> Point2<N> {$/;"	f
inverse_transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_alga.rs	/^    fn inverse_transform_point(&self, pt: &Point2<N>) -> Point2<N> {$/;"	f
inverse_transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/id.rs	/^    fn inverse_transform_vector(&self, v: &E::Coordinates) -> E::Coordinates {$/;"	P	implementation:Id
inverse_transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn inverse_transform_vector(&self, v: &E::Coordinates) -> E::Coordinates {$/;"	f
inverse_transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn inverse_transform_vector(&self, v: &E::Coordinates) -> E::Coordinates;$/;"	P	interface:ProjectiveTransformation
inverse_transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs	/^    fn inverse_transform_vector(&self, v: &VectorN<N, D>) -> VectorN<N, D>$/;"	P	interface:AbstractRotation
inverse_transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs	/^    fn inverse_transform_vector(&self, v: &VectorN<N, D>) -> VectorN<N, D>$/;"	f
inverse_transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs	/^    fn inverse_transform_vector(&self, v: &VectorN<N, U2>) -> VectorN<N, U2> {$/;"	f
inverse_transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs	/^    fn inverse_transform_vector(&self, v: &VectorN<N, U3>) -> VectorN<N, U3> {$/;"	f
inverse_transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^    pub fn inverse_transform_vector(&self, v: &VectorN<N, D>) -> VectorN<N, D> {$/;"	f
inverse_transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alga.rs	/^    fn inverse_transform_vector(&self, v: &VectorN<N, D>) -> VectorN<N, D> {$/;"	f
inverse_transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn inverse_transform_vector(&self, v: &Vector3<N>) -> Vector3<N> {$/;"	f
inverse_transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    fn inverse_transform_vector(&self, v: &Vector3<N>) -> Vector3<N> {$/;"	P	implementation:UnitQuaternion
inverse_transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^    pub fn inverse_transform_vector(&self, v: &VectorN<N, D>) -> VectorN<N, D> {$/;"	f
inverse_transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alga.rs	/^    fn inverse_transform_vector(&self, v: &VectorN<N, D>) -> VectorN<N, D> {$/;"	f
inverse_transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^    pub fn inverse_transform_vector(&self, v: &VectorN<N, D>) -> VectorN<N, D> {$/;"	f
inverse_transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alga.rs	/^    fn inverse_transform_vector(&self, v: &VectorN<N, D>) -> VectorN<N, D> {$/;"	f
inverse_transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^    pub fn inverse_transform_vector(&self, v: &VectorN<N, D>) -> VectorN<N, D> {$/;"	f
inverse_transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_alga.rs	/^    fn inverse_transform_vector(&self, v: &VectorN<N, D>) -> VectorN<N, D> {$/;"	f
inverse_transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alga.rs	/^    fn inverse_transform_vector(&self, v: &VectorN<N, D>) -> VectorN<N, D> {$/;"	f
inverse_transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs	/^    pub fn inverse_transform_vector(&self, v: &Vector2<N>) -> Vector2<N> {$/;"	f
inverse_transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_alga.rs	/^    fn inverse_transform_vector(&self, v: &Vector2<N>) -> Vector2<N> {$/;"	f
inverse_translate_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn inverse_translate_point(&self, pt: &E) -> E {$/;"	P	interface:Similarity
invert	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn invert(self) -> Self::Output {$/;"	P	implementation:InvertedUTerm
invert	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn invert(self) -> Self::Output {$/;"	P	implementation:UTerm
invert	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn invert(self) -> Self::Output {$/;"	f
invert	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn invert(self) -> Self::Output;$/;"	P	interface:Invert
inverted_zip	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    fn inverted_zip<B, U, F>($/;"	f
inverted_zip	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^    fn inverted_zip<B, U, F>($/;"	P	interface:GenericSequence
inverted_zip2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    fn inverted_zip2<B, Lhs, U, F>(self, lhs: Lhs, mut f: F) -> MappedSequence<Lhs, B, U>$/;"	f
inverted_zip2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^    fn inverted_zip2<B, Lhs, U, F>(self, lhs: Lhs, mut f: F) -> MappedSequence<Lhs, B, U>$/;"	P	interface:GenericSequence
io	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs	/^pub mod io;$/;"	n
ipiv	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs	/^    ipiv: VectorN<(usize, usize), D>,$/;"	m	struct:PermutationSequence
iproduct	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^macro_rules! iproduct {$/;"	M
is	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^    fn is<D: Dim>() -> bool {$/;"	P	interface:Dim
is	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/scalar.rs	/^    fn is<T: Scalar>() -> bool {$/;"	P	interface:Scalar
is_anchor_end_match	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    fn is_anchor_end_match(&self, text: &[u8]) -> bool {$/;"	P	implementation:ExecNoSync
is_anchored_end	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    pub is_anchored_end: bool,$/;"	m	struct:Program
is_anchored_start	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    pub is_anchored_start: bool,$/;"	m	struct:Program
is_ascii_word	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn is_ascii_word(&self) -> bool {$/;"	P	implementation:Byte
is_both	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs	/^    pub fn is_both(&self) -> bool {$/;"	P	implementation:EitherOrBoth
is_bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    pub is_bytes: bool,$/;"	m	struct:Program
is_contiguous	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^    fn is_contiguous(&self) -> bool {$/;"	f
is_contiguous	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs	/^    fn is_contiguous(&self) -> bool;$/;"	P	interface:Storage
is_contiguous	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^    fn is_contiguous(&self) -> bool {$/;"	f
is_convertible	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs	/^pub fn is_convertible<From: SupersetOf<To>, To>(t: &From) -> bool {$/;"	f
is_dfa	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    pub is_dfa: bool,$/;"	m	struct:Program
is_done	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lazy_buffer.rs	/^    pub fn is_done(&self) -> bool {$/;"	f
is_done	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    pub fn is_done(&self) -> bool {$/;"	P	implementation:FoldWhile
is_empty	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/properties.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:Matrix
is_empty	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:IndexVec
is_empty	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn is_empty(&self) -> bool {$/;"	P	implementation:StateMap
is_empty	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    fn is_empty(&self) -> bool {$/;"	P	interface:Input
is_empty	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:InputAt
is_empty	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:LiteralSearcher
is_empty	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/mod.rs	/^        pub fn is_empty(&self) -> bool {$/;"	P	implementation:imp::LiteralSearcher
is_empty	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/sparse.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:SparseSet
is_empty_match	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    fn is_empty_match(&self, at: InputAt, empty: &InstEmptyLook) -> bool {$/;"	P	implementation:ByteInput
is_empty_match	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    fn is_empty_match(&self, at: InputAt, empty: &InstEmptyLook) -> bool {$/;"	P	implementation:CharInput
is_empty_match	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    fn is_empty_match(&self, at: InputAt, empty: &InstEmptyLook) -> bool {$/;"	P	implementation:T
is_empty_match	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    fn is_empty_match(&self, at: InputAt, empty: &InstEmptyLook) -> bool;$/;"	P	interface:Input
is_end	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    pub fn is_end(&self) -> bool {$/;"	P	implementation:InputAt
is_eof	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn is_eof(&self) -> bool {$/;"	P	implementation:Byte
is_equal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    fn is_equal(self, rhs: B) -> Self::Output {$/;"	f
is_equal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    fn is_equal(self, rhs: Rhs) -> Self::Output;$/;"	P	interface:IsEqual
is_equal_private	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn is_equal_private(self, Rhs, Cmp) -> Self::Output;$/;"	P	interface:IsEqualPrivate
is_equal_private	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn is_equal_private(self, _: B, _: Equal) -> Self::Output {$/;"	P	implementation:A
is_equal_private	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn is_equal_private(self, _: B, _: Greater) -> Self::Output {$/;"	P	implementation:A
is_equal_private	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn is_equal_private(self, _: B, _: Less) -> Self::Output {$/;"	P	implementation:A
is_finite	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn is_finite(&self) -> bool {$/;"	P	implementation:Complex
is_finite	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn is_finite(&self) -> bool;$/;"	P	interface:ComplexField
is_finite	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub fn is_finite(self) -> bool {$/;"	P	implementation:Complex
is_finite	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn is_finite(self) -> bool {$/;"	P	interface:FloatCore
is_finite	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn is_finite(self) -> bool;$/;"	P	interface:Float
is_finite	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/utils.rs	/^    fn is_finite(self) -> bool;$/;"	P	interface:Float
is_forked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/reseeding.rs	/^    fn is_forked(&self, global_fork_counter: usize) -> bool {$/;"	f
is_gb_test	/Users/williamcashman/Honours/Program/n_poly/src/ideals/groebner_basis.rs	/^    fn is_gb_test() {$/;"	f	module:tests
is_greater	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    fn is_greater(self, rhs: B) -> Self::Output {$/;"	f
is_greater	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    fn is_greater(self, rhs: Rhs) -> Self::Output;$/;"	P	interface:IsGreater
is_greater_or_equal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    fn is_greater_or_equal(self, rhs: B) -> Self::Output {$/;"	f
is_greater_or_equal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    fn is_greater_or_equal(self, rhs: Rhs) -> Self::Output;$/;"	P	interface:IsGreaterOrEqual
is_greater_or_equal_private	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn is_greater_or_equal_private(self, Rhs, Cmp) -> Self::Output;$/;"	P	interface:IsGreaterOrEqualPrivate
is_greater_or_equal_private	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn is_greater_or_equal_private(self, _: B, _: Equal) -> Self::Output {$/;"	P	implementation:A
is_greater_or_equal_private	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn is_greater_or_equal_private(self, _: B, _: Greater) -> Self::Output {$/;"	P	implementation:A
is_greater_or_equal_private	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn is_greater_or_equal_private(self, _: B, _: Less) -> Self::Output {$/;"	P	implementation:A
is_greater_private	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn is_greater_private(self, Rhs, Cmp) -> Self::Output;$/;"	P	interface:IsGreaterPrivate
is_greater_private	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn is_greater_private(self, _: B, _: Equal) -> Self::Output {$/;"	P	implementation:A
is_greater_private	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn is_greater_private(self, _: B, _: Greater) -> Self::Output {$/;"	P	implementation:A
is_greater_private	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn is_greater_private(self, _: B, _: Less) -> Self::Output {$/;"	P	implementation:A
is_groebner_basis	/Users/williamcashman/Honours/Program/n_poly/src/ideals/groebner_basis.rs	/^    pub fn is_groebner_basis(&self) -> bool {$/;"	P	implementation:Ideal
is_identity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/properties.rs	/^    pub fn is_identity(&self, eps: N::Epsilon) -> bool$/;"	P	implementation:Matrix
is_in	/Users/williamcashman/Honours/Program/n_poly/src/ideals/mod.rs	/^    pub fn is_in(&self, term: &Term<P>) -> bool {$/;"	P	implementation:MonomialIdeal
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^    fn is_in_subset(t: &T) -> bool {$/;"	P	implementation:Id
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/subset.rs	/^    fn is_in_subset(&self) -> bool {$/;"	P	implementation:SP
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/subset.rs	/^    fn is_in_subset(&self) -> bool;$/;"	P	interface:SupersetOf
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/subset.rs	/^    fn is_in_subset(c: &Complex<N2>) -> bool {$/;"	P	implementation:Complex
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/subset.rs	/^    fn is_in_subset(element: &T) -> bool;$/;"	P	interface:SubsetOf
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^    fn is_in_subset(m: &MatrixMN<N2, R2, C2>) -> bool {$/;"	f
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_conversion.rs	/^    fn is_in_subset(iso: &Isometry<N2, D, R2>) -> bool {$/;"	f
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_conversion.rs	/^    fn is_in_subset(m: &MatrixN<N2, DimNameSum<D, U1>>) -> bool {$/;"	f
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_conversion.rs	/^    fn is_in_subset(sim: &Similarity<N2, D, R2>) -> bool {$/;"	f
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_conversion.rs	/^    fn is_in_subset(t: &Transform<N2, D, C>) -> bool {$/;"	f
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_conversion.rs	/^    fn is_in_subset(m: &Point<N2, D>) -> bool {$/;"	f
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_conversion.rs	/^    fn is_in_subset(v: &VectorN<N2, DimNameSum<D, U1>>) -> bool {$/;"	f
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^    fn is_in_subset(iso: &Isometry<N2, U3, R>) -> bool {$/;"	f
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^    fn is_in_subset(m: &Matrix4<N2>) -> bool {$/;"	P	implementation:UnitQuaternion
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^    fn is_in_subset(q: &Quaternion<N2>) -> bool {$/;"	f
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^    fn is_in_subset(rot: &Rotation3<N2>) -> bool {$/;"	f
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^    fn is_in_subset(sim: &Similarity<N2, U3, R>) -> bool {$/;"	f
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^    fn is_in_subset(t: &Transform<N2, U3, C>) -> bool {$/;"	f
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^    fn is_in_subset(uq: &UnitQuaternion<N2>) -> bool {$/;"	f
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^    fn is_in_subset(iso: &Isometry<N2, D, R>) -> bool {$/;"	f
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^    fn is_in_subset(m: &MatrixN<N2, DimNameSum<D, U1>>) -> bool {$/;"	f
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^    fn is_in_subset(q: &UnitComplex<N2>) -> bool {$/;"	f
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^    fn is_in_subset(q: &UnitQuaternion<N2>) -> bool {$/;"	f
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^    fn is_in_subset(rot: &Rotation<N2, D>) -> bool {$/;"	f
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^    fn is_in_subset(sim: &Similarity<N2, D, R>) -> bool {$/;"	f
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^    fn is_in_subset(t: &Transform<N2, D, C>) -> bool {$/;"	f
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_conversion.rs	/^    fn is_in_subset(m: &MatrixN<N2, DimNameSum<D, U1>>) -> bool {$/;"	f
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_conversion.rs	/^    fn is_in_subset(sim: &Similarity<N2, D, R2>) -> bool {$/;"	f
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_conversion.rs	/^    fn is_in_subset(t: &Transform<N2, D, C>) -> bool {$/;"	f
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_conversion.rs	/^    fn is_in_subset(m: &MatrixN<N2, DimNameSum<D, U1>>) -> bool {$/;"	f
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_conversion.rs	/^    fn is_in_subset(t: &Transform<N2, D, C2>) -> bool {$/;"	f
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs	/^    fn is_in_subset(iso: &Isometry<N2, D, R>) -> bool {$/;"	f
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs	/^    fn is_in_subset(m: &MatrixN<N2, DimNameSum<D, U1>>) -> bool {$/;"	f
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs	/^    fn is_in_subset(rot: &Translation<N2, D>) -> bool {$/;"	f
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs	/^    fn is_in_subset(sim: &Similarity<N2, D, R>) -> bool {$/;"	f
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs	/^    fn is_in_subset(t: &Transform<N2, D, C>) -> bool {$/;"	f
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs	/^    fn is_in_subset(iso: &Isometry<N2, U2, R>) -> bool {$/;"	f
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs	/^    fn is_in_subset(m: &Matrix3<N2>) -> bool {$/;"	P	implementation:UnitComplex
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs	/^    fn is_in_subset(rot: &Rotation2<N2>) -> bool {$/;"	f
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs	/^    fn is_in_subset(sim: &Similarity<N2, U2, R>) -> bool {$/;"	f
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs	/^    fn is_in_subset(t: &Transform<N2, U2, C>) -> bool {$/;"	f
is_in_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs	/^    fn is_in_subset(uq: &UnitComplex<N2>) -> bool {$/;"	f
is_infinite	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub fn is_infinite(self) -> bool {$/;"	P	implementation:Complex
is_infinite	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn is_infinite(self) -> bool {$/;"	P	interface:FloatCore
is_infinite	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn is_infinite(self) -> bool;$/;"	P	interface:Float
is_infinite	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/utils.rs	/^    fn is_infinite(self) -> bool;$/;"	P	interface:Float
is_invertible	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/properties.rs	/^    pub fn is_invertible(&self) -> bool {$/;"	f
is_invertible	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs	/^    pub fn is_invertible(&self) -> bool {$/;"	f
is_invertible	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs	/^    pub fn is_invertible(&self) -> bool {$/;"	f
is_invertible	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs	/^    pub fn is_invertible(&self) -> bool {$/;"	f
is_left	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs	/^    pub fn is_left(&self) -> bool {$/;"	P	implementation:EitherOrBoth
is_less	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    fn is_less(self, rhs: B) -> Self::Output {$/;"	f
is_less	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    fn is_less(self, rhs: Rhs) -> Self::Output;$/;"	P	interface:IsLess
is_less_or_equal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    fn is_less_or_equal(self, rhs: B) -> Self::Output {$/;"	f
is_less_or_equal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    fn is_less_or_equal(self, rhs: Rhs) -> Self::Output;$/;"	P	interface:IsLessOrEqual
is_less_or_equal_private	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn is_less_or_equal_private(self, Rhs, Cmp) -> Self::Output;$/;"	P	interface:IsLessOrEqualPrivate
is_less_or_equal_private	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn is_less_or_equal_private(self, _: B, _: Equal) -> Self::Output {$/;"	P	implementation:A
is_less_or_equal_private	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn is_less_or_equal_private(self, _: B, _: Greater) -> Self::Output {$/;"	P	implementation:A
is_less_or_equal_private	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn is_less_or_equal_private(self, _: B, _: Less) -> Self::Output {$/;"	P	implementation:A
is_less_private	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn is_less_private(self, Rhs, Cmp) -> Self::Output;$/;"	P	interface:IsLessPrivate
is_less_private	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn is_less_private(self, _: B, _: Equal) -> Self::Output {$/;"	P	implementation:A
is_less_private	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn is_less_private(self, _: B, _: Greater) -> Self::Output {$/;"	P	implementation:A
is_less_private	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn is_less_private(self, _: B, _: Less) -> Self::Output {$/;"	P	implementation:A
is_match	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/regex.rs	/^    pub fn is_match(&self, s: &str) -> bool {$/;"	P	implementation:Filter
is_match	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/string.rs	/^    pub fn is_match(&self, s: &str) -> bool {$/;"	P	implementation:Filter
is_match	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn is_match(&self) -> bool {$/;"	P	implementation:StateFlags
is_match	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    pub fn is_match(&self) -> bool {$/;"	P	implementation:Result
is_match	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    pub fn is_match(&self) -> bool {$/;"	P	implementation:Inst
is_match	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    pub fn is_match(&self, text: &[u8]) -> bool {$/;"	P	implementation:Regex
is_match	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    pub fn is_match(&self, text: &str) -> bool {$/;"	P	implementation:Regex
is_match_at	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    fn is_match_at(&self, text: &[u8], start: usize) -> bool {$/;"	P	implementation:ExecNoSync
is_match_at	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    fn is_match_at(&self, text: &str, start: usize) -> bool {$/;"	P	implementation:ExecNoSyncStr
is_match_at	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    pub fn is_match_at(&self, text: &[u8], start: usize) -> bool {$/;"	P	implementation:Regex
is_match_at	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_trait.rs	/^    fn is_match_at(&self, text: &Self::Text, start: usize) -> bool;$/;"	P	interface:RegularExpression
is_match_at	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    pub fn is_match_at(&self, text: &str, start: usize) -> bool {$/;"	P	implementation:Regex
is_n_pow	/Users/williamcashman/Honours/Program/n_poly/src/mathutils.rs	/^pub fn is_n_pow(num: usize, n: usize) -> bool {$/;"	f
is_nan	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub fn is_nan(self) -> bool {$/;"	P	implementation:Complex
is_nan	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn is_nan(self) -> bool {$/;"	P	interface:FloatCore
is_nan	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn is_nan(self) -> bool;$/;"	P	interface:Float
is_nan	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/utils.rs	/^    fn is_nan(self) -> bool;$/;"	P	interface:Float
is_negative	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/sign.rs	/^    fn is_negative(&self) -> bool {$/;"	f
is_negative	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/sign.rs	/^    fn is_negative(&self) -> bool;$/;"	P	interface:Signed
is_none	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    pub fn is_none(self) -> bool {$/;"	P	implementation:Char
is_normal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub fn is_normal(self) -> bool {$/;"	P	implementation:Complex
is_normal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn is_normal(self) -> bool {$/;"	P	interface:FloatCore
is_normal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn is_normal(self) -> bool;$/;"	P	interface:Float
is_not_equal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    fn is_not_equal(self, rhs: B) -> Self::Output {$/;"	f
is_not_equal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    fn is_not_equal(self, rhs: Rhs) -> Self::Output;$/;"	P	interface:IsNotEqual
is_not_equal_private	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn is_not_equal_private(self, Rhs, Cmp) -> Self::Output;$/;"	P	interface:IsNotEqualPrivate
is_not_equal_private	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn is_not_equal_private(self, _: B, _: Equal) -> Self::Output {$/;"	P	implementation:A
is_not_equal_private	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn is_not_equal_private(self, _: B, _: Greater) -> Self::Output {$/;"	P	implementation:A
is_not_equal_private	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn is_not_equal_private(self, _: B, _: Less) -> Self::Output {$/;"	P	implementation:A
is_one	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn is_one(&self) -> bool {$/;"	P	implementation:Complex
is_one	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/identities.rs	/^    fn is_one(&self) -> bool$/;"	P	interface:One
is_orthogonal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/properties.rs	/^    pub fn is_orthogonal(&self, eps: N::Epsilon) -> bool$/;"	P	implementation:Matrix
is_positive	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/sign.rs	/^    fn is_positive(&self) -> bool {$/;"	f
is_positive	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/sign.rs	/^    fn is_positive(&self) -> bool;$/;"	P	interface:Signed
is_pure	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn is_pure(&self) -> bool {$/;"	f
is_reverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    pub is_reverse: bool,$/;"	m	struct:Program
is_right	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs	/^    pub fn is_right(&self) -> bool {$/;"	P	implementation:EitherOrBoth
is_sign_negative	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/real.rs	/^    fn is_sign_negative(self) -> bool;$/;"	P	interface:RealField
is_sign_negative	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn is_sign_negative(self) -> bool {$/;"	P	interface:FloatCore
is_sign_negative	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn is_sign_negative(self) -> bool;$/;"	P	interface:Float
is_sign_negative	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn is_sign_negative(self) -> bool;$/;"	P	interface:Real
is_sign_positive	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/real.rs	/^    fn is_sign_positive(self) -> bool;$/;"	P	interface:RealField
is_sign_positive	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn is_sign_positive(self) -> bool {$/;"	P	interface:FloatCore
is_sign_positive	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn is_sign_positive(self) -> bool;$/;"	P	interface:Float
is_sign_positive	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn is_sign_positive(self) -> bool;$/;"	P	interface:Real
is_sorted	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    pub fn is_sorted(&self) -> bool {$/;"	P	implementation:CsMatrix
is_special_orthogonal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/properties.rs	/^    pub fn is_special_orthogonal(&self, eps: N) -> bool$/;"	f
is_square	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/properties.rs	/^    pub fn is_square(&self) -> bool {$/;"	P	implementation:Matrix
is_square	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    pub fn is_square(&self) -> bool {$/;"	P	implementation:CsMatrix
is_start	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    pub fn is_start(&self) -> bool {$/;"	P	implementation:InputAt
is_start_byte	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/utf8.rs	/^fn is_start_byte(b: u8) -> bool {$/;"	f
is_stderr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/atty.rs	/^    pub(in crate::fmt) fn is_stderr() -> bool {$/;"	f	module:imp
is_stdout	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/atty.rs	/^    pub(in crate::fmt) fn is_stdout() -> bool {$/;"	f	module:imp
is_suffix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    pub fn is_suffix(&self, text: &[u8]) -> bool {$/;"	P	implementation:FreqyPacked
is_test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^    is_test: bool,$/;"	m	struct:Builder
is_test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^    pub(crate) fn is_test(&mut self, is_test: bool) -> &mut Self {$/;"	P	implementation:Builder
is_test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    pub fn is_test(&mut self, is_test: bool) -> &mut Self {$/;"	P	implementation:Builder
is_upper_diagonal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs	/^    pub fn is_upper_diagonal(&self) -> bool {$/;"	f
is_valid_cap_letter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/expand.rs	/^fn is_valid_cap_letter(b: &u8) -> bool {$/;"	f
is_whitespace	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn is_whitespace(c: char) -> bool {$/;"	f	function:from_str_generic
is_word	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn is_word(&self) -> bool {$/;"	P	implementation:StateFlags
is_word_byte	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    pub fn is_word_byte(self) -> bool {$/;"	P	implementation:Char
is_word_char	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    pub fn is_word_char(self) -> bool {$/;"	P	implementation:Char
is_zero	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^    fn is_zero(&self) -> bool {$/;"	P	implementation:Id
is_zero	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    pub fn is_zero(&self) -> bool {$/;"	P	implementation:Duration
is_zero	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^    fn is_zero(&self) -> bool {$/;"	f
is_zero	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^    fn is_zero(&self) -> bool {$/;"	f
is_zero	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn is_zero(&self) -> bool {$/;"	P	implementation:Complex
is_zero	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/identities.rs	/^    fn is_zero(&self) -> bool {$/;"	f
is_zero	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/identities.rs	/^    fn is_zero(&self) -> bool;$/;"	P	interface:Zero
is_zero	/Users/williamcashman/Honours/Program/n_poly/src/algebras/mod.rs	/^    fn is_zero(&self) -> bool {$/;"	P	interface:Zero
is_zero	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    fn is_zero(&self) -> bool {$/;"	P	implementation:Poly
isize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^impl ToValue for isize {$/;"	c
iso_week	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    #[inline] fn iso_week(&self) -> IsoWeek { self.naive_local().iso_week() }$/;"	P	implementation:Date
iso_week	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    #[inline] fn iso_week(&self) -> IsoWeek { self.naive_local().iso_week() }$/;"	P	implementation:DateTime
iso_week	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    fn iso_week(&self) -> IsoWeek;$/;"	P	interface:Datelike
iso_week	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn iso_week(&self) -> IsoWeek {$/;"	P	implementation:NaiveDate
iso_week	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn iso_week(&self) -> IsoWeek {$/;"	P	implementation:NaiveDateTime
iso_week_from_yof	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/isoweek.rs	/^pub fn iso_week_from_yof(year: i32, of: Of) -> IsoWeek {$/;"	f
isometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod isometry;$/;"	n
isometry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^    pub isometry: Isometry<N, D, R>,$/;"	m	struct:Similarity
isometry_alga	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod isometry_alga;$/;"	n
isometry_alias	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod isometry_alias;$/;"	n
isometry_binop_assign_impl_all	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_ops.rs	/^macro_rules! isometry_binop_assign_impl_all($/;"	M
isometry_binop_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_ops.rs	/^macro_rules! isometry_binop_impl($/;"	M
isometry_binop_impl_all	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_ops.rs	/^macro_rules! isometry_binop_impl_all($/;"	M
isometry_construction	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod isometry_construction;$/;"	n
isometry_construction_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs	/^macro_rules! isometry_construction_impl($/;"	M
isometry_conversion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod isometry_conversion;$/;"	n
isometry_from_composition_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_ops.rs	/^macro_rules! isometry_from_composition_impl($/;"	M
isometry_from_composition_impl_all	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_ops.rs	/^macro_rules! isometry_from_composition_impl_all($/;"	M
isometry_ops	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod isometry_ops;$/;"	n
isometry_simba	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod isometry_simba;$/;"	n
isoweek	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub isoweek: Option<u32>,$/;"	m	struct:Parsed
isoweek	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    mod isoweek;$/;"	n	module:naive
isoweek_delta	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    pub fn isoweek_delta(&self) -> u32 {$/;"	P	implementation:YearFlags
isoweekdate_raw	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    pub fn isoweekdate_raw(&self) -> (u32, Weekday) {$/;"	P	implementation:Of
isoyear	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub isoyear: Option<i32>,$/;"	m	struct:Parsed
isoyear_div_100	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub isoyear_div_100: Option<i32>,$/;"	m	struct:Parsed
isoyear_mod_100	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub isoyear_mod_100: Option<i32>,$/;"	m	struct:Parsed
isoywd	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^    fn isoywd(&self, year: i32, week: u32, weekday: Weekday) -> Date<Self> {$/;"	P	interface:TimeZone
isoywd_opt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^    fn isoywd_opt(&self, year: i32, week: u32, weekday: Weekday) -> LocalResult<Date<Self>> {$/;"	P	interface:TimeZone
it	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lazy_buffer.rs	/^    pub it: I,$/;"	m	struct:LazyBuffer
it	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/pattern.rs	/^    it: Matches<'r, 't>,$/;"	m	struct:RegexSearcher
it	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    it: SubCapturesPosIter<'c>,$/;"	m	struct:SubCaptureMatches
it	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    it: SubCapturesPosIter<'c>,$/;"	m	struct:SubCaptureMatches
it0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    it0: I,$/;"	m	struct:InterleaveShortest
it1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    it1: J,$/;"	m	struct:InterleaveShortest
items	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    items: I,$/;"	m	struct:DelayedFormat
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn iter(&self) -> LRUListIterator<T> {$/;"	P	implementation:LRUList
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^pub mod iter;$/;"	n
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    iter: &'a mut I,$/;"	m	struct:TakeWhileRef
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    iter: CoalesceCore<I>,$/;"	m	struct:Coalesce
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    iter: CoalesceCore<I>,$/;"	m	struct:DedupBy
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    iter: Fuse<I>,$/;"	m	struct:Step
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:Batching
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:CoalesceCore
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:MapInto
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:MapResults
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:Positions
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:PutBack
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:Tuple1Combination
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:Update
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:WhileSome
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    iter: T::Combination,$/;"	m	struct:TupleCombinations
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs	/^    iter: I,$/;"	m	struct:MultiProductIter
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/cons_tuples_impl.rs	/^    iter: I,$/;"	m	struct:ConsTuples
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    iter: I,$/;"	m	struct:GroupInner
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/intersperse.rs	/^    iter: Fuse<I>,$/;"	m	struct:Intersperse
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs	/^    iter: Fuse<I>,$/;"	m	struct:MultiPeek
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/pad_tail.rs	/^    iter: Fuse<I>,$/;"	m	struct:PadUsing
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs	/^    iter: &'a mut I,$/;"	m	struct:PeekingTakeWhile
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs	/^    iter: I,$/;"	m	struct:ProcessResults
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs	/^    iter: I,$/;"	m	struct:PutBackN
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tee.rs	/^    iter: I,$/;"	m	struct:TeeBuffer
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs	/^    iter: Fuse<I>,$/;"	m	struct:Tuples
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs	/^    iter: I,$/;"	m	struct:TupleWindows
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs	/^    iter: I,$/;"	m	struct:UniqueBy
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs	/^    iter: UniqueBy<I, I::Item, ()>,$/;"	m	struct:Unique
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn iter(&self) -> MatrixIter<N, R, C, S> {$/;"	P	implementation:Matrix
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs	/^pub mod iter;$/;"	n
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^    pub fn iter(&self) -> MatrixIter<N, D, U1, <DefaultAllocator as Allocator<N, D>>::Buffer> {$/;"	f
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-0.2.1/src/lib.rs	/^pub mod iter {$/;"	n
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^    pub fn iter(&self) -> IndexVecIter<'_> {$/;"	P	implementation:IndexVec
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^        iter: I,$/;"	m	struct:test::ChunkHintedIterator
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^        iter: I,$/;"	m	struct:test::UnhintedIterator
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^        iter: I,$/;"	m	struct:test::WindowHintedIterator
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    pub fn iter(&self) -> LiteralIter {$/;"	P	implementation:LiteralSearcher
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    pub fn iter<'c>(&'c self) -> SubCaptureMatches<'c, 't> {$/;"	P	implementation:Captures
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_trait.rs	/^    pub fn iter(&self) -> SubCapturesPosIter {$/;"	P	implementation:Locations
iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    pub fn iter<'c>(&'c self) -> SubCaptureMatches<'c, 't> {$/;"	P	implementation:Captures
iter_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn iter_mut(&mut self) -> MatrixIterMut<N, R, C, S> {$/;"	P	implementation:Matrix
iter_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^    pub fn iter_mut($/;"	f
iter_orig	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs	/^    iter_orig: I,$/;"	m	struct:MultiProductIter
iter_position	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    pub unsafe fn iter_position(&mut self) -> (slice::Iter<T>, &mut usize) {$/;"	P	implementation:ArrayConsumer
iter_position	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    pub unsafe fn iter_position(&mut self) -> (slice::IterMut<T>, &mut usize) {$/;"	P	implementation:ArrayBuilder
iterate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs	/^    fn iterate(&mut self) {$/;"	f
iterate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs	/^pub fn iterate<St, F>(initial_value: St, f: F) -> Iterate<St, F>$/;"	f
iterate_last	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs	/^    fn iterate_last($/;"	f
iterator	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^macro_rules! iterator {$/;"	M
izip	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^macro_rules! izip {$/;"	M
jobs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/backtrack.rs	/^    jobs: Vec<Job>,$/;"	m	struct:Cache
join	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^    fn join(&self, _: &Self) -> Self {$/;"	P	implementation:Id
join	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/lattice.rs	/^    fn join(&self, other: &Self) -> Self {$/;"	P	implementation:Complex
join	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/lattice.rs	/^    fn join(&self, other: &Self) -> Self;$/;"	P	interface:JoinSemilattice
join	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs	/^pub fn join<I>(iterable: I, sep: &str) -> String$/;"	f
join	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn join(&mut self, sep: &str) -> String$/;"	P	interface:Itertools
join	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^    fn join(&self, other: &Self) -> Self {$/;"	f
join	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_alga.rs	/^    fn join(&self, other: &Self) -> Self {$/;"	f
k	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations_with_replacement.rs	/^    k: usize,$/;"	m	struct:CombinationsWithReplacement
key	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    key: F,$/;"	m	struct:GroupInner
key	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    key: usize,$/;"	m	struct:ChunkIndex
key	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^    key: &'k str,$/;"	m	struct:Key
key	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/mod.rs	/^mod key;$/;"	n
key	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^            key: &'static str,$/;"	m	struct:tests::count::OnePair
key	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^            key: Key<'k>,$/;"	m	struct:Source::get::Get
key	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    key: SuffixCacheKey,$/;"	m	struct:SuffixCacheEntry
key_from_string	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^    fn key_from_string() {$/;"	f	module:tests
key_order	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    pub fn key_order(&self) -> impl Iterator<Item = &K> {$/;"	P	implementation:SizedCache
key_values	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    key_values: KeyValues<'a>,$/;"	m	struct:Record
key_values	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn key_values(&mut self, kvs: &'a kv::Source) -> &mut RecordBuilder<'a> {$/;"	P	implementation:RecordBuilder
key_values	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn key_values(&self) -> &kv::Source {$/;"	P	implementation:Record
kind	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    kind: ComplexErrorKind<E>,$/;"	m	struct:ParseComplexError
kind	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^    pub kind: FloatErrorKind,$/;"	m	struct:ParseFloatError
kmerge	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs	/^pub fn kmerge<I>(iterable: I) -> KMerge<<I::Item as IntoIterator>::IntoIter>$/;"	f
kmerge	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn kmerge(self) -> KMerge<<Self::Item as IntoIterator>::IntoIter>$/;"	P	interface:Itertools
kmerge_by	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs	/^pub fn kmerge_by<I, F>(iterable: I, mut less_than: F)$/;"	f
kmerge_by	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn kmerge_by<F>(self, first: F)$/;"	P	interface:Itertools
kmerge_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^mod kmerge_impl;$/;"	n
kmerge_pred	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs	/^    fn kmerge_pred(&mut self, a: &T, b: &T) -> bool {$/;"	P	implementation:F
kmerge_pred	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs	/^    fn kmerge_pred(&mut self, a: &T, b: &T) -> bool {$/;"	P	implementation:KMergeByLt
kmerge_pred	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs	/^    fn kmerge_pred(&mut self, a: &T, b: &T) -> bool;$/;"	P	interface:KMergePredicate
kronecker	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^    pub fn kronecker<R2: Dim, C2: Dim, SB>($/;"	f
kv	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^pub mod kv;$/;"	n
l	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs	/^    pub fn l(&self) -> MatrixN<N, D> {$/;"	f
l	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs	/^    pub fn l(&self) -> MatrixMN<N, R, DimMinimum<R, C>>$/;"	f
l	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs	/^    pub fn l(&self) -> MatrixMN<N, R, DimMinimum<R, C>>$/;"	f
l	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_cholesky.rs	/^    l: CsMatrix<N, D, D>,$/;"	m	struct:CsCholesky
l	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_cholesky.rs	/^    pub fn l(&self) -> Option<&CsMatrix<N, D, D>> {$/;"	f
l1_norm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub fn l1_norm(&self) -> T {$/;"	P	implementation:Complex
l_dirty	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs	/^    pub fn l_dirty(&self) -> &MatrixN<N, D> {$/;"	f
l_unpack	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs	/^    pub fn l_unpack(self) -> MatrixMN<N, R, DimMinimum<R, C>>$/;"	f
l_unpack_with_p	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs	/^    fn l_unpack_with_p($/;"	f
lambda	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/binomial.rs	/^            fn lambda(a: f64) -> f64 {$/;"	f	method:Binomial::sample
lambda	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/poisson.rs	/^    lambda: f64,$/;"	m	struct:Poisson
lambda_inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/exponential.rs	/^    lambda_inverse: f64,$/;"	m	struct:Exp
lanes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_simba.rs	/^    fn lanes() -> usize {$/;"	f
lanes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_simba.rs	/^    fn lanes() -> usize {$/;"	f
lanes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_simba.rs	/^    fn lanes() -> usize {$/;"	f
lanes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_simba.rs	/^    fn lanes() -> usize {$/;"	f
lanes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_simba.rs	/^    fn lanes() -> usize {$/;"	f
lanes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_simba.rs	/^    fn lanes() -> usize {$/;"	f
lanes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_simba.rs	/^    fn lanes() -> usize {$/;"	f
lanes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_simba.rs	/^    fn lanes() -> usize {$/;"	f
lanes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_simba.rs	/^    fn lanes() -> usize {$/;"	f
lanes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/utils.rs	/^    fn lanes() -> usize {$/;"	P	interface:FloatAsSIMD
large_shape	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    large_shape: GammaLargeShape,$/;"	m	struct:GammaSmallShape
last	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/iter.rs	/^    fn last(mut self) -> Option<T> {$/;"	f
last	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    fn last(self) -> Option<Self::Item> {$/;"	f
last	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    last: Option<I::Item>,$/;"	m	struct:CoalesceCore
last	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs	/^    fn last(self) -> Option<Self::Item> {$/;"	f
last	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/merge_join.rs	/^    fn last(mut self) -> Option<Self::Item> {$/;"	f
last	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs	/^    last: Option<T>,$/;"	m	struct:TupleWindows
last	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    last: usize,$/;"	m	struct:Split
last	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    last: usize,$/;"	m	struct:Split
last_cache_flush	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    last_cache_flush: usize,$/;"	m	struct:Fsm
last_end	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_trait.rs	/^    last_end: usize,$/;"	m	struct:Matches
last_match	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_trait.rs	/^    last_match: Option<usize>,$/;"	m	struct:Matches
last_match_si	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    last_match_si: StatePtr,$/;"	m	struct:Fsm
last_step_end	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/pattern.rs	/^    last_step_end: usize,$/;"	m	struct:RegexSearcher
latest	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^    pub fn latest(self) -> Option<T> {$/;"	P	implementation:LocalResult
lattice	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/mod.rs	/^mod lattice;$/;"	n
lazy_buffer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^mod lazy_buffer;$/;"	n
lc	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    pub fn lc(&self) -> P::Coeff {$/;"	P	implementation:Poly
lcm	/Users/williamcashman/Honours/Program/n_poly/src/algebras/integers.rs	/^    fn lcm(&self, other: &Self) -> Self {$/;"	P	implementation:ZZ
lcm	/Users/williamcashman/Honours/Program/n_poly/src/algebras/mod.rs	/^    fn lcm(&self, _other: &Self) -> Self {$/;"	P	implementation:F
lcm	/Users/williamcashman/Honours/Program/n_poly/src/algebras/mod.rs	/^    fn lcm(&self, other: &Self) -> Self;$/;"	P	interface:EuclideanDomain
lcm	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    fn lcm(&self, _other: &Self) -> Self {$/;"	P	implementation:Poly
lcm	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    fn lcm(&self, other: &Self) -> Self;$/;"	P	interface:Variate
lcm	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    pub fn lcm(&self, other: &Self) -> Self {$/;"	P	implementation:Term
lcm	/Users/williamcashman/Honours/Program/n_poly/src/polym.rs	/^    fn lcm(&self, other: &Self) -> Self {$/;"	P	implementation:MultiIndex
lcm	/Users/williamcashman/Honours/Program/n_poly/src/polyu.rs	/^    fn lcm(&self, other: &Self) -> Self {$/;"	P	implementation:UniIndex
lcp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    lcp: FreqyPacked,$/;"	m	struct:LiteralSearcher
lcp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    pub fn lcp(&self) -> &FreqyPacked {$/;"	P	implementation:LiteralSearcher
lcs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    lcs: FreqyPacked,$/;"	m	struct:LiteralSearcher
lcs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    pub fn lcs(&self) -> &FreqyPacked {$/;"	P	implementation:LiteralSearcher
le	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn le(&self, other: &Level) -> bool {$/;"	P	implementation:Level
le	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn le(&self, other: &Level) -> bool {$/;"	P	implementation:LevelFilter
le	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn le(&self, other: &LevelFilter) -> bool {$/;"	P	implementation:Level
le	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn le(&self, other: &LevelFilter) -> bool {$/;"	P	implementation:LevelFilter
le	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    fn le(&self, right: &Self) -> bool {$/;"	f
le	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^    fn le(&self, right: &Self) -> bool {$/;"	f
leading_zeros	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/int.rs	/^    fn leading_zeros(self) -> u32;$/;"	P	interface:PrimInt
leads_to_match	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    pub fn leads_to_match(&self, pc: usize) -> bool {$/;"	P	implementation:Program
left	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs	/^    pub fn left(self) -> Option<A> {$/;"	P	implementation:EitherOrBoth
left	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/merge_join.rs	/^    left: PutBack<Fuse<I>>,$/;"	m	struct:MergeJoinBy
left	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^    pub fn left(&self) -> N {$/;"	P	implementation:Orthographic3
left_and_then	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs	/^    pub fn left_and_then<F, L>(self, f: F) -> EitherOrBoth<L, B>$/;"	P	implementation:EitherOrBoth
left_div	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn left_div(&self, other: &Self) -> Option<Self>$/;"	f
left_hand_s_poly	/Users/williamcashman/Honours/Program/n_poly/src/ideals/f4.rs	/^pub fn left_hand_s_poly<'a, P: FPolyRing>(a: &Poly<'a, P>, b: &Poly<'a, P>) -> Poly<'a, P> {$/;"	f
left_scalar_mul_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^macro_rules! left_scalar_mul_impl($/;"	M
left_scalar_mul_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_ops.rs	/^macro_rules! left_scalar_mul_impl($/;"	M
left_scalar_mul_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_ops.rs	/^macro_rules! left_scalar_mul_impl($/;"	M
left_shift_push	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs	/^    fn left_shift_push(&mut self, item: Self::Item);$/;"	P	interface:TupleCollect
len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/iter.rs	/^    fn len(&self) -> usize {$/;"	f
len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lazy_buffer.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:ColumnIter
len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:ColumnIterMut
len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:RowIter
len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:RowIterMut
len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:Matrix
len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:VecStorage
len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs	/^    len: usize,$/;"	m	struct:PermutationSequence
len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    fn len(&self) -> usize {$/;"	f
len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    fn len(&self) -> usize;$/;"	P	interface:CsStorage
len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:CsMatrix
len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:IndexVec
len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:SliceChooseIter
len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:StateMap
len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:ByteInput
len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:CharInput
len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:T
len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    fn len(&self) -> usize;$/;"	P	interface:Input
len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    len: usize,$/;"	m	struct:InputAt
len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:InputAt
len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:BoyerMooreSearch
len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:FreqyPacked
len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:LiteralSearcher
len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/mod.rs	/^        pub fn len(&self) -> usize {$/;"	P	implementation:imp::LiteralSearcher
len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:CaptureLocations
len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:Captures
len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_trait.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:Locations
len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:CaptureLocations
len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:Captures
len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/sparse.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:SparseSet
len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^    fn len(&self) -> Self::Output {$/;"	P	implementation:ATerm
len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^    fn len(&self) -> Self::Output {$/;"	f
len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    fn len(&self) -> Self::Output;$/;"	P	interface:Len
len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn len(&self) -> Self::Output {$/;"	P	implementation:UTerm
len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn len(&self) -> Self::Output {$/;"	f
len_utf8	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    pub fn len_utf8(self) -> usize {$/;"	P	implementation:Char
length	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    fn length(&self, _: D) -> Self::Length {$/;"	P	implementation:Range
length	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    fn length(&self, _: D) -> Self::Length {$/;"	P	implementation:RangeInclusive
length	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    fn length(&self, _: D) -> Self::Length {$/;"	P	implementation:RangeTo
length	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    fn length(&self, _: D) -> Self::Length {$/;"	P	implementation:RangeToInclusive
length	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    fn length(&self, _: D) -> Self::Length {$/;"	P	implementation:usize
length	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    fn length(&self, dimension: D) -> Self::Length {$/;"	P	implementation:RangeFrom
length	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    fn length(&self, dimension: D) -> Self::Length {$/;"	P	implementation:RangeFull
length	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    fn length(&self, dimension: D) -> Self::Length {$/;"	f
length	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    fn length(&self, dimension: D) -> Self::Length;$/;"	P	interface:DimRange
lerp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn lerp<S2: Storage<N, D>>(&self, rhs: &Vector<N, D, S2>, t: N) -> VectorN<N, D>$/;"	P	implementation:Vector
lerp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn lerp(&self, other: &Self, t: N) -> Quaternion<N> {$/;"	f
lerp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn lerp(&self, other: &Self, t: N) -> Self {$/;"	f
less_than	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs	/^    less_than: F,$/;"	m	struct:KMergeBy
level	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^    level: LevelFilter,$/;"	m	struct:Directive
level	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    level: bool,$/;"	m	struct:DefaultFormat
level	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    level: Level,$/;"	m	struct:Metadata
level	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn level(&mut self, arg: Level) -> &mut MetadataBuilder<'a> {$/;"	P	implementation:MetadataBuilder
level	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn level(&mut self, level: Level) -> &mut RecordBuilder<'a> {$/;"	P	implementation:RecordBuilder
level	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn level(&self) -> Level {$/;"	P	implementation:Metadata
level	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn level(&self) -> Level {$/;"	P	implementation:Record
level_bytes_tokens	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^    fn level_bytes_tokens(variant: &'static [u8]) -> [Token; 3] {$/;"	f	module:tests
level_filter_bytes_tokens	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^    fn level_filter_bytes_tokens(variant: &'static [u8]) -> [Token; 3] {$/;"	f	module:tests
level_filter_token	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^    fn level_filter_token(variant: &'static str) -> Token {$/;"	f	module:tests
level_token	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^    fn level_token(variant: &'static str) -> Token {$/;"	f	module:tests
lex	/Users/williamcashman/Honours/Program/n_poly/src/polym.rs	/^    fn lex(a: &Self, b: &Self) -> Ordering {$/;"	P	implementation:MultiIndex
lex	/Users/williamcashman/Honours/Program/n_poly/src/polym.rs	/^    fn lex(a: &Self, b: &Self) -> Ordering;$/;"	P	interface:MultiIndexTrait
linalg	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs	/^pub mod linalg;$/;"	n
line	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    line: Option<u32>,$/;"	m	struct:Record
line	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn line(&mut self, line: Option<u32>) -> &mut RecordBuilder<'a> {$/;"	P	implementation:RecordBuilder
line	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn line(&self) -> Option<u32> {$/;"	P	implementation:Record
linear	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/lib.rs	/^pub mod linear;$/;"	n
linear_index	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs	/^    fn linear_index(&self, irow: usize, icol: usize) -> usize {$/;"	P	interface:Storage
link_after	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn link_after(&mut self, index: usize, prev: usize) {$/;"	P	implementation:LRUList
list	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    list: &'a LRUList<T>,$/;"	m	struct:LRUListIterator
lit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^macro_rules! lit  { ($x:expr) => (Item::Literal($x)) }$/;"	M
literal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/lib.rs	/^mod literal;$/;"	n
lm	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    pub fn lm(&self) -> P::Var {$/;"	P	implementation:Poly
ln	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn ln(self) -> Self {$/;"	P	implementation:Complex
ln	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn ln(self) -> Self;$/;"	P	interface:ComplexField
ln	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn ln(&self) -> Quaternion<N>$/;"	f
ln	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn ln(&self) -> Self {$/;"	f
ln	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub fn ln(&self) -> Self {$/;"	P	implementation:Complex
ln	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn ln(self) -> Self {$/;"	P	implementation:f32
ln	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn ln(self) -> Self {$/;"	P	implementation:f64
ln	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn ln(self) -> Self;$/;"	P	interface:Float
ln	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn ln(self) -> Self;$/;"	P	interface:Real
ln_10	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/real.rs	/^    fn ln_10() -> Self;$/;"	P	interface:RealField
ln_1p	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn ln_1p(self) -> Self {$/;"	P	implementation:Complex
ln_1p	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn ln_1p(self) -> Self;$/;"	P	interface:ComplexField
ln_1p	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn ln_1p(self) -> Self {$/;"	P	implementation:f32
ln_1p	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn ln_1p(self) -> Self {$/;"	P	implementation:f64
ln_1p	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn ln_1p(self) -> Self;$/;"	P	interface:Float
ln_1p	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn ln_1p(self) -> Self;$/;"	P	interface:Real
ln_2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/real.rs	/^    fn ln_2() -> Self;$/;"	P	interface:RealField
local	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^mod local;$/;"	n
local_minus_utc	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/fixed.rs	/^    local_minus_utc: i32,$/;"	m	struct:FixedOffset
local_minus_utc	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/fixed.rs	/^    pub fn local_minus_utc(&self) -> i32 {$/;"	P	implementation:FixedOffset
locations	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    pub fn locations(&self) -> CaptureLocations {$/;"	P	implementation:Regex
locations	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_trait.rs	/^    fn locations(&self) -> Locations {$/;"	P	interface:RegularExpression
locations	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    pub fn locations(&self) -> CaptureLocations {$/;"	P	implementation:Regex
locs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    locs: re_trait::Locations,$/;"	m	struct:Captures
locs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_trait.rs	/^    locs: &'c Locations,$/;"	m	struct:SubCapturesPosIter
locs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    locs: re_trait::Locations,$/;"	m	struct:Captures
log	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn log(self, base: N) -> Self {$/;"	P	implementation:Complex
log	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn log(self, base: Self::RealField) -> Self;$/;"	P	interface:ComplexField
log	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    fn log(&self, record: &Record) {$/;"	P	implementation:Logger
log	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn log(&self, _: &Record) {}$/;"	P	implementation:NopLogger
log	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn log(&self, record: &Record);$/;"	P	interface:Log
log	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/macros.rs	/^macro_rules! log {$/;"	M
log	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub fn log(&self, base: T) -> Self {$/;"	P	implementation:Complex
log	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn log(self, base: Self) -> Self;$/;"	P	interface:Float
log	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn log(self, base: Self) -> Self;$/;"	P	interface:Real
log10	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn log10(self) -> Self {$/;"	P	implementation:Complex
log10	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn log10(self) -> Self;$/;"	P	interface:ComplexField
log10	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn log10(self) -> Self {$/;"	P	implementation:f32
log10	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn log10(self) -> Self {$/;"	P	implementation:f64
log10	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn log10(self) -> Self;$/;"	P	interface:Float
log10	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn log10(self) -> Self;$/;"	P	interface:Real
log10_e	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/real.rs	/^    fn log10_e() -> Self;$/;"	P	interface:RealField
log2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn log2(self) -> Self {$/;"	P	implementation:Complex
log2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn log2(self) -> Self;$/;"	P	interface:ComplexField
log2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn log2(self) -> Self {$/;"	P	implementation:f32
log2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn log2(self) -> Self {$/;"	P	implementation:f64
log2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn log2(self) -> Self;$/;"	P	interface:Float
log2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn log2(self) -> Self;$/;"	P	interface:Real
log2_e	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/real.rs	/^    fn log2_e() -> Self;$/;"	P	interface:RealField
log2_test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^fn log2_test() {$/;"	f
log2_unchecked	/Users/williamcashman/Honours/Program/n_poly/src/mathutils.rs	/^pub fn log2_unchecked(n: usize) -> usize {$/;"	f
log_enabled	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/macros.rs	/^macro_rules! log_enabled {$/;"	M
log_gamma	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/utils.rs	/^pub fn log_gamma(x: f64) -> f64 {$/;"	f
log_lambda	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/poisson.rs	/^    log_lambda: f64,$/;"	m	struct:Poisson
logger	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^pub fn logger() -> &'static Log {$/;"	f
logn	/Users/williamcashman/Honours/Program/n_poly/src/mathutils.rs	/^pub fn logn(num: usize, n: usize) -> usize {$/;"	f
look	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    pub look: EmptyLook,$/;"	m	struct:InstEmptyLook
look_at_lh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs	/^    pub fn look_at_lh(eye: &Point3<N>, target: &Point3<N>, up: &Vector3<N>) -> Self {$/;"	P	implementation:Matrix4
look_at_lh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^    pub fn look_at_lh<SB, SC>(dir: &Vector<N, U3, SB>, up: &Vector<N, U3, SC>) -> Self$/;"	f
look_at_lh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^    pub fn look_at_lh<SB, SC>(dir: &Vector<N, U3, SB>, up: &Vector<N, U3, SC>) -> Self$/;"	f
look_at_rh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs	/^    pub fn look_at_rh(eye: &Point3<N>, target: &Point3<N>, up: &Vector3<N>) -> Self {$/;"	P	implementation:Matrix4
look_at_rh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^    pub fn look_at_rh<SB, SC>(dir: &Vector<N, U3, SB>, up: &Vector<N, U3, SC>) -> Self$/;"	f
look_at_rh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^    pub fn look_at_rh<SB, SC>(dir: &Vector<N, U3, SB>, up: &Vector<N, U3, SC>) -> Self$/;"	f
lookup_buffer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    fn lookup_buffer(&mut self, client: usize) -> Option<I::Item> {$/;"	f
low	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^    low: X,$/;"	m	struct:UniformFloat
low	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^    low: X,$/;"	m	struct:UniformInt
lower	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    fn lower(&self, _: D) -> usize {$/;"	P	implementation:Range
lower	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    fn lower(&self, _: D) -> usize {$/;"	P	implementation:RangeFrom
lower	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    fn lower(&self, _: D) -> usize {$/;"	P	implementation:RangeFull
lower	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    fn lower(&self, _: D) -> usize {$/;"	P	implementation:RangeInclusive
lower	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    fn lower(&self, _: D) -> usize {$/;"	P	implementation:RangeTo
lower	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    fn lower(&self, _: D) -> usize {$/;"	P	implementation:RangeToInclusive
lower	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    fn lower(&self, _: D) -> usize {$/;"	P	implementation:usize
lower	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    fn lower(&self, _: D) -> usize {$/;"	f
lower	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^    fn lower(&self, dimension: D) -> usize;$/;"	P	interface:DimRange
lower_exp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^fn lower_exp() {$/;"	f
lower_triangle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn lower_triangle(&self) -> MatrixMN<N, R, C>$/;"	P	implementation:Matrix
lower_triangular_bfs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_solve.rs	/^    fn lower_triangular_bfs($/;"	P	implementation:CsMatrix
lower_triangular_reach	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_solve.rs	/^    fn lower_triangular_reach<D2: Dim, S2>(&self, b: &CsVector<N, D2, S2>, xi: &mut Vec<usize>)$/;"	P	implementation:CsMatrix
lp_norm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^    pub fn lp_norm(&self, p: i32) -> N::SimdRealField {$/;"	P	implementation:Matrix
lsb	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    lsb: B,$/;"	m	struct:InvertedUInt
lt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn lt(&self, other: &Level) -> bool {$/;"	P	implementation:Level
lt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn lt(&self, other: &Level) -> bool {$/;"	P	implementation:LevelFilter
lt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn lt(&self, other: &LevelFilter) -> bool {$/;"	P	implementation:Level
lt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn lt(&self, other: &LevelFilter) -> bool {$/;"	P	implementation:LevelFilter
lt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    fn lt(&self, right: &Self) -> bool {$/;"	f
lt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^    fn lt(&self, right: &Self) -> bool {$/;"	f
lt	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    pub fn lt(&self) -> Term<P> {$/;"	P	implementation:Poly
lu	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs	/^    lu: MatrixMN<N, R, C>,$/;"	m	struct:FullPivLU
lu	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs	/^    lu: MatrixMN<N, R, C>,$/;"	m	struct:LU
lu	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs	/^    pub fn lu(self) -> LU<N, R, C> {$/;"	f
lu	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/mod.rs	/^mod lu;$/;"	n
lu_internal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs	/^    pub fn lu_internal(&self) -> &MatrixMN<N, R, C> {$/;"	f
lu_internal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs	/^    pub fn lu_internal(&self) -> &MatrixMN<N, R, C> {$/;"	f
m	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/debug/random_orthogonal.rs	/^    m: MatrixN<N, D>,$/;"	m	struct:RandomOrthogonal
m	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/debug/random_sdp.rs	/^    m: MatrixN<N, D>,$/;"	m	struct:RandomSDP
m	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/backtrack.rs	/^    m: &'a mut Cache,$/;"	m	struct:Bounded
macros	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/lib.rs	/^mod macros;$/;"	n
macros	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/lib.rs	/^pub mod macros;$/;"	n
macros	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^mod macros;$/;"	n
macros	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^mod macros;$/;"	n
magic_val	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/poisson.rs	/^    magic_val: f64,$/;"	m	struct:Poisson
magnitude	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^    pub fn magnitude(&self) -> N::SimdRealField {$/;"	P	implementation:Matrix
magnitude	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn magnitude(&self) -> N {$/;"	f
magnitude_squared	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^    pub fn magnitude_squared(&self) -> N::SimdRealField {$/;"	P	implementation:Matrix
magnitude_squared	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn magnitude_squared(&self) -> N {$/;"	f
make_logger_filter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^    fn make_logger_filter(dirs: Vec<Directive>) -> Filter {$/;"	f	module:tests
many_matches_at	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    pub fn many_matches_at($/;"	P	implementation:ExecNoSync
map	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^    pub fn map<U, F: FnMut(T) -> U>(self, mut f: F) -> LocalResult<U> {$/;"	P	implementation:LocalResult
map	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/functional.rs	/^    fn map<U, F>(self, f: F) -> MappedSequence<Self, T, U>$/;"	P	interface:FunctionalSequence
map	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    fn map<U, F>(self, mut f: F) -> MappedSequence<Self, T, U>$/;"	f
map	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn map<N2: Scalar, F: FnMut(N) -> N2>(&self, mut f: F) -> MatrixMN<N2, R, C>$/;"	P	implementation:Matrix
map	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    map: HashMap<State, StatePtr>,$/;"	m	struct:StateMap
map	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    pub fn map<U, F: FnMut(T) -> U>(self, mut f: F) -> Result<U> {$/;"	P	implementation:Result
map_any	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs	/^    pub fn map_any<F, L, G, R>(self, f: F, g: G) -> EitherOrBoth<L, R>$/;"	P	implementation:EitherOrBoth
map_diagonal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn map_diagonal<N2: Scalar>(&self, mut f: impl FnMut(N) -> N2) -> VectorN<N2, D>$/;"	P	implementation:SquareMatrix
map_into	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub fn map_into<I, R>(iter: I) -> MapInto<I, R> {$/;"	f
map_into	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn map_into<R>(self) -> MapInto<Self, R>$/;"	P	interface:Itertools
map_left	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs	/^    pub fn map_left<F, M>(self, f: F) -> EitherOrBoth<M, B>$/;"	P	implementation:EitherOrBoth
map_local	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^fn map_local<Tz: TimeZone, F>(d: &Date<Tz>, mut f: F) -> Option<Date<Tz>>$/;"	f
map_local	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^fn map_local<Tz: TimeZone, F>(dt: &DateTime<Tz>, mut f: F) -> Option<DateTime<Tz>>$/;"	f
map_results	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub fn map_results<I, F, T, U, E>(iter: I, f: F) -> MapResults<I, F>$/;"	f
map_results	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn map_results<F, T, U, E>(self, f: F) -> MapResults<Self, F>$/;"	P	interface:Itertools
map_right	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs	/^    pub fn map_right<F, M>(self, f: F) -> EitherOrBoth<A, M>$/;"	P	implementation:EitherOrBoth
map_with_location	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn map_with_location<N2: Scalar, F: FnMut(usize, usize, N) -> N2>($/;"	P	implementation:Matrix
marker	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^    marker: PhantomData<(N, R, C)>,$/;"	m	struct:ArrayStorageVisitor
marker_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alga.rs	/^macro_rules! marker_impl($/;"	M
marker_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^macro_rules! marker_impl($/;"	M
marker_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alga.rs	/^macro_rules! marker_impl($/;"	M
marker_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alga.rs	/^macro_rules! marker_impl($/;"	M
marker_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_alga.rs	/^macro_rules! marker_impl($/;"	M
marker_traits	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/lib.rs	/^pub mod marker_traits;$/;"	n
mat	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^    mat: &'a Matrix<N, R, C, S>,$/;"	m	struct:ColumnIter
mat	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^    mat: &'a Matrix<N, R, C, S>,$/;"	m	struct:RowIter
mat	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^    mat: *mut Matrix<N, R, C, S>,$/;"	m	struct:ColumnIterMut
mat	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^    mat: *mut Matrix<N, R, C, S>,$/;"	m	struct:RowIterMut
match_beginning	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^    fn match_beginning() {$/;"	f	module:tests
match_beginning_longest_match	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^    fn match_beginning_longest_match() {$/;"	f	module:tests
match_default	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^    fn match_default() {$/;"	f	module:tests
match_full_path	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^    fn match_full_path() {$/;"	f	module:tests
match_nfa	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    fn match_nfa(&self, text: &[u8], start: usize) -> bool {$/;"	P	implementation:ExecNoSync
match_nfa_type	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    fn match_nfa_type($/;"	P	implementation:ExecNoSync
match_type	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    match_type: MatchType,$/;"	m	struct:ExecReadOnly
match_type	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    match_type: Option<MatchType>,$/;"	m	struct:ExecBuilder
matcher	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    matcher: Matcher,$/;"	m	struct:LiteralSearcher
matches	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^    pub fn matches(&self, record: &Record) -> bool {$/;"	P	implementation:Filter
matches	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    pub fn matches(&self, record: &Record) -> bool {$/;"	P	implementation:Logger
matches	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/backtrack.rs	/^    matches: &'m mut [bool],$/;"	m	struct:Bounded
matches	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    pub fn matches(&self, byte: u8) -> bool {$/;"	P	implementation:InstBytes
matches	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    pub fn matches(&self, c: Char) -> bool {$/;"	P	implementation:InstRanges
matches	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    pub matches: Vec<InstPtr>,$/;"	m	struct:Program
mathutils	/Users/williamcashman/Honours/Program/n_poly/src/lib.rs	/^pub mod mathutils;$/;"	n
matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/mod.rs	/^mod matrix;$/;"	n
matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs	/^mod matrix;$/;"	n
matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^    matrix: Matrix4<N>,$/;"	m	struct:Orthographic3
matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^    matrix: Matrix4<N>,$/;"	m	struct:Perspective3
matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^    matrix: MatrixN<N, D>,$/;"	m	struct:Rotation
matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^    pub fn matrix(&self) -> &MatrixN<N, D> {$/;"	f
matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^    matrix: MatrixN<N, DimNameSum<D, U1>>,$/;"	m	struct:Transform
matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^    pub fn matrix(&self) -> &MatrixN<N, DimNameSum<D, U1>> {$/;"	f
matrix_alga	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs	/^mod matrix_alga;$/;"	n
matrix_market	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/io/mod.rs	/^mod matrix_market;$/;"	n
matrix_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^    pub unsafe fn matrix_mut(&mut self) -> &mut MatrixN<N, D> {$/;"	f
matrix_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^    pub fn matrix_mut(&mut self) -> &mut MatrixN<N, DimNameSum<D, U1>> {$/;"	f
matrix_mut_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^    pub fn matrix_mut_unchecked(&mut self) -> &mut MatrixN<N, D> {$/;"	f
matrix_mut_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^    pub fn matrix_mut_unchecked(&mut self) -> &mut MatrixN<N, DimNameSum<D, U1>> {$/;"	f
matrix_simba	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs	/^mod matrix_simba;$/;"	n
matrix_slice	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs	/^mod matrix_slice;$/;"	n
matrix_slice_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^macro_rules! matrix_slice_impl($/;"	M
max	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/real.rs	/^    fn max(self, other: Self) -> Self;$/;"	P	interface:RealField
max	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs	/^pub fn max<I>(iterable: I) -> Option<I::Item>$/;"	f
max	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/size_hint.rs	/^pub fn max(a: SizeHint, b: SizeHint) -> SizeHint {$/;"	f
max	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn max() -> Level {$/;"	P	implementation:Level
max	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn max() -> LevelFilter {$/;"	P	implementation:LevelFilter
max	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^    pub fn max(&self) -> N$/;"	P	implementation:Matrix
max	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs	/^pub fn max<T: Ord>(a: T, b: T) -> T {$/;"	f
max	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn max(self, other: Self) -> Self {$/;"	P	interface:FloatCore
max	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn max(self, other: Self) -> Self;$/;"	P	interface:Float
max	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn max(self, other: Self) -> Self;$/;"	P	interface:Real
max	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/triangular.rs	/^    max: f64,$/;"	m	struct:Triangular
max	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^    fn max(self, _: B0) -> B0 {$/;"	P	implementation:B0
max	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^    fn max(self, _: B0) -> B1 {$/;"	P	implementation:B1
max	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^    fn max(self, _: B1) -> B1 {$/;"	P	implementation:B1
max	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^    fn max(self, rhs: B1) -> B1 {$/;"	P	implementation:B0
max	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn max(self, _: NInt<U>) -> Self::Output {$/;"	f
max	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn max(self, _: NInt<Ur>) -> Self::Output {$/;"	f
max	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn max(self, _: Z0) -> Self::Output {$/;"	P	implementation:Z0
max	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn max(self, _: Z0) -> Self::Output {$/;"	f
max	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn max(self, rhs: NInt<Ur>) -> Self::Output {$/;"	f
max	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn max(self, rhs: PInt<U>) -> Self::Output {$/;"	f
max	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn max(self, rhs: PInt<Ur>) -> Self::Output {$/;"	f
max	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn max(self, rhs: Z0) -> Self::Output {$/;"	f
max	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    fn max(self, rhs: Rhs) -> Self::Output;$/;"	P	interface:Max
max	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn max(self, rhs: U) -> Self::Output {$/;"	f
max	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn max(self, rhs: Ur) -> Self::Output {$/;"	f
max_index	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations_with_replacement.rs	/^    max_index: usize,$/;"	m	struct:CombinationsWithReplacement
max_level	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^pub fn max_level() -> LevelFilter {$/;"	f
max_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    pub fn max_value() -> Duration { MAX }$/;"	P	implementation:Duration
max_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^    fn max_value() -> Self {$/;"	f
max_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs	/^    fn max_value() -> Self {$/;"	f
max_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/bounds.rs	/^    fn max_value() -> Self {$/;"	P	implementation:Wrapping
max_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/bounds.rs	/^    fn max_value() -> Self;$/;"	P	interface:Bounded
max_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn max_value() -> Self;$/;"	P	interface:Float
max_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn max_value() -> Self;$/;"	P	interface:FloatCore
max_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn max_value() -> Self;$/;"	P	interface:Real
md2_shift	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    md2_shift: usize,$/;"	m	struct:BoyerMooreSearch
md_assign_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/op_macros.rs	/^macro_rules! md_assign_impl($/;"	M
md_assign_impl_all	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/op_macros.rs	/^macro_rules! md_assign_impl_all($/;"	M
md_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/op_macros.rs	/^macro_rules! md_impl($/;"	M
md_impl_all	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/op_macros.rs	/^macro_rules! md_impl_all($/;"	M
mdf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn mdf(&self) -> Mdf {$/;"	P	implementation:NaiveDate
mean	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs	/^    pub fn mean(&self) -> N {$/;"	P	implementation:Matrix
mean	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/normal.rs	/^    mean: f64,$/;"	m	struct:Normal
mean_of	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^    pub fn mean_of(unit_quaternions: impl IntoIterator<Item = Self>) -> Self$/;"	f
median	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/cauchy.rs	/^    fn median(mut numbers: &mut [f64]) -> f64 {$/;"	f	module:test
median	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/cauchy.rs	/^    median: f64,$/;"	m	struct:Cauchy
meet	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^    fn meet(&self, _: &Self) -> Self {$/;"	P	implementation:Id
meet	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/lattice.rs	/^    fn meet(&self, other: &Self) -> Self {$/;"	P	implementation:Complex
meet	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/lattice.rs	/^    fn meet(&self, other: &Self) -> Self;$/;"	P	interface:MeetSemilattice
meet	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^    fn meet(&self, other: &Self) -> Self {$/;"	f
meet	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_alga.rs	/^    fn meet(&self, other: &Self) -> Self {$/;"	f
meet_join	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/lattice.rs	/^    fn meet_join(&self, other: &Self) -> (Self, Self) {$/;"	P	interface:Lattice
meet_join	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^    fn meet_join(&self, other: &Self) -> (Self, Self) {$/;"	f
meet_join	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_alga.rs	/^    fn meet_join(&self, other: &Self) -> (Self, Self) {$/;"	f
merge	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub fn merge<I, J>(i: I, j: J) -> Merge<<I as IntoIterator>::IntoIter, <J as IntoIterator>::Into/;"	f
merge	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn merge<J>(self, other: J) -> Merge<Self, J::IntoIter>$/;"	P	interface:Itertools
merge_by	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn merge_by<J, F>(self, other: J, is_first: F) -> MergeBy<Self, J::IntoIter, F>$/;"	P	interface:Itertools
merge_by_new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub fn merge_by_new<I, J, F>(a: I, b: J, cmp: F) -> MergeBy<I::IntoIter, J::IntoIter, F>$/;"	f
merge_join	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^mod merge_join;$/;"	n
merge_join_by	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn merge_join_by<J, F>(self, other: J, cmp_fn: F) -> MergeJoinBy<Self, J::IntoIter, F>$/;"	P	interface:Itertools
merge_join_by	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/merge_join.rs	/^pub fn merge_join_by<I, J, F>(left: I, right: J, cmp_fn: F)$/;"	f
merge_pred	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    fn merge_pred(&mut self, a: &T, b: &T) -> bool {$/;"	P	implementation:F
merge_pred	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    fn merge_pred(&mut self, a: &T, b: &T) -> bool {$/;"	P	implementation:MergeLte
merge_pred	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    fn merge_pred(&mut self, a: &T, b: &T) -> bool;$/;"	P	interface:MergePredicate
metadata	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    metadata: Metadata<'a>,$/;"	m	struct:MetadataBuilder
metadata	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    metadata: Metadata<'a>,$/;"	m	struct:Record
metadata	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn metadata(&mut self, metadata: Metadata<'a>) -> &mut RecordBuilder<'a> {$/;"	P	implementation:RecordBuilder
metadata	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn metadata(&self) -> &Metadata<'a> {$/;"	P	implementation:Record
metric_distance	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^    fn metric_distance<R1, C1, S1, R2, C2, S2>($/;"	P	implementation:EuclideanNorm
metric_distance	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^    fn metric_distance<R1, C1, S1, R2, C2, S2>($/;"	P	implementation:LpNorm
metric_distance	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^    fn metric_distance<R1, C1, S1, R2, C2, S2>($/;"	P	implementation:UniformNorm
metric_distance	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^    fn metric_distance<R1, C1, S1, R2, C2, S2>($/;"	P	interface:Norm
metric_distance	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^    pub fn metric_distance<R2, C2, S2>(&self, rhs: &Matrix<N, R2, C2, S2>) -> N::SimdRealField$/;"	P	implementation:Matrix
microseconds	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    pub fn microseconds(microseconds: i64) -> Duration {$/;"	P	implementation:Duration
milliseconds	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    pub fn milliseconds(milliseconds: i64) -> Duration {$/;"	P	implementation:Duration
min	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/real.rs	/^    fn min(self, other: Self) -> Self;$/;"	P	interface:RealField
min	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs	/^pub fn min<I>(iterable: I) -> Option<I::Item>$/;"	f
min	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/pad_tail.rs	/^    min: usize,$/;"	m	struct:PadUsing
min	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/size_hint.rs	/^pub fn min(a: SizeHint, b: SizeHint) -> SizeHint {$/;"	f
min	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^    pub fn min(&self) -> N$/;"	P	implementation:Matrix
min	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs	/^pub fn min<T: Ord>(a: T, b: T) -> T {$/;"	f
min	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn min(self, other: Self) -> Self {$/;"	P	interface:FloatCore
min	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn min(self, other: Self) -> Self;$/;"	P	interface:Float
min	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn min(self, other: Self) -> Self;$/;"	P	interface:Real
min	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/triangular.rs	/^    min: f64,$/;"	m	struct:Triangular
min	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^    fn min(self, _: B0) -> B0 {$/;"	P	implementation:B0
min	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^    fn min(self, _: B1) -> B0 {$/;"	P	implementation:B0
min	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^    fn min(self, _: B1) -> B1 {$/;"	P	implementation:B1
min	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^    fn min(self, rhs: B0) -> B0 {$/;"	P	implementation:B1
min	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn min(self, _: PInt<U>) -> Self::Output {$/;"	f
min	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn min(self, _: PInt<Ur>) -> Self::Output {$/;"	f
min	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn min(self, _: Z0) -> Self::Output {$/;"	P	implementation:Z0
min	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn min(self, _: Z0) -> Self::Output {$/;"	f
min	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn min(self, rhs: NInt<U>) -> Self::Output {$/;"	f
min	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn min(self, rhs: NInt<Ur>) -> Self::Output {$/;"	f
min	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn min(self, rhs: PInt<Ur>) -> Self::Output {$/;"	f
min	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn min(self, rhs: Z0) -> Self::Output {$/;"	f
min	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    fn min(self, rhs: Rhs) -> Self::Output;$/;"	P	interface:Min
min	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn min(self, _: U) -> Self::Output {$/;"	f
min	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn min(self, rhs: Ur) -> Self::Output {$/;"	f
min_positive_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn min_positive_value() -> Self;$/;"	P	interface:Float
min_positive_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn min_positive_value() -> Self;$/;"	P	interface:FloatCore
min_positive_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn min_positive_value() -> Self;$/;"	P	interface:Real
min_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    pub fn min_value() -> Duration { MIN }$/;"	P	implementation:Duration
min_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^    fn min_value() -> Self {$/;"	f
min_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs	/^    fn min_value() -> Self {$/;"	f
min_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/bounds.rs	/^    fn min_value() -> Self {$/;"	P	implementation:Wrapping
min_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/bounds.rs	/^    fn min_value() -> Self;$/;"	P	interface:Bounded
min_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn min_value() -> Self;$/;"	P	interface:Float
min_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn min_value() -> Self;$/;"	P	interface:FloatCore
min_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn min_value() -> Self;$/;"	P	interface:Real
minmax	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn minmax(self) -> MinMaxResult<Self::Item>$/;"	P	interface:Itertools
minmax	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^mod minmax;$/;"	n
minmax_by	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn minmax_by<F>(self, mut compare: F) -> MinMaxResult<Self::Item>$/;"	P	interface:Itertools
minmax_by_key	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn minmax_by_key<K, F>(self, key: F) -> MinMaxResult<Self::Item>$/;"	P	interface:Itertools
minmax_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs	/^pub fn minmax_impl<I, K, F, L>(mut it: I, mut key_for: F,$/;"	f
minute	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    #[inline] fn minute(&self) -> u32 { self.naive_local().minute() }$/;"	P	implementation:DateTime
minute	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub minute: Option<u32>,$/;"	m	struct:Parsed
minute	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    fn minute(&self) -> u32;$/;"	P	interface:Timelike
minute	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn minute(&self) -> u32 {$/;"	P	implementation:NaiveDateTime
minute	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    fn minute(&self) -> u32 {$/;"	P	implementation:NaiveTime
minutes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    pub fn minutes(minutes: i64) -> Duration {$/;"	P	implementation:Duration
misses	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    misses: u64,$/;"	m	struct:SizedCache
misses	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    misses: u64,$/;"	m	struct:TimedCache
misses	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    misses: u64,$/;"	m	struct:UnboundCache
mock	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/mod.rs	/^pub mod mock; \/\/ Public so we don't export `StepRng` directly, making it a bit$/;"	n
mod_floor_64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^fn mod_floor_64(this: i64, other: i64) -> i64 {$/;"	f
mode	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/triangular.rs	/^    mode: f64,$/;"	m	struct:Triangular
mode	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^    mode: UniformDurationMode,$/;"	m	struct:UniformDuration
module	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/mod.rs	/^mod module;$/;"	n
module_path	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    module_path: bool,$/;"	m	struct:DefaultFormat
module_path	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    module_path: Option<MaybeStaticStr<'a>>,$/;"	m	struct:Record
module_path	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn module_path(&mut self, path: Option<&'a str>) -> &mut RecordBuilder<'a> {$/;"	P	implementation:RecordBuilder
module_path	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn module_path(&self) -> Option<&'a str> {$/;"	P	implementation:Record
module_path_static	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn module_path_static(&mut self, path: Option<&'static str>) -> &mut RecordBuilder<'a> {$/;"	P	implementation:RecordBuilder
module_path_static	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn module_path_static(&self) -> Option<&'static str> {$/;"	P	implementation:Record
modulus	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn modulus(self) -> Self::RealField {$/;"	P	implementation:Complex
modulus	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn modulus(self) -> Self::RealField;$/;"	P	interface:ComplexField
modulus_squared	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn modulus_squared(self) -> Self::RealField {$/;"	P	implementation:Complex
modulus_squared	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn modulus_squared(self) -> Self::RealField;$/;"	P	interface:ComplexField
month	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    #[inline] fn month(&self) -> u32 { self.naive_local().month() }$/;"	P	implementation:Date
month	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    #[inline] fn month(&self) -> u32 { self.naive_local().month() }$/;"	P	implementation:DateTime
month	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub month: Option<u32>,$/;"	m	struct:Parsed
month	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    fn month(&self) -> u32;$/;"	P	interface:Datelike
month	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn month(&self) -> u32 {$/;"	P	implementation:NaiveDate
month	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn month(&self) -> u32 {$/;"	P	implementation:NaiveDateTime
month	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    pub fn month(&self) -> u32 {$/;"	P	implementation:Mdf
month0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    #[inline] fn month0(&self) -> u32 { self.naive_local().month0() }$/;"	P	implementation:Date
month0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    #[inline] fn month0(&self) -> u32 { self.naive_local().month0() }$/;"	P	implementation:DateTime
month0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    fn month0(&self) -> u32;$/;"	P	interface:Datelike
month0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn month0(&self) -> u32 {$/;"	P	implementation:NaiveDate
month0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn month0(&self) -> u32 {$/;"	P	implementation:NaiveDateTime
move_last	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^        fn move_last(slice: &mut [usize], pos: usize) {$/;"	f	function:test::test_shuffle
move_to_front	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn move_to_front(&mut self, index: usize) {$/;"	P	implementation:LRUList
msb	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    msb: IU,$/;"	m	struct:InvertedUInt
msg	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/error.rs	/^    pub fn msg(msg: &'static str) -> Self {$/;"	P	implementation:Error
mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^    fn mul(self, _: Id) -> Id {$/;"	P	implementation:Id
mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/wrapper.rs	/^    fn mul(self, lhs: Self) -> Self {$/;"	f
mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    fn mul(self, rhs: i32) -> Duration {$/;"	P	implementation:Duration
mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/size_hint.rs	/^pub fn mul(a: SizeHint, b: SizeHint) -> SizeHint {$/;"	f
mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^    fn mul(self, rhs: &'b Matrix<N, R2, C2, SB>) -> Self::Output {$/;"	f
mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^    fn mul(self, rhs: Matrix<N, R2, C2, SB>) -> Self::Output {$/;"	f
mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs	/^    fn mul(self, rhs: &'b UnitComplex<N>) -> Self::Output {$/;"	f
mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs	/^    fn mul(self, rhs: Self) -> Self {$/;"	P	implementation:UnitComplex
mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs	/^    fn mul(self, rhs: UnitComplex<N>) -> Self::Output {$/;"	f
mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_ops.rs	/^    fn mul(mut self, rhs: N) -> Self::Output {$/;"	f
mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_ops.rs	/^    fn mul(self, rhs: &'b CsMatrix<N, R2, C2, S2>) -> Self::Output {$/;"	f
mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn mul(self, other: Self) -> Self::Output {$/;"	P	implementation:Complex
mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn mul(self, other: T) -> Self::Output {$/;"	P	implementation:Complex
mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^    fn mul(self, _: ATerm) -> Self::Output {$/;"	P	implementation:Z0
mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^    fn mul(self, _: ATerm) -> Self::Output {$/;"	f
mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^    fn mul(self, _: Rhs) -> Self::Output {$/;"	P	implementation:ATerm
mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^    fn mul(self, rhs: Rhs) -> Self::Output {$/;"	f
mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^    fn mul(self, rhs: TArr<V, A>) -> Self::Output {$/;"	f
mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn mul(self, _: I) -> Self::Output {$/;"	P	implementation:Z0
mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn mul(self, _: NInt<Ur>) -> Self::Output {$/;"	f
mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn mul(self, _: PInt<Ur>) -> Self::Output {$/;"	f
mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn mul(self, _: Z0) -> Self::Output {$/;"	P	implementation:NInt
mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn mul(self, _: Z0) -> Self::Output {$/;"	P	implementation:PInt
mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn mul(self, _: B0) -> Self::Output {$/;"	P	implementation:UInt
mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn mul(self, _: B0) -> Self::Output {$/;"	P	implementation:UTerm
mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn mul(self, _: B1) -> Self::Output {$/;"	P	implementation:UInt
mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn mul(self, _: B1) -> Self::Output {$/;"	P	implementation:UTerm
mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn mul(self, _: U) -> Self::Output {$/;"	P	implementation:UTerm
mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn mul(self, _: UTerm) -> Self::Output {$/;"	P	implementation:UInt
mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn mul(self, rhs: UInt<Ur, B>) -> Self::Output {$/;"	f
mul	/Users/williamcashman/Honours/Program/n_poly/src/algebras/complex.rs	/^    fn mul(&self, other: &Self) -> Self {$/;"	P	implementation:CC
mul	/Users/williamcashman/Honours/Program/n_poly/src/algebras/finite_field.rs	/^    fn mul(&self, other: &Self) -> Self {$/;"	P	implementation:FF
mul	/Users/williamcashman/Honours/Program/n_poly/src/algebras/integers.rs	/^    fn mul(&self, other: &Self) -> Self {$/;"	P	implementation:ZZ
mul	/Users/williamcashman/Honours/Program/n_poly/src/algebras/mod.rs	/^    fn mul(&self, other: &Self) -> Self;$/;"	P	interface:Ring
mul	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    fn mul(&self, other: &Self) -> Self {$/;"	P	implementation:Poly
mul	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    fn mul(&self, other: &Self) -> Self {$/;"	P	implementation:Term
mul	/Users/williamcashman/Honours/Program/n_poly/src/algebras/real.rs	/^    fn mul(&self, other: &Self) -> Self {$/;"	P	implementation:RR
mul	/Users/williamcashman/Honours/Program/n_poly/src/polyu.rs	/^    pub fn mul(&self, other: &Self) -> Self {$/;"	P	implementation:PolyU
mul_add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn mul_add(self, a: Self, b: Self) -> Self {$/;"	P	implementation:Complex
mul_add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn mul_add(self, a: Self, b: Self) -> Self;$/;"	P	interface:ComplexField
mul_add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn mul_add(self, other: &Complex<T>, add: &Complex<T>) -> Complex<T> {$/;"	P	implementation:Complex
mul_add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn mul_add(self, other: Complex<T>, add: Complex<T>) -> Complex<T> {$/;"	P	implementation:Complex
mul_add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn mul_add(self, a: Self, b: Self) -> Self {$/;"	P	implementation:f32
mul_add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn mul_add(self, a: Self, b: Self) -> Self {$/;"	P	implementation:f64
mul_add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn mul_add(self, a: Self, b: Self) -> Self;$/;"	P	interface:Float
mul_add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/mod.rs	/^pub mod mul_add;$/;"	n
mul_add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/mul_add.rs	/^    fn mul_add(self, a: A, b: B) -> Self::Output;$/;"	P	interface:MulAdd
mul_add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/mul_add.rs	/^    fn mul_add(self, a: Self, b: Self) -> Self::Output {$/;"	P	implementation:f32
mul_add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/mul_add.rs	/^    fn mul_add(self, a: Self, b: Self) -> Self::Output {$/;"	P	implementation:f64
mul_add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn mul_add(self, a: Self, b: Self) -> Self;$/;"	P	interface:Real
mul_add_assign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn mul_add_assign(&mut self, other: &Complex<T>, add: &Complex<T>) {$/;"	P	implementation:opassign::Complex
mul_add_assign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn mul_add_assign(&mut self, other: Complex<T>, add: Complex<T>) {$/;"	P	implementation:opassign::Complex
mul_add_assign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/mul_add.rs	/^    fn mul_add_assign(&mut self, a: A, b: B);$/;"	P	interface:MulAddAssign
mul_add_assign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/mul_add.rs	/^    fn mul_add_assign(&mut self, a: Self, b: Self) {$/;"	P	implementation:f32
mul_add_assign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/mul_add.rs	/^    fn mul_add_assign(&mut self, a: Self, b: Self) {$/;"	P	implementation:f64
mul_add_assign_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/mul_add.rs	/^macro_rules! mul_add_assign_impl {$/;"	M
mul_add_float	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/mul_add.rs	/^    fn mul_add_float() {$/;"	f	module:tests
mul_add_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/mul_add.rs	/^macro_rules! mul_add_impl {$/;"	M
mul_add_integer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/mul_add.rs	/^    fn mul_add_integer() {$/;"	f	module:tests
mul_ass	/Users/williamcashman/Honours/Program/n_poly/src/algebras/complex.rs	/^    fn mul_ass(&mut self, other: &Self) {$/;"	P	implementation:CC
mul_ass	/Users/williamcashman/Honours/Program/n_poly/src/algebras/finite_field.rs	/^    fn mul_ass(&mut self, other: &Self) {$/;"	P	implementation:FF
mul_ass	/Users/williamcashman/Honours/Program/n_poly/src/algebras/integers.rs	/^    fn mul_ass(&mut self, other: &Self) {$/;"	P	implementation:ZZ
mul_ass	/Users/williamcashman/Honours/Program/n_poly/src/algebras/mod.rs	/^    fn mul_ass(&mut self, other: &Self);$/;"	P	interface:ScalarRing
mul_ass	/Users/williamcashman/Honours/Program/n_poly/src/algebras/real.rs	/^    fn mul_ass(&mut self, other: &Self) {$/;"	P	implementation:RR
mul_assign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^    fn mul_assign(&mut self, _: Id) {$/;"	P	implementation:Id
mul_assign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^    fn mul_assign(&mut self, rhs: &'b Matrix<N, R2, C1, SB>) {$/;"	f
mul_assign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^    fn mul_assign(&mut self, rhs: Matrix<N, R2, C1, SB>) {$/;"	f
mul_assign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs	/^    fn mul_assign(&mut self, rhs: &'b Rotation<N, U2>) {$/;"	f
mul_assign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs	/^    fn mul_assign(&mut self, rhs: &'b UnitComplex<N>) {$/;"	f
mul_assign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs	/^    fn mul_assign(&mut self, rhs: Rotation<N, U2>) {$/;"	f
mul_assign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs	/^    fn mul_assign(&mut self, rhs: UnitComplex<N>) {$/;"	f
mul_assign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn mul_assign(&mut self, other: Self) {$/;"	P	implementation:opassign::Complex
mul_assign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn mul_assign(&mut self, other: T) {$/;"	P	implementation:opassign::Complex
mul_scalar	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/size_hint.rs	/^pub fn mul_scalar(sh: SizeHint, x: usize) -> SizeHint {$/;"	f
mul_to	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^    pub fn mul_to<R2: Dim, C2: Dim, SB, R3: Dim, C3: Dim, SC>($/;"	f
mult_test_main	/Users/williamcashman/Honours/Program/n_poly/src/fft-multi-base.rs	/^    fn mult_test_main() {$/;"	f	module:tests
mult_test_main	/Users/williamcashman/Honours/Program/n_poly/src/fft.rs	/^    fn mult_test_main() {$/;"	f	module:tests
multi_cartesian_product	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs	/^pub fn multi_cartesian_product<H>(iters: H) -> MultiProduct<<H::Item as IntoIterator>::IntoIter>$/;"	f
multi_cartesian_product	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn multi_cartesian_product(self) -> MultiProduct<<Self::Item as IntoIterator>::IntoIter>$/;"	P	interface:Itertools
multi_line	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_builder.rs	/^    pub multi_line: bool,$/;"	m	struct:RegexOptions
multi_product	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^mod multi_product;$/;"	n
multipeek	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs	/^pub fn multipeek<I>(iterable: I) -> MultiPeek<I::IntoIter>$/;"	f
multipeek_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^mod multipeek_impl;$/;"	n
multiply_by	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/module.rs	/^    fn multiply_by(&self, r: N) -> Self {$/;"	P	implementation:Complex
multiply_by	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/module.rs	/^    fn multiply_by(&self, r: Self::AbstractRing) -> Self;$/;"	P	interface:AbstractModule
multiply_by	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^    fn multiply_by(&self, n: N) -> Self {$/;"	f
multiply_by	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    fn multiply_by(&self, n: N) -> Self {$/;"	P	implementation:Quaternion
multizip	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs	/^pub fn multizip<T, U>(t: U) -> Zip<T>$/;"	f
n	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/repeatn.rs	/^    n: usize,$/;"	m	struct:RepeatN
n	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/binomial.rs	/^    n: u64,$/;"	m	struct:Binomial
n	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    n: usize,$/;"	m	struct:SplitN
n	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    n: usize,$/;"	m	struct:SplitN
naive	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^pub mod naive {$/;"	n
naive_find	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    fn naive_find(needle: &[u8], haystack: &[u8]) -> Option<usize> {$/;"	f	module:tests
naive_local	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    pub fn naive_local(&self) -> NaiveDate {$/;"	P	implementation:Date
naive_local	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    pub fn naive_local(&self) -> NaiveDateTime {$/;"	P	implementation:DateTime
naive_utc	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    pub fn naive_utc(&self) -> NaiveDate {$/;"	P	implementation:Date
naive_utc	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    pub fn naive_utc(&self) -> NaiveDateTime {$/;"	P	implementation:DateTime
name	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^    name: Option<String>,$/;"	m	struct:Directive
name	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    name: Cow<'a, str>,$/;"	m	struct:Var
name	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^    fn name() -> Self {$/;"	P	implementation:U1
name	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^    fn name() -> Self {$/;"	P	implementation:UInt
name	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^    fn name() -> Self;$/;"	P	interface:DimName
name	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    pub fn name(&self, name: &str) -> Option<Match<'t>> {$/;"	P	implementation:Captures
name	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    pub fn name(&self, name: &str) -> Option<Match<'t>> {$/;"	P	implementation:Captures
named_dimension	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^macro_rules! named_dimension ($/;"	M
named_groups	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    named_groups: Arc<HashMap<String, usize>>,$/;"	m	struct:Captures
named_groups	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    named_groups: Arc<HashMap<String, usize>>,$/;"	m	struct:Captures
nan	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn nan() -> Self;$/;"	P	interface:Float
nan	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn nan() -> Self;$/;"	P	interface:FloatCore
nanos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    nanos: i32, \/\/ Always 0 <= nanos < NANOS_PER_SEC$/;"	m	struct:Duration
nanos_mod_sec	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    fn nanos_mod_sec(&self) -> i32 {$/;"	P	implementation:Duration
nanosecond	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    #[inline] fn nanosecond(&self) -> u32 { self.naive_local().nanosecond() }$/;"	P	implementation:DateTime
nanosecond	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub nanosecond: Option<u32>,$/;"	m	struct:Parsed
nanosecond	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/scan.rs	/^pub fn nanosecond(s: &str) -> ParseResult<(&str, i64)> {$/;"	f
nanosecond	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    fn nanosecond(&self) -> u32;$/;"	P	interface:Timelike
nanosecond	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn nanosecond(&self) -> u32 {$/;"	P	implementation:NaiveDateTime
nanosecond	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    fn nanosecond(&self) -> u32 {$/;"	P	implementation:NaiveTime
nanosecond_fixed	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/scan.rs	/^pub fn nanosecond_fixed(s: &str, digits: usize) -> ParseResult<(&str, i64)> {$/;"	f
nanoseconds	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    pub fn nanoseconds(nanos: i64) -> Duration {$/;"	P	implementation:Duration
ncols	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^    fn ncols(&self) -> usize {$/;"	P	implementation:ColumnIterMut
ncols	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn ncols(&self) -> usize {$/;"	P	implementation:Matrix
ncols	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^    ncols: C,$/;"	m	struct:VecStorage
ncols	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    pub fn ncols(&self) -> usize {$/;"	P	implementation:CsMatrix
ndays	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    pub fn ndays(&self) -> u32 {$/;"	P	implementation:YearFlags
ne_timestamp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^fn ne_timestamp<T: fmt::Display>(ts: T) -> SerdeError<T, u8> {$/;"	f
needs_dotstar	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    pub fn needs_dotstar(&self) -> bool {$/;"	P	implementation:Program
neg	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/wrapper.rs	/^    fn neg(mut self) -> Self {$/;"	f
neg	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    fn neg(self) -> Duration {$/;"	P	implementation:Duration
neg	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^    fn neg(self) -> Self::Output {$/;"	f
neg	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^    fn neg(self) -> Self::Output {$/;"	f
neg	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_ops.rs	/^    fn neg(self) -> Self::Output {$/;"	f
neg	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_ops.rs	/^    fn neg(self) -> Self::Output {$/;"	f
neg	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn neg(self) -> Self::Output {$/;"	P	implementation:Complex
neg	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^    fn neg(self) -> Self::Output {$/;"	P	implementation:ATerm
neg	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^    fn neg(self) -> Self::Output {$/;"	f
neg	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn neg(self) -> Self::Output {$/;"	P	implementation:NInt
neg	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn neg(self) -> Self::Output {$/;"	P	implementation:PInt
neg	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn neg(self) -> Self::Output {$/;"	P	implementation:Z0
neg	/Users/williamcashman/Honours/Program/n_poly/src/algebras/complex.rs	/^    fn neg(&self) -> Self {$/;"	P	implementation:CC
neg	/Users/williamcashman/Honours/Program/n_poly/src/algebras/finite_field.rs	/^    fn neg(&self) -> Self {$/;"	P	implementation:FF
neg	/Users/williamcashman/Honours/Program/n_poly/src/algebras/integers.rs	/^    fn neg(&self) -> Self {$/;"	P	implementation:ZZ
neg	/Users/williamcashman/Honours/Program/n_poly/src/algebras/mod.rs	/^    fn neg(&self) -> Self;$/;"	P	interface:Group
neg	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    fn neg(&self) -> Self {$/;"	P	implementation:Poly
neg	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    fn neg(&self) -> Self {$/;"	P	implementation:Term
neg	/Users/williamcashman/Honours/Program/n_poly/src/algebras/real.rs	/^    fn neg(&self) -> Self {$/;"	P	implementation:RR
neg_infinity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn neg_infinity() -> Self;$/;"	P	interface:Float
neg_infinity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn neg_infinity() -> Self;$/;"	P	interface:FloatCore
neg_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^    pub fn neg_mut(&mut self) {$/;"	f
neg_zero	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn neg_zero() -> Self;$/;"	P	interface:Float
neg_zero	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn neg_zero() -> Self;$/;"	P	interface:FloatCore
nest_limit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_builder.rs	/^    pub nest_limit: u32,$/;"	m	struct:RegexOptions
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^    pub fn new() -> Id<O> {$/;"	P	implementation:Id
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/wrapper.rs	/^    pub fn new(val: T) -> Self {$/;"	P	implementation:Wrapper
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    pub fn new() -> UnboundCache<K, V> {$/;"	P	implementation:UnboundCache
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    pub fn new(date: Option<NaiveDate>, time: Option<NaiveTime>, items: I) -> DelayedFormat<I> {$/;"	P	implementation:DelayedFormat
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub fn new() -> Parsed {$/;"	P	implementation:Parsed
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/strftime.rs	/^    pub fn new(s: &'a str) -> StrftimeItems<'a> {$/;"	P	implementation:StrftimeItems
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    pub fn new(date: NaiveDate, time: NaiveTime) -> NaiveDateTime {$/;"	P	implementation:NaiveDateTime
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    pub fn new(month: u32, day: u32, YearFlags(flags): YearFlags) -> Mdf {$/;"	P	implementation:Mdf
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    pub fn new(ordinal: u32, YearFlags(flags): YearFlags) -> Of {$/;"	P	implementation:Of
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^    pub fn new() -> Builder {$/;"	P	implementation:Builder
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/regex.rs	/^    pub fn new(spec: &str) -> Result<Filter, String> {$/;"	P	implementation:Filter
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/string.rs	/^    pub fn new(spec: &str) -> Result<Filter, String> {$/;"	P	implementation:Filter
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    pub(crate) fn new(writer: &Writer) -> Self {$/;"	P	implementation:Formatter
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^    pub(crate) fn new() -> Self {$/;"	P	implementation:Builder
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    fn new<E>(name: E) -> Self$/;"	P	implementation:Var
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    pub fn new() -> Builder {$/;"	P	implementation:Builder
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    pub fn new() -> Self {$/;"	P	implementation:Env
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    pub unsafe fn new() -> ArrayBuilder<T, N> {$/;"	P	implementation:ArrayBuilder
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    pub unsafe fn new(array: GenericArray<T, N>) -> ArrayConsumer<T, N> {$/;"	P	implementation:ArrayConsumer
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs	/^    fn new(iter: I) -> Self {$/;"	f
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/exactly_one_err.rs	/^    pub(crate) fn new(first_two: (Option<I::Item>, Option<I::Item>), inner: I) -> Self {$/;"	f
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    fn new(size: usize) -> Self {$/;"	P	implementation:ChunkIndex
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^pub fn new<K, J, F>(iter: J, f: F) -> GroupBy<K, J::IntoIter, F>$/;"	f
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs	/^    fn new(mut it: I) -> Option<HeadTail<I>> {$/;"	f
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lazy_buffer.rs	/^    pub fn new(it: I) -> LazyBuffer<I> {$/;"	f
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tee.rs	/^pub fn new<I>(iter: I) -> (Tee<I>, Tee<I>)$/;"	f
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs	/^    fn new(buf: T::Buffer) -> Self {$/;"	f
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^    fn new(visitor: &'a mut Visitor) -> Self {$/;"	P	implementation:Slot
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn new() -> MetadataBuilder<'a> {$/;"	P	implementation:MetadataBuilder
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn new() -> RecordBuilder<'a> {$/;"	P	implementation:RecordBuilder
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^    pub fn new() -> Self {$/;"	f
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^    pub fn new(value: usize) -> Self {$/;"	P	implementation:Dynamic
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^    pub(crate) fn new(mat: &'a Matrix<N, R, C, S>) -> Self {$/;"	P	implementation:ColumnIter
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^    pub(crate) fn new(mat: &'a Matrix<N, R, C, S>) -> Self {$/;"	P	implementation:RowIter
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^    pub(crate) fn new(mat: &'a mut Matrix<N, R, C, S>) -> Self {$/;"	P	implementation:ColumnIterMut
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^    pub(crate) fn new(mat: &'a mut Matrix<N, R, C, S>) -> Self {$/;"	P	implementation:RowIterMut
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^    pub fn new(nrows: R, ncols: C, data: Vec<N>) -> Self {$/;"	P	implementation:VecStorage
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/debug/random_orthogonal.rs	/^    pub fn new<Rand: FnMut() -> N>(dim: D, mut rand: Rand) -> Self {$/;"	f
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/debug/random_sdp.rs	/^    pub fn new<Rand: FnMut() -> N>(dim: D, mut rand: Rand) -> Self {$/;"	f
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs	/^    pub fn new(translation: Vector2<N>, angle: N) -> Self {$/;"	f
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^    pub fn new(left: N, right: N, bottom: N, top: N, znear: N, zfar: N) -> Self {$/;"	P	implementation:Orthographic3
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^    pub fn new(aspect: N, fovy: N, znear: N, zfar: N) -> Self {$/;"	P	implementation:Perspective3
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^    pub fn new(w: N, i: N, j: N, k: N) -> Self {$/;"	P	implementation:Quaternion
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^    pub fn new<SB>(axisangle: Vector<N, U3, SB>) -> Self$/;"	f
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/reflection.rs	/^    pub fn new(axis: Unit<Vector<N, D, S>>, bias: N) -> Self {$/;"	P	implementation:Reflection
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^    pub fn new(angle: N) -> Self {$/;"	P	implementation:Rotation2
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^    pub fn new<SB: Storage<N, U3>>(axisangle: Vector<N, U3, SB>) -> Self {$/;"	f
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs	/^    pub fn new(translation: Vector2<N>, angle: N, scaling: N) -> Self {$/;"	f
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs	/^    pub fn new(angle: N) -> Self {$/;"	f
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs	/^    pub fn new(mut matrix: MatrixMN<N, R, C>) -> Self {$/;"	f
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs	/^    pub fn new(mut matrix: MatrixN<N, D>) -> Option<Self> {$/;"	f
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/eigen.rs	/^    pub fn new(m: MatrixN<N, D>) -> Option<Eigen<N, D>> {$/;"	f
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs	/^    pub fn new(mut matrix: MatrixMN<N, R, C>) -> Self {$/;"	f
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs	/^    pub fn new(c: N, s: N) -> (Self, N) {$/;"	P	implementation:GivensRotation
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs	/^    pub fn new(hess: MatrixN<N, D>) -> Self {$/;"	f
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs	/^    pub fn new(mut matrix: MatrixMN<N, R, C>) -> Self {$/;"	f
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs	/^    pub fn new(mut matrix: MatrixMN<N, R, C>) -> Self {$/;"	f
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs	/^    pub fn new(m: MatrixN<N, D>) -> Self {$/;"	f
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs	/^    pub fn new(matrix: MatrixMN<N, R, C>, compute_u: bool, compute_v: bool) -> Self {$/;"	f
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs	/^    pub fn new(m: MatrixN<N, D>) -> Self$/;"	f
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs	/^    pub fn new(mut m: MatrixN<N, D>) -> Self {$/;"	f
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    pub fn new(i: &'a [usize], v: &'a [N]) -> Self {$/;"	P	implementation:ColumnEntries
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_cholesky.rs	/^    pub fn new(m: &CsMatrix<N, D, D>) -> Self {$/;"	f
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/crand.rs	/^    pub fn new(re: Re, im: Im) -> Self {$/;"	P	implementation:ComplexDistribution
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn new() -> Self {$/;"	P	implementation:ParseComplexError
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub const fn new(re: T, im: T) -> Self {$/;"	P	implementation:Complex
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub fn new(re: T, im: T) -> Self {$/;"	P	implementation:Complex
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/bernoulli.rs	/^    pub fn new(p: f64) -> Result<Bernoulli, BernoulliError> {$/;"	P	implementation:Bernoulli
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/binomial.rs	/^    pub fn new(n: u64, p: f64) -> Binomial {$/;"	P	implementation:Binomial
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/cauchy.rs	/^    pub fn new(median: f64, scale: f64) -> Cauchy {$/;"	P	implementation:Cauchy
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/dirichlet.rs	/^    pub fn new<V: Into<Vec<f64>>>(alpha: V) -> Dirichlet {$/;"	P	implementation:Dirichlet
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/exponential.rs	/^    pub fn new(lambda: f64) -> Exp {$/;"	P	implementation:Exp
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    pub fn new(alpha: f64, beta: f64) -> Beta {$/;"	P	implementation:Beta
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    pub fn new(k: f64) -> ChiSquared {$/;"	P	implementation:ChiSquared
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    pub fn new(m: f64, n: f64) -> FisherF {$/;"	P	implementation:FisherF
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    pub fn new(n: f64) -> StudentT {$/;"	P	implementation:StudentT
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    pub fn new(shape: f64, scale: f64) -> Gamma {$/;"	P	implementation:Gamma
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/normal.rs	/^    pub fn new(mean: f64, std_dev: f64) -> LogNormal {$/;"	P	implementation:LogNormal
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/normal.rs	/^    pub fn new(mean: f64, std_dev: f64) -> Normal {$/;"	P	implementation:Normal
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/pareto.rs	/^    pub fn new(scale: f64, shape: f64) -> Pareto {$/;"	P	implementation:Pareto
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/poisson.rs	/^    pub fn new(lambda: f64) -> Poisson {$/;"	P	implementation:Poisson
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/triangular.rs	/^    pub fn new(min: f64, max: f64, mode: f64) -> Triangular {$/;"	P	implementation:Triangular
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^            fn new<B1, B2>(low: B1, high: B2) -> Self$/;"	P	implementation:tests::test_custom_uniform::UniformMyF32
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^    fn new<B1, B2>(low: B1, high: B2) -> Self$/;"	P	interface:UniformSampler
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^    fn new<B1, B2>(low_b: B1, high_b: B2) -> Self$/;"	P	implementation:UniformDuration
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^    pub fn new<B1, B2>(low: B1, high: B2) -> Uniform<X>$/;"	P	implementation:Uniform
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/unit_circle.rs	/^    pub fn new() -> UnitCircle {$/;"	P	implementation:UnitCircle
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/unit_sphere.rs	/^    pub fn new() -> UnitSphereSurface {$/;"	P	implementation:UnitSphereSurface
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weibull.rs	/^    pub fn new(scale: f64, shape: f64) -> Weibull {$/;"	P	implementation:Weibull
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^            fn new(size: u32) -> Self {$/;"	P	implementation:WeightedIndex::new::Aliases
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^    pub fn new(weights: Vec<W>) -> Result<Self, WeightedError> {$/;"	P	implementation:WeightedIndex
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/mod.rs	/^    pub fn new<I>(weights: I) -> Result<WeightedIndex<X>, WeightedError>$/;"	P	implementation:WeightedIndex
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/read.rs	/^    pub fn new(r: R) -> ReadRng<R> {$/;"	P	implementation:ReadRng
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/reseeding.rs	/^    fn new(rng: R, threshold: u64, reseeder: Rsdr) -> Self {$/;"	f
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/reseeding.rs	/^    pub fn new(rng: R, threshold: u64, reseeder: Rsdr) -> Self {$/;"	f
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/entropy.rs	/^    pub fn new() -> Self {$/;"	P	implementation:EntropyRng
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/mock.rs	/^    pub fn new(initial: u64, increment: u64) -> Self {$/;"	P	implementation:StepRng
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/backtrack.rs	/^    pub fn new(_prog: &Program) -> Self {$/;"	P	implementation:Cache
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/cache.rs	/^        pub fn new() -> Cached<T> {$/;"	P	implementation:imp::Cached
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn new() -> Self {$/;"	P	implementation:ByteClassSet
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn new(size: usize) -> Self {$/;"	P	implementation:SuffixCache
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    pub fn new() -> Self {$/;"	P	implementation:Compiler
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn new(num_byte_classes: usize) -> StateMap {$/;"	P	implementation:StateMap
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn new(num_byte_classes: usize) -> Transitions {$/;"	P	implementation:Transitions
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    pub fn new(prog: &Program) -> Self {$/;"	P	implementation:Cache
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    fn new(ro: &ExecReadOnly) -> Self {$/;"	P	implementation:ProgramCacheInner
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    pub fn new(re: &str) -> Self {$/;"	P	implementation:ExecBuilder
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    pub fn new(s: &'t [u8]) -> CharInput<'t> {$/;"	P	implementation:CharInput
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    pub fn new(text: &'t [u8], only_utf8: bool) -> ByteInput<'t> {$/;"	P	implementation:ByteInput
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    fn new() -> SingleByteSet {$/;"	P	implementation:SingleByteSet
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    fn new(lits: &Literals, sset: SingleByteSet) -> Self {$/;"	P	implementation:Matcher
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    fn new(lits: Literals, matcher: Matcher) -> Self {$/;"	P	implementation:LiteralSearcher
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    fn new(pat: Vec<u8>) -> FreqyPacked {$/;"	P	implementation:FreqyPacked
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    fn new(pattern: Vec<u8>) -> Self {$/;"	P	implementation:BoyerMooreSearch
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/pikevm.rs	/^    fn new() -> Self {$/;"	P	implementation:Threads
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/pikevm.rs	/^    pub fn new(_prog: &Program) -> Self {$/;"	P	implementation:Cache
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    pub fn new() -> Self {$/;"	P	implementation:Program
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    fn new(haystack: &'t [u8], start: usize, end: usize) -> Match<'t> {$/;"	P	implementation:Match
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    pub fn new(re: &str) -> Result<Regex, Error> {$/;"	P	implementation:Regex
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    fn new(haystack: &'t str, start: usize, end: usize) -> Match<'t> {$/;"	P	implementation:Match
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    pub fn new(re: &str) -> Result<Regex, Error> {$/;"	P	implementation:Regex
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/sparse.rs	/^    pub fn new(size: usize) -> SparseSet {$/;"	P	implementation:SparseSet
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^    pub fn new() -> B0 {$/;"	P	implementation:B0
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^    pub fn new() -> B1 {$/;"	P	implementation:B1
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    pub fn new() -> NInt<U> {$/;"	P	implementation:NInt
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    pub fn new() -> PInt<U> {$/;"	P	implementation:PInt
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    pub fn new() -> Z0 {$/;"	P	implementation:Z0
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    pub fn new() -> UInt<U, B> {$/;"	P	implementation:UInt
new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    pub fn new() -> UTerm {$/;"	P	implementation:UTerm
new	/Users/williamcashman/Honours/Program/n_poly/src/algebras/complex.rs	/^    pub fn new(val: Complex64) -> CC {$/;"	P	implementation:CC
new	/Users/williamcashman/Honours/Program/n_poly/src/algebras/finite_field.rs	/^    pub fn new(q: i64) -> Self {$/;"	P	implementation:FF
new	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    pub fn new(coeff: P::Coeff, deg: P::Var) -> Self {$/;"	P	implementation:Term
new	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    pub fn new(vars: Vec<char>) -> Self {$/;"	f
new	/Users/williamcashman/Honours/Program/n_poly/src/algebras/real.rs	/^    pub fn new(val: f64) -> RR {$/;"	P	implementation:RR
new	/Users/williamcashman/Honours/Program/n_poly/src/ideals/mod.rs	/^    pub fn new(gens: Vec<Poly<'a, P>>) -> Self {$/;"	P	implementation:Ideal
new	/Users/williamcashman/Honours/Program/n_poly/src/ideals/mod.rs	/^    pub fn new(gens: Vec<Term<P>>) -> Self {$/;"	P	implementation:MonomialIdeal
new	/Users/williamcashman/Honours/Program/n_poly/src/polym.rs	/^    fn new(ind: GenericArray<usize, N>) -> Self {$/;"	P	implementation:MultiIndex
new_and_get	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs	/^    pub fn new_and_get(mut value: T) -> (Self, T::Norm) {$/;"	P	implementation:Unit
new_chunks	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^pub fn new_chunks<J>(iter: J, size: usize) -> IntoChunks<J::IntoIter>$/;"	f
new_containing_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/reflection.rs	/^    pub fn new_containing_point(axis: Unit<Vector<N, D, S>>, pt: &Point<N, D>) -> Self$/;"	P	implementation:Reflection
new_eps	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^    pub fn new_eps<SB>(axisangle: Vector<N, U3, SB>, eps: N) -> Self$/;"	f
new_format	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/format.rs	/^pub fn new_format<'a, I, F>(iter: I, separator: &'a str, f: F) -> FormatWith<'a, I, F>$/;"	f
new_format_default	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/format.rs	/^pub fn new_format_default<'a, I>(iter: I, separator: &'a str) -> Format<'a, I>$/;"	f
new_inclusive	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^            fn new_inclusive<B1, B2>(low: B1, high: B2) -> Self$/;"	P	implementation:tests::test_custom_uniform::UniformMyF32
new_inclusive	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^    fn new_inclusive<B1, B2>(low: B1, high: B2) -> Self$/;"	P	interface:UniformSampler
new_inclusive	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^    fn new_inclusive<B1, B2>(low_b: B1, high_b: B2) -> Self$/;"	P	implementation:UniformDuration
new_inclusive	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^    pub fn new_inclusive<B1, B2>(low: B1, high: B2) -> Uniform<X>$/;"	P	implementation:Uniform
new_many	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    pub fn new_many<I, S>(res: I) -> Self$/;"	P	implementation:ExecBuilder
new_nonuniform_scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs	/^    pub fn new_nonuniform_scaling<SB>(scaling: &Vector<N, DimNameDiff<D, U1>, SB>) -> Self$/;"	f
new_normalize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs	/^    pub fn new_normalize(value: T) -> Self {$/;"	P	implementation:Unit
new_observer_frame	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs	/^    pub fn new_observer_frame(eye: &Point3<N>, target: &Point3<N>, up: &Vector3<N>) -> Self {$/;"	P	implementation:Matrix4
new_observer_frames	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^    pub fn new_observer_frames<SB, SC>(dir: &Vector<N, U3, SB>, up: &Vector<N, U3, SC>) -> Self$/;"	f
new_observer_frames	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^    pub fn new_observer_frames<SB, SC>(dir: &Vector<N, U3, SB>, up: &Vector<N, U3, SC>) -> Self$/;"	f
new_options	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    pub fn new_options(opts: RegexOptions) -> Self {$/;"	P	implementation:ExecBuilder
new_orthographic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs	/^    pub fn new_orthographic(left: N, right: N, bottom: N, top: N, znear: N, zfar: N) -> Self {$/;"	P	implementation:Matrix4
new_perspective	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs	/^    pub fn new_perspective(aspect: N, fovy: N, znear: N, zfar: N) -> Self {$/;"	P	implementation:Matrix4
new_random_generic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^    pub fn new_random_generic(nrows: R, ncols: C) -> Self$/;"	f
new_raw	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    fn new_raw(shape: f64, scale: f64) -> GammaLargeShape {$/;"	P	implementation:GammaLargeShape
new_raw	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    fn new_raw(shape: f64, scale: f64) -> GammaSmallShape {$/;"	P	implementation:GammaSmallShape
new_rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs	/^    pub fn new_rotation(angle: N) -> Self {$/;"	P	implementation:Matrix3
new_rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs	/^    pub fn new_rotation(axisangle: Vector3<N>) -> Self {$/;"	P	implementation:Matrix4
new_rotation_wrt_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs	/^    pub fn new_rotation_wrt_point(axisangle: Vector3<N>, pt: Point3<N>) -> Self {$/;"	P	implementation:Matrix4
new_scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs	/^    pub fn new_scaling(scaling: N) -> Self {$/;"	f
new_store	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn new_store(capacity: Option<usize>) -> HashMap<K, (Instant, V)> {$/;"	P	implementation:TimedCache
new_store	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn new_store(capacity: Option<usize>) -> HashMap<K, V> {$/;"	P	implementation:UnboundCache
new_symbolic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_cholesky.rs	/^    pub fn new_symbolic(m: &CsMatrix<N, D, D>) -> Self {$/;"	f
new_translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs	/^    pub fn new_translation<SB>(translation: &Vector<N, DimNameDiff<D, U1>, SB>) -> Self$/;"	f
new_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs	/^    pub fn new_unchecked(value: T) -> Self {$/;"	P	implementation:Unit
new_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs	/^    pub fn new_unchecked(c: N::RealField, s: N) -> Self {$/;"	P	implementation:GivensRotation
new_unchecked	/Users/williamcashman/Honours/Program/n_poly/src/algebras/finite_field.rs	/^    pub fn new_unchecked(q: i64) -> Self {$/;"	P	implementation:FF
new_uninitialized	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs	/^    pub unsafe fn new_uninitialized() -> Self {$/;"	f
new_uninitialized_generic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^    pub unsafe fn new_uninitialized_generic(nrows: R, ncols: C) -> Self {$/;"	f
new_uninitialized_generic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    pub fn new_uninitialized_generic(nrows: R, ncols: C, nvals: usize) -> Self {$/;"	f
new_with_default	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    fn new_with_default<E, V>(name: E, default: V) -> Self$/;"	P	implementation:Var
new_with_offset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    pub fn new_with_offset<Off>(date: Option<NaiveDate>, time: Option<NaiveTime>,$/;"	P	implementation:DelayedFormat
new_with_param	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/dirichlet.rs	/^    pub fn new_with_param(alpha: f64, size: usize) -> Dirichlet {$/;"	P	implementation:Dirichlet
new_with_workspace	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs	/^    pub fn new_with_workspace(mut hess: MatrixN<N, D>, work: &mut VectorN<N, D>) -> Self {$/;"	f
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:LRUListIterator
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    next: usize,$/;"	m	struct:ListEntry
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/strftime.rs	/^                macro_rules! next {$/;"	M	method:StrftimeItems::next
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/strftime.rs	/^    fn next(&mut self) -> Option<Item<'a>> {$/;"	P	implementation:StrftimeItems
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/iter.rs	/^    fn next(&mut self) -> Option<T> {$/;"	f
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    fn next(&mut self) -> Option<(I::Item, J::Item)> {$/;"	f
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    fn next(&mut self) -> Option<A> {$/;"	f
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    fn next(&mut self) -> Option<B> {$/;"	f
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	f
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    fn next(&mut self) -> Option<R> {$/;"	f
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:Tuple1Combination
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations_with_replacement.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/exactly_one_err.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/intersperse.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	f
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	f
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/merge_join.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	f
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/pad_tail.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	f
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	P	implementation:PutBackN
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs	/^    fn next(&mut self) -> Option<A> {$/;"	f
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/repeatn.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs	/^    fn next(&mut self) -> Option<A> {$/;"	f
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tee.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	f
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs	/^    fn next(&mut self) -> Option<T> {$/;"	f
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	f
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:WithPosition
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_eq_impl.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_longest.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:ColumnIter
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:ColumnIterMut
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:RowIter
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:RowIterMut
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:ColumnEntries
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^    fn next(&mut self) -> Option<T> {$/;"	f
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:IndexVecIntoIter
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^    fn next(&mut self) -> Option<usize> {$/;"	P	implementation:IndexVecIter
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^        fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:test::ChunkHintedIterator
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^        fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:test::UnhintedIterator
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^        fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:test::WindowHintedIterator
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:SliceChooseIter
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn next(&mut self) -> Option<usize> {$/;"	P	implementation:InstPtrs
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn next(&self, si: StatePtr, cls: usize) -> StatePtr {$/;"	P	implementation:Transitions
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:LiteralIter
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/pattern.rs	/^    fn next(&mut self) -> SearchStep {$/;"	P	implementation:RegexSearcher
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    fn next(&mut self) -> Option<&'t [u8]> {$/;"	P	implementation:Split
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    fn next(&mut self) -> Option<&'t [u8]> {$/;"	P	implementation:SplitN
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    fn next(&mut self) -> Option<Captures<'t>> {$/;"	P	implementation:CaptureMatches
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    fn next(&mut self) -> Option<Match<'t>> {$/;"	P	implementation:Matches
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    fn next(&mut self) -> Option<Option<&'r str>> {$/;"	P	implementation:CaptureNames
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    fn next(&mut self) -> Option<Option<Match<'t>>> {$/;"	P	implementation:SubCaptureMatches
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_trait.rs	/^    fn next(&mut self) -> Option<(usize, usize)> {$/;"	f
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_trait.rs	/^    fn next(&mut self) -> Option<Locations> {$/;"	f
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_trait.rs	/^    fn next(&mut self) -> Option<Option<(usize, usize)>> {$/;"	P	implementation:SubCapturesPosIter
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    fn next(&mut self) -> Option<&'t str> {$/;"	P	implementation:Split
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    fn next(&mut self) -> Option<&'t str> {$/;"	P	implementation:SplitN
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    fn next(&mut self) -> Option<Captures<'t>> {$/;"	P	implementation:CaptureMatches
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    fn next(&mut self) -> Option<Match<'t>> {$/;"	P	implementation:Matches
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    fn next(&mut self) -> Option<Option<&'r str>> {$/;"	P	implementation:CaptureNames
next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    fn next(&mut self) -> Option<Option<Match<'t>>> {$/;"	P	implementation:SubCaptureMatches
next_after_empty	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    fn next_after_empty(&self, _text: &[u8], i: usize) -> usize {$/;"	P	implementation:ExecNoSync
next_after_empty	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    fn next_after_empty(&self, text: &str, i: usize) -> usize {$/;"	P	implementation:ExecNoSyncStr
next_after_empty	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_trait.rs	/^    fn next_after_empty(&self, text: &Self::Text, i: usize) -> usize;$/;"	P	interface:RegularExpression
next_back	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/iter.rs	/^    fn next_back(&mut self) -> Option<T> {$/;"	f
next_back	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_back	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/pad_tail.rs	/^    fn next_back(&mut self) -> Option<I::Item> {$/;"	f
next_back	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs	/^    fn next_back(&mut self) -> Option<I::Item> {$/;"	f
next_back	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/repeatn.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_back	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_longest.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_char	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    fn next_char(&self, at: InputAt) -> Char {$/;"	P	implementation:ByteInput
next_char	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    fn next_char(&self, at: InputAt) -> Char {$/;"	P	implementation:CharInput
next_char	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    fn next_char(&self, at: InputAt) -> Char {$/;"	P	implementation:T
next_char	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    fn next_char(&self, at: InputAt) -> Char;$/;"	P	interface:Input
next_element	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    fn next_element(&mut self) -> Option<I::Item> {$/;"	f
next_match	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/pattern.rs	/^    next_match: Option<(usize, usize)>,$/;"	m	struct:RegexSearcher
next_npow	/Users/williamcashman/Honours/Program/n_poly/src/mathutils.rs	/^pub fn next_npow(num: usize, n: usize) -> usize {$/;"	f
next_pos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    pub fn next_pos(&self) -> usize {$/;"	P	implementation:InputAt
next_si	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    unsafe fn next_si(&self, si: StatePtr, text: &[u8], i: usize) -> StatePtr {$/;"	P	implementation:Fsm
next_state	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn next_state($/;"	P	implementation:Fsm
next_tuple	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn next_tuple<T>(&mut self) -> Option<T>$/;"	P	interface:Itertools
next_u32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/read.rs	/^    fn next_u32(&mut self) -> u32 {$/;"	P	implementation:ReadRng
next_u32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/reseeding.rs	/^    fn next_u32(&mut self) -> u32 {$/;"	f
next_u32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/entropy.rs	/^    fn next_u32(&mut self) -> u32 {$/;"	P	implementation:EntropyRng
next_u32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/mock.rs	/^    fn next_u32(&mut self) -> u32 {$/;"	P	implementation:StepRng
next_u32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/small.rs	/^    fn next_u32(&mut self) -> u32 {$/;"	P	implementation:SmallRng
next_u32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/std.rs	/^    fn next_u32(&mut self) -> u32 {$/;"	P	implementation:StdRng
next_u32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/thread.rs	/^    fn next_u32(&mut self) -> u32 {$/;"	P	implementation:ThreadRng
next_u64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/read.rs	/^    fn next_u64(&mut self) -> u64 {$/;"	P	implementation:ReadRng
next_u64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/reseeding.rs	/^    fn next_u64(&mut self) -> u64 {$/;"	f
next_u64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/entropy.rs	/^    fn next_u64(&mut self) -> u64 {$/;"	P	implementation:EntropyRng
next_u64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/mock.rs	/^    fn next_u64(&mut self) -> u64 {$/;"	P	implementation:StepRng
next_u64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/small.rs	/^    fn next_u64(&mut self) -> u64 {$/;"	P	implementation:SmallRng
next_u64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/std.rs	/^    fn next_u64(&mut self) -> u64 {$/;"	P	implementation:StdRng
next_u64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/thread.rs	/^    fn next_u64(&mut self) -> u64 {$/;"	P	implementation:ThreadRng
next_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    unsafe fn next_unchecked(&self, si: StatePtr, cls: usize) -> StatePtr {$/;"	P	implementation:Transitions
next_utf8	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/utf8.rs	/^pub fn next_utf8(text: &[u8], i: usize) -> usize {$/;"	f
next_with	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    fn next_with<F>(&mut self, mut f: F) -> Option<I::Item>$/;"	f
nfa	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    nfa: Program,$/;"	m	struct:ExecReadOnly
nfa	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    pub fn nfa(mut self) -> Self {$/;"	P	implementation:ExecBuilder
nisoweeks	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    pub fn nisoweeks(&self) -> u32 {$/;"	P	implementation:YearFlags
nlerp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn nlerp(&self, other: &Self, t: N) -> Self {$/;"	f
nlist	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/pikevm.rs	/^    nlist: Threads,$/;"	m	struct:Cache
no_alias_odds	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^    no_alias_odds: Vec<W>,$/;"	m	struct:WeightedIndex
no_expansion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    fn no_expansion(&mut self) -> Option<Cow<[u8]>> {$/;"	P	implementation:NoExpand
no_expansion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    fn no_expansion(&mut self) -> Option<Cow<[u8]>> {$/;"	P	implementation:u8
no_expansion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    fn no_expansion<'r>(&'r mut self) -> Option<Cow<'r, [u8]>> {$/;"	P	implementation:ReplacerRef
no_expansion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    fn no_expansion<'r>(&'r mut self) -> Option<Cow<'r, [u8]>> {$/;"	P	interface:Replacer
no_expansion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    fn no_expansion(&mut self) -> Option<Cow<str>> {$/;"	P	implementation:NoExpand
no_expansion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    fn no_expansion(&mut self) -> Option<Cow<str>> {$/;"	P	implementation:ReplacerRef
no_expansion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    fn no_expansion(&mut self) -> Option<Cow<str>> {$/;"	P	implementation:str
no_expansion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    fn no_expansion<'r>(&'r mut self) -> Option<Cow<'r, str>> {$/;"	P	interface:Replacer
no_match	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^    fn no_match() {$/;"	f	module:tests
none	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        fn none(&mut self) -> Result<(), Error> {$/;"	P	implementation:fmt_support::FmtVisitor
none	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        fn none(&mut self) -> Result<(), Error> {$/;"	P	implementation:sval_support::SvalVisitor
none	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    fn none(&mut self) -> Result<(), Error>;$/;"	P	interface:Visitor
none	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/test.rs	/^            fn none(&mut self) -> Result<(), Error> {$/;"	P	implementation:Value::to_token::TestVisitor
none	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/utils.rs	/^    fn none(self) -> bool {$/;"	P	implementation:bool
none	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/utils.rs	/^    fn none(self) -> bool;$/;"	P	interface:BoolAsSIMD
nonzero_pattern	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_cholesky.rs	/^    fn nonzero_pattern<S: CsStorage<N, D, D>>($/;"	f
norm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/vector.rs	/^    fn norm(&self) -> Self::RealField;$/;"	P	interface:NormedSpace
norm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn norm<Tz: TimeZone>(dt: &Option<DateTime<Tz>>) -> Option<(&DateTime<Tz>, &Tz::Offset)> {$/;"	f	function:test_decodable_json
norm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn norm<Tz: TimeZone>(dt: &Option<DateTime<Tz>>) -> Option<(&DateTime<Tz>, &Tz::Offset)> {$/;"	f	function:test_decodable_json_timestamps
norm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^    fn norm(&self) -> <N as ComplexField>::RealField {$/;"	f
norm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs	/^mod norm;$/;"	n
norm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^    fn norm(&self) -> N::SimdRealField {$/;"	f
norm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^    fn norm<R, C, S>(&self, m: &Matrix<N, R, C, S>) -> N::SimdRealField$/;"	P	implementation:EuclideanNorm
norm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^    fn norm<R, C, S>(&self, m: &Matrix<N, R, C, S>) -> N::SimdRealField$/;"	P	implementation:LpNorm
norm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^    fn norm<R, C, S>(&self, m: &Matrix<N, R, C, S>) -> N::SimdRealField$/;"	P	implementation:UniformNorm
norm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^    fn norm<R, C, S>(&self, m: &Matrix<N, R, C, S>) -> N::SimdRealField$/;"	P	interface:Norm
norm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^    pub fn norm(&self) -> N::SimdRealField {$/;"	P	implementation:Matrix
norm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs	/^    fn norm(&self) -> Self::Norm;$/;"	P	interface:Normed
norm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    fn norm(&self) -> N::SimdRealField {$/;"	P	implementation:Quaternion
norm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn norm(&self) -> N {$/;"	f
norm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    fn norm(&self) -> N {$/;"	P	implementation:Quaternion
norm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs	/^    fn norm(&self) -> N::SimdRealField {$/;"	P	implementation:Complex
norm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub fn norm(&self) -> T {$/;"	P	implementation:Complex
norm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/normal.rs	/^    norm: Normal,$/;"	m	struct:LogNormal
norm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/unit_circle.rs	/^    fn norm() {$/;"	f	module:tests
norm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/unit_sphere.rs	/^    fn norm() {$/;"	f	module:tests
norm1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn norm1(self) -> Self::RealField {$/;"	P	implementation:Complex
norm1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn norm1(self) -> Self::RealField;$/;"	P	interface:ComplexField
norm_sqr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub fn norm_sqr(&self) -> T {$/;"	P	implementation:Complex
norm_squared	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/vector.rs	/^    fn norm_squared(&self) -> Self::RealField;$/;"	P	interface:NormedSpace
norm_squared	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^    fn norm_squared(&self) -> <N as ComplexField>::RealField {$/;"	f
norm_squared	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^    fn norm_squared(&self) -> N::SimdRealField {$/;"	f
norm_squared	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^    pub fn norm_squared(&self) -> N::SimdRealField {$/;"	P	implementation:Matrix
norm_squared	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs	/^    fn norm_squared(&self) -> Self::Norm;$/;"	P	interface:Normed
norm_squared	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    fn norm_squared(&self) -> N::SimdRealField {$/;"	P	implementation:Quaternion
norm_squared	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn norm_squared(&self) -> N {$/;"	f
norm_squared	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    fn norm_squared(&self) -> N {$/;"	P	implementation:Quaternion
norm_squared	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs	/^    fn norm_squared(&self) -> N::SimdRealField {$/;"	P	implementation:Complex
normal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^#[cfg(feature = "std")] mod normal;$/;"	n
normalize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/vector.rs	/^    fn normalize(&self) -> Self;$/;"	P	interface:NormedSpace
normalize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^    fn normalize(&self) -> Self {$/;"	f
normalize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^    pub fn normalize(&self) -> MatrixMN<N, R, C>$/;"	P	implementation:Matrix
normalize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn normalize(&self) -> Self {$/;"	f
normalize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    fn normalize(&self) -> Self {$/;"	P	implementation:Quaternion
normalize_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/vector.rs	/^    fn normalize_mut(&mut self) -> Self::RealField;$/;"	P	interface:NormedSpace
normalize_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^    fn normalize_mut(&mut self) -> <N as ComplexField>::RealField {$/;"	f
normalize_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^    pub fn normalize_mut(&mut self) -> N::SimdRealField {$/;"	P	implementation:Matrix
normalize_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn normalize_mut(&mut self) -> N {$/;"	f
normalize_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    fn normalize_mut(&mut self) -> N {$/;"	P	implementation:Quaternion
not	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^    fn not(self) -> Self::Output {$/;"	P	implementation:B0
not	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^    fn not(self) -> Self::Output {$/;"	P	implementation:B1
not_word_boundary	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    not_word_boundary: bool,$/;"	m	struct:EmptyFlags
now	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/local.rs	/^    pub fn now() -> DateTime<Local> {$/;"	P	implementation:Local
now	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/utc.rs	/^    pub fn now() -> DateTime<Utc> {$/;"	P	implementation:Utc
nrows	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^    fn nrows(&self) -> usize {$/;"	P	implementation:RowIterMut
nrows	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn nrows(&self) -> usize {$/;"	P	implementation:Matrix
nrows	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^    nrows: R,$/;"	m	struct:VecStorage
nrows	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    pub fn nrows(&self) -> usize {$/;"	P	implementation:CsMatrix
nth	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/iter.rs	/^    fn nth(&mut self, n: usize) -> Option<T> {$/;"	f
nth	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    fn nth(&mut self, n: usize) -> Option<Self::Item> {$/;"	f
nth	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/merge_join.rs	/^    fn nth(&mut self, mut n: usize) -> Option<Self::Item> {$/;"	f
num	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^macro_rules! num  { ($x:ident) => (Item::Numeric(Numeric::$x, Pad::None)) }$/;"	M
num0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^macro_rules! num0 { ($x:ident) => (Item::Numeric(Numeric::$x, Pad::Zero)) }$/;"	M
num_byte_classes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn num_byte_classes(&self) -> usize {$/;"	P	implementation:Fsm
num_byte_classes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    num_byte_classes: usize,$/;"	m	struct:StateMap
num_byte_classes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    num_byte_classes: usize,$/;"	m	struct:Transitions
num_chars	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    pub fn num_chars(&self) -> usize {$/;"	P	implementation:InstRanges
num_days	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    pub fn num_days(&self) -> i64 {$/;"	P	implementation:Duration
num_days_from_ce	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    fn num_days_from_ce(&self) -> i32 {$/;"	P	interface:Datelike
num_days_from_monday	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    pub fn num_days_from_monday(&self) -> u32 {$/;"	P	implementation:Weekday
num_days_from_sunday	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    pub fn num_days_from_sunday(&self) -> u32 {$/;"	P	implementation:Weekday
num_exprs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    num_exprs: usize,$/;"	m	struct:Compiler
num_gens	/Users/williamcashman/Honours/Program/n_poly/src/ideals/mod.rs	/^    pub fn num_gens(&self) -> usize {$/;"	P	implementation:Ideal
num_hours	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    pub fn num_hours(&self) -> i64 {$/;"	P	implementation:Duration
num_items	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs	/^    fn num_items() -> usize;$/;"	P	interface:TupleCollect
num_microseconds	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    pub fn num_microseconds(&self) -> Option<i64> {$/;"	P	implementation:Duration
num_milliseconds	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    pub fn num_milliseconds(&self) -> i64 {$/;"	P	implementation:Duration
num_minutes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    pub fn num_minutes(&self) -> i64 {$/;"	P	implementation:Duration
num_nanoseconds	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    pub fn num_nanoseconds(&self) -> Option<i64> {$/;"	P	implementation:Duration
num_seconds	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    pub fn num_seconds(&self) -> i64 {$/;"	P	implementation:Duration
num_seconds_from_midnight	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    fn num_seconds_from_midnight(&self) -> u32 {$/;"	P	interface:Timelike
num_seconds_from_midnight	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    fn num_seconds_from_midnight(&self) -> u32 {$/;"	P	implementation:NaiveTime
num_states	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn num_states(&self) -> usize {$/;"	P	implementation:Transitions
num_terms	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    pub fn num_terms(&self) -> usize {$/;"	P	implementation:Poly
num_weeks	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    pub fn num_weeks(&self) -> i64 {$/;"	P	implementation:Duration
number	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/scan.rs	/^pub fn number(s: &str, min: usize, max: usize) -> ParseResult<(&str, i64)> {$/;"	f
number_from_monday	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    pub fn number_from_monday(&self) -> u32 {$/;"	P	implementation:Weekday
number_from_sunday	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    pub fn number_from_sunday(&self) -> u32 {$/;"	P	implementation:Weekday
numer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    numer: ChiSquared,$/;"	m	struct:FisherF
nums	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^macro_rules! nums { ($x:ident) => (Item::Numeric(Numeric::$x, Pad::Space)) }$/;"	M
octal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_builder.rs	/^    pub octal: bool,$/;"	m	struct:RegexOptions
of	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn of(&self) -> Of {$/;"	P	implementation:NaiveDate
off	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    off: Option<(String, FixedOffset)>,$/;"	m	struct:DelayedFormat
off_diagonal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs	/^    off_diagonal: VectorN<N, DimDiff<DimMinimum<R, C>, U1>>,$/;"	m	struct:Bidiagonal
off_diagonal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs	/^    pub fn off_diagonal(&self) -> VectorN<N::RealField, DimDiff<DimMinimum<R, C>, U1>>$/;"	f
off_diagonal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs	/^    off_diagonal: VectorN<N, DimDiff<D, U1>>,$/;"	m	struct:SymmetricTridiagonal
off_diagonal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs	/^    pub fn off_diagonal(&self) -> VectorN<N::RealField, DimDiff<D, U1>>$/;"	f
offset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    offset: Tz::Offset,$/;"	m	struct:Date
offset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    pub fn offset(&self) -> &Tz::Offset {$/;"	P	implementation:Date
offset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    offset: Tz::Offset,$/;"	m	struct:DateTime
offset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    pub fn offset(&self) -> &Tz::Offset {$/;"	P	implementation:DateTime
offset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub offset: Option<i32>,$/;"	m	struct:Parsed
offset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^pub mod offset;$/;"	n
offset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^    offset: u32,$/;"	m	struct:UniformDuration
offset_from_local_date	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/fixed.rs	/^    fn offset_from_local_date(&self, _local: &NaiveDate) -> LocalResult<FixedOffset> {$/;"	P	implementation:FixedOffset
offset_from_local_date	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/local.rs	/^    fn offset_from_local_date(&self, local: &NaiveDate) -> LocalResult<FixedOffset> {$/;"	P	implementation:Local
offset_from_local_date	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^    fn offset_from_local_date(&self, local: &NaiveDate) -> LocalResult<Self::Offset>;$/;"	P	interface:TimeZone
offset_from_local_date	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/utc.rs	/^    fn offset_from_local_date(&self, _local: &NaiveDate) -> LocalResult<Utc> {$/;"	P	implementation:Utc
offset_from_local_datetime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/fixed.rs	/^    fn offset_from_local_datetime(&self, _local: &NaiveDateTime) -> LocalResult<FixedOffset> {$/;"	P	implementation:FixedOffset
offset_from_local_datetime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/local.rs	/^    fn offset_from_local_datetime(&self, local: &NaiveDateTime) -> LocalResult<FixedOffset> {$/;"	P	implementation:Local
offset_from_local_datetime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^    fn offset_from_local_datetime(&self, local: &NaiveDateTime) -> LocalResult<Self::Offset>;$/;"	P	interface:TimeZone
offset_from_local_datetime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/utc.rs	/^    fn offset_from_local_datetime(&self, _local: &NaiveDateTime) -> LocalResult<Utc> {$/;"	P	implementation:Utc
offset_from_utc_date	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/fixed.rs	/^    fn offset_from_utc_date(&self, _utc: &NaiveDate) -> FixedOffset { *self }$/;"	P	implementation:FixedOffset
offset_from_utc_date	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/local.rs	/^    fn offset_from_utc_date(&self, utc: &NaiveDate) -> FixedOffset {$/;"	P	implementation:Local
offset_from_utc_date	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^    fn offset_from_utc_date(&self, utc: &NaiveDate) -> Self::Offset;$/;"	P	interface:TimeZone
offset_from_utc_date	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/utc.rs	/^    fn offset_from_utc_date(&self, _utc: &NaiveDate) -> Utc { Utc }$/;"	P	implementation:Utc
offset_from_utc_datetime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/fixed.rs	/^    fn offset_from_utc_datetime(&self, _utc: &NaiveDateTime) -> FixedOffset { *self }$/;"	P	implementation:FixedOffset
offset_from_utc_datetime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/local.rs	/^    fn offset_from_utc_datetime(&self, utc: &NaiveDateTime) -> FixedOffset {$/;"	P	implementation:Local
offset_from_utc_datetime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^    fn offset_from_utc_datetime(&self, utc: &NaiveDateTime) -> Self::Offset;$/;"	P	interface:TimeZone
offset_from_utc_datetime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/utc.rs	/^    fn offset_from_utc_datetime(&self, _utc: &NaiveDateTime) -> Utc { Utc }$/;"	P	implementation:Utc
ok	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_cholesky.rs	/^    ok: bool,$/;"	m	struct:CsCholesky
ok_or	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^fn ok_or<T, E>(t: Option<T>, e: E) -> Result<T, E> {$/;"	f
oldest_buffered_group	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    oldest_buffered_group: usize,$/;"	m	struct:GroupInner
oldtime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^mod oldtime;$/;"	n
one	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^    fn one() -> Id {$/;"	P	implementation:Id
one	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^    fn one() -> Self {$/;"	f
one	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs	/^    fn one() -> Self {$/;"	f
one	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^    fn one() -> Self {$/;"	f
one	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_construction.rs	/^    fn one() -> Self {$/;"	f
one	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs	/^    fn one() -> Self {$/;"	f
one	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_construction.rs	/^    fn one() -> Self {$/;"	f
one	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_construction.rs	/^    fn one() -> Self {$/;"	f
one	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs	/^    fn one() -> Self {$/;"	f
one	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs	/^pub fn one<T: One>() -> T {$/;"	f
one	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn one() -> Self {$/;"	P	implementation:Complex
one	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/identities.rs	/^    fn one() -> Self {$/;"	f
one	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/identities.rs	/^    fn one() -> Self;$/;"	P	interface:One
one	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/identities.rs	/^pub fn one<T: One>() -> T {$/;"	f
one	/Users/williamcashman/Honours/Program/n_poly/src/algebras/complex.rs	/^    fn one() -> Self {$/;"	P	implementation:CC
one	/Users/williamcashman/Honours/Program/n_poly/src/algebras/finite_field.rs	/^    fn one() -> Self {$/;"	P	implementation:FF
one	/Users/williamcashman/Honours/Program/n_poly/src/algebras/integers.rs	/^    fn one() -> Self {$/;"	P	implementation:ZZ
one	/Users/williamcashman/Honours/Program/n_poly/src/algebras/mod.rs	/^    fn one() -> Self;$/;"	P	interface:One
one	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    fn one() -> Self {$/;"	P	implementation:Poly
one	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    fn one() -> Self {$/;"	P	implementation:Term
one	/Users/williamcashman/Honours/Program/n_poly/src/algebras/real.rs	/^    fn one() -> Self {$/;"	P	implementation:RR
one_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/identities.rs	/^macro_rules! one_impl {$/;"	M
one_operator	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/mod.rs	/^mod one_operator;$/;"	n
only_utf8	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    pub fn only_utf8(mut self, yes: bool) -> Self {$/;"	P	implementation:Compiler
only_utf8	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    only_utf8: bool,$/;"	m	struct:ExecBuilder
only_utf8	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    pub fn only_utf8(mut self, yes: bool) -> Self {$/;"	P	implementation:ExecBuilder
only_utf8	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    only_utf8: bool,$/;"	m	struct:ByteInput
only_utf8	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    pub fn only_utf8(&self) -> bool {$/;"	P	implementation:Program
only_utf8	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    pub only_utf8: bool,$/;"	m	struct:Program
op	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/one_operator.rs	/^    fn op(&self, _: O, lhs: &Self) -> Self {$/;"	P	interface:AbstractMagma
op_assign_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_ops.rs	/^macro_rules! op_assign_impl($/;"	M
op_macros	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod op_macros;$/;"	n
opassign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^mod opassign {$/;"	n
operate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^    fn operate(&self, _: &Self) -> Id<O> {$/;"	P	implementation:Id
operate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/one_operator.rs	/^    fn operate(&self, lhs: &Self) -> Self {$/;"	P	implementation:Complex
operate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/one_operator.rs	/^    fn operate(&self, right: &Self) -> Self;$/;"	P	interface:AbstractMagma
operate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^    fn operate(&self, other: &Self) -> Self {$/;"	f
operate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alga.rs	/^    fn operate(&self, rhs: &Self) -> Self {$/;"	f
operate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    fn operate(&self, rhs: &Self) -> Self {$/;"	P	implementation:Quaternion
operate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    fn operate(&self, rhs: &Self) -> Self {$/;"	P	implementation:UnitQuaternion
operate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alga.rs	/^    fn operate(&self, rhs: &Self) -> Self {$/;"	f
operate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alga.rs	/^    fn operate(&self, rhs: &Self) -> Self {$/;"	f
operate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_alga.rs	/^    fn operate(&self, rhs: &Self) -> Self {$/;"	f
operate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alga.rs	/^    fn operate(&self, rhs: &Self) -> Self {$/;"	f
operate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_alga.rs	/^    fn operate(&self, rhs: &Self) -> Self {$/;"	P	implementation:UnitComplex
operate	/Users/williamcashman/Honours/Program/n_poly/src/algebras/integers.rs	/^    fn operate(&self, other: &Self) -> Self {$/;"	P	implementation:ZZ
operator	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/mod.rs	/^mod operator;$/;"	n
operator_aliases	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/lib.rs	/^pub mod operator_aliases;$/;"	n
operator_token	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/operator.rs	/^    fn operator_token() -> Self {$/;"	P	implementation:AbstractOperator
operator_token	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/operator.rs	/^    fn operator_token() -> Self {$/;"	P	implementation:Additive
operator_token	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/operator.rs	/^    fn operator_token() -> Self {$/;"	P	implementation:Multiplicative
operator_token	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/operator.rs	/^    fn operator_token() -> Self;$/;"	P	interface:Operator
ops	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs	/^mod ops;$/;"	n
ops	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^pub mod ops;$/;"	n
options	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    options: RegexOptions,$/;"	m	struct:ExecBuilder
optry	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/pow.rs	/^    macro_rules! optry {$/;"	M	function:checked_pow
order	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    order: LRUList<(K, V)>,$/;"	m	struct:SizedCache
ordinal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    #[inline] fn ordinal(&self) -> u32 { self.naive_local().ordinal() }$/;"	P	implementation:Date
ordinal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    #[inline] fn ordinal(&self) -> u32 { self.naive_local().ordinal() }$/;"	P	implementation:DateTime
ordinal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub ordinal: Option<u32>,$/;"	m	struct:Parsed
ordinal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    fn ordinal(&self) -> u32;$/;"	P	interface:Datelike
ordinal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn ordinal(&self) -> u32 {$/;"	P	implementation:NaiveDate
ordinal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn ordinal(&self) -> u32 {$/;"	P	implementation:NaiveDateTime
ordinal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    pub fn ordinal(&self) -> u32 {$/;"	P	implementation:Of
ordinal0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    #[inline] fn ordinal0(&self) -> u32 { self.naive_local().ordinal0() }$/;"	P	implementation:Date
ordinal0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    #[inline] fn ordinal0(&self) -> u32 { self.naive_local().ordinal0() }$/;"	P	implementation:DateTime
ordinal0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    fn ordinal0(&self) -> u32;$/;"	P	interface:Datelike
ordinal0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn ordinal0(&self) -> u32 {$/;"	P	implementation:NaiveDate
ordinal0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn ordinal0(&self) -> u32 {$/;"	P	implementation:NaiveDateTime
origin	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_alga.rs	/^    fn origin() -> Self {$/;"	f
origin	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs	/^    pub fn origin() -> Self$/;"	f
original	/Users/williamcashman/Honours/Program/n_poly/src/ideals/mod.rs	/^    original: Option<&'b Ideal<'a, P>>,$/;"	m	struct:MonomialIdeal
original_i	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_cholesky.rs	/^    original_i: Vec<usize>,$/;"	m	struct:CsCholesky
original_p	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_cholesky.rs	/^    original_p: Vec<usize>,$/;"	m	struct:CsCholesky
orthographic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod orthographic;$/;"	n
orthonormal_subspace_basis	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/vector.rs	/^    fn orthonormal_subspace_basis<F: FnMut(&Self) -> bool>(vs: &[Self], f: F);$/;"	P	interface:FiniteDimInnerSpace
orthonormal_subspace_basis	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^    fn orthonormal_subspace_basis<F>(vs: &[Self], mut f: F)$/;"	f
orthonormal_subspace_basis	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^    pub fn orthonormal_subspace_basis<F>(vs: &[Self], mut f: F)$/;"	f
orthonormalize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/vector.rs	/^    fn orthonormalize(vs: &mut [Self]) -> usize;$/;"	P	interface:FiniteDimInnerSpace
orthonormalize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^    fn orthonormalize(vs: &mut [Self]) -> usize {$/;"	f
orthonormalize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^    pub fn orthonormalize(vs: &mut [Self]) -> usize {$/;"	f
other	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^mod other;$/;"	n
outer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn outer(&self, other: &Self) -> Self {$/;"	f
overflowing_add_signed	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    pub fn overflowing_add_signed(&self, mut rhs: OldDuration) -> (NaiveTime, i64) {$/;"	P	implementation:NaiveTime
overflowing_sub_signed	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    pub fn overflowing_sub_signed(&self, rhs: OldDuration) -> (NaiveTime, i64) {$/;"	P	implementation:NaiveTime
owner	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tee.rs	/^    owner: bool,$/;"	m	struct:TeeBuffer
p	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs	/^    p: PermutationSequence<DimMinimum<R, C>>,$/;"	m	struct:FullPivLU
p	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs	/^    pub fn p(&self) -> &PermutationSequence<DimMinimum<R, C>> {$/;"	f
p	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs	/^    p: PermutationSequence<DimMinimum<R, C>>,$/;"	m	struct:LU
p	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs	/^    pub fn p(&self) -> &PermutationSequence<DimMinimum<R, C>> {$/;"	f
p	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    pub fn p(&self) -> &[usize] {$/;"	f
p	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/binomial.rs	/^    p: f64,$/;"	m	struct:Binomial
p	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^        fn p(ips: Vec<u32>, flags: u8) -> bool {$/;"	f	function:tests::prop_state_encode_decode
p	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^        fn p(n: i32) -> bool {$/;"	f	function:tests::prop_read_write_i32
p	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^        fn p(n: u32) -> bool {$/;"	f	function:tests::prop_read_write_u32
p	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/utf8.rs	/^        fn p(cp: char) -> bool {$/;"	f	function:tests::prop_encode_matches_std
p	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/utf8.rs	/^        fn p(given_cp: char) -> bool {$/;"	f	function:tests::prop_decode_last_matches_std
p	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/utf8.rs	/^        fn p(given_cp: char) -> bool {$/;"	f	function:tests::prop_decode_matches_std
p	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/utf8.rs	/^        fn p(given_cp: char) -> bool {$/;"	f	function:tests::prop_roundtrip
p	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/utf8.rs	/^        fn p(given_cp: char) -> bool {$/;"	f	function:tests::prop_roundtrip_last
p_int	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/bernoulli.rs	/^    p_int: u64,$/;"	m	struct:Bernoulli
pad_tail	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^mod pad_tail;$/;"	n
pad_using	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn pad_using<F>(self, min: usize, f: F) -> PadUsing<Self, F>$/;"	P	interface:Itertools
pad_using	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/pad_tail.rs	/^pub fn pad_using<I, F>(iter: I, min: usize, filler: F) -> PadUsing<I, F>$/;"	f
pairwise_sum	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^fn pairwise_sum<T: Weight>(values: &[T]) -> T {$/;"	f
parent	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    parent: &'a GroupBy<K, I, F>,$/;"	m	struct:Group
parent	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    parent: &'a GroupBy<K, I, F>,$/;"	m	struct:Groups
parent	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    parent: &'a IntoChunks<I>,$/;"	m	struct:Chunk
parent	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    parent: &'a IntoChunks<I>,$/;"	m	struct:Chunks
parent1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    parent1: U,$/;"	m	struct:GenericArrayImplEven
parent1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    parent1: U,$/;"	m	struct:GenericArrayImplOdd
parent2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    parent2: U,$/;"	m	struct:GenericArrayImplEven
parent2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    parent2: U,$/;"	m	struct:GenericArrayImplOdd
pareto	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^#[cfg(feature = "std")] mod pareto;$/;"	n
parse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^mod parse;$/;"	n
parse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parse.rs	/^pub fn parse<'a, I, B>(parsed: &mut Parsed, mut s: &str, items: I) -> ParseResult<()>$/;"	f
parse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^        macro_rules! parse {$/;"	M	function:tests::test_parsed_to_datetime
parse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^        macro_rules! parse {$/;"	M	function:tests::test_parsed_to_datetime_with_timezone
parse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^        macro_rules! parse {$/;"	M	function:tests::test_parsed_to_naive_date
parse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^        macro_rules! parse {$/;"	M	function:tests::test_parsed_to_naive_datetime_with_offset
parse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^        macro_rules! parse {$/;"	M	function:tests::test_parsed_to_naive_time
parse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^    pub fn parse(&mut self, filters: &str) -> &mut Self {$/;"	P	implementation:Builder
parse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    fn parse(&self) -> Result<Parsed, Error> {$/;"	P	implementation:ExecBuilder
parse	/Users/williamcashman/Honours/Program/n_poly/src/lib.rs	/^pub mod parse;$/;"	n
parse_all	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parse.rs	/^    fn parse_all(s: &str, items: &[Item]) -> ParseResult<Parsed> {$/;"	f	function:test_parse
parse_and_collect	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/strftime.rs	/^    fn parse_and_collect<'a>(s: &'a str) -> Vec<Item<'a>> {$/;"	f	function:test_strftime_items
parse_default	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^    fn parse_default() {$/;"	f	module:tests
parse_filters	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    pub fn parse_filters(&mut self, filters: &str) -> &mut Self {$/;"	P	implementation:Builder
parse_from_rfc2822	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    pub fn parse_from_rfc2822(s: &str) -> ParseResult<DateTime<FixedOffset>> {$/;"	P	implementation:DateTime
parse_from_rfc3339	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    pub fn parse_from_rfc3339(s: &str) -> ParseResult<DateTime<FixedOffset>> {$/;"	P	implementation:DateTime
parse_from_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    pub fn parse_from_str(s: &str, fmt: &str) -> ParseResult<DateTime<FixedOffset>> {$/;"	P	implementation:DateTime
parse_from_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    pub fn parse_from_str(s: &str, fmt: &str) -> ParseResult<NaiveDate> {$/;"	P	implementation:NaiveDate
parse_from_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    pub fn parse_from_str(s: &str, fmt: &str) -> ParseResult<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
parse_from_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    pub fn parse_from_str(s: &str, fmt: &str) -> ParseResult<NaiveTime> {$/;"	P	implementation:NaiveTime
parse_rfc2822	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parse.rs	/^fn parse_rfc2822<'a>(parsed: &mut Parsed, mut s: &'a str) -> ParseResult<(&'a str, ())> {$/;"	f
parse_rfc3339	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parse.rs	/^fn parse_rfc3339<'a>(parsed: &mut Parsed, mut s: &'a str) -> ParseResult<(&'a str, ())> {$/;"	f
parse_rfc850	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parse.rs	/^fn parse_rfc850() {$/;"	f
parse_spec	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^fn parse_spec(spec: &str) -> (Vec<Directive>, Option<inner::Filter>) {$/;"	f
parse_spec_empty_level	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^    fn parse_spec_empty_level() {$/;"	f	module:tests
parse_spec_empty_with_filter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^    fn parse_spec_empty_with_filter() {$/;"	f	module:tests
parse_spec_global	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^    fn parse_spec_global() {$/;"	f	module:tests
parse_spec_invalid_crate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^    fn parse_spec_invalid_crate() {$/;"	f	module:tests
parse_spec_invalid_crate_filter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^    fn parse_spec_invalid_crate_filter() {$/;"	f	module:tests
parse_spec_invalid_level	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^    fn parse_spec_invalid_level() {$/;"	f	module:tests
parse_spec_string_level	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^    fn parse_spec_string_level() {$/;"	f	module:tests
parse_spec_valid	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^    fn parse_spec_valid() {$/;"	f	module:tests
parse_spec_valid_filter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^    fn parse_spec_valid_filter() {$/;"	f	module:tests
parse_write_style	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^    pub(crate) fn parse_write_style(&mut self, write_style: &str) -> &mut Self {$/;"	P	implementation:Builder
parse_write_style	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^fn parse_write_style(spec: &str) -> WriteStyle {$/;"	f
parse_write_style	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    pub fn parse_write_style(&mut self, write_style: &str) -> &mut Self {$/;"	P	implementation:Builder
parse_write_style_invalid	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^    fn parse_write_style_invalid() {$/;"	f	module:tests
parse_write_style_valid	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^    fn parse_write_style_valid() {$/;"	f	module:tests
parsed	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^mod parsed;$/;"	n
parsing_test	/Users/williamcashman/Honours/Program/n_poly/src/algebras/complex.rs	/^    fn parsing_test() {$/;"	f	module:tests
parsing_test	/Users/williamcashman/Honours/Program/n_poly/src/parse.rs	/^    fn parsing_test() {$/;"	f	module:tests
partial_clamp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/lattice.rs	/^    fn partial_clamp<'a>(&'a self, min: &'a Self, max: &'a Self) -> Option<&'a Self> {$/;"	P	interface:Lattice
partial_clamp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs	/^pub fn partial_clamp<'a, T: PartialOrd>(value: &'a T, min: &'a T, max: &'a T) -> Option<&'a T> {$/;"	f
partial_cmp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^    fn partial_cmp(&self, _: &Id<O>) -> Option<Ordering> {$/;"	P	implementation:Id
partial_cmp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/wrapper.rs	/^    fn partial_cmp(&self, other: &Self) -> Option<Ordering> {$/;"	P	implementation:Wrapper
partial_cmp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    fn partial_cmp(&self, other: &Date<Tz>) -> Option<Ordering> {$/;"	P	implementation:Date
partial_cmp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn partial_cmp(&self, other: &DateTime<Tz>) -> Option<Ordering> {$/;"	P	implementation:DateTime
partial_cmp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/impls.rs	/^    fn partial_cmp(&self, other: &GenericArray<T, N>) -> Option<Ordering> {$/;"	f
partial_cmp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^    fn partial_cmp(&self, other: &Key<'ko>) -> Option<cmp::Ordering> {$/;"	P	implementation:Key
partial_cmp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn partial_cmp(&self, other: &Level) -> Option<cmp::Ordering> {$/;"	P	implementation:Level
partial_cmp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn partial_cmp(&self, other: &Level) -> Option<cmp::Ordering> {$/;"	P	implementation:LevelFilter
partial_cmp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn partial_cmp(&self, other: &LevelFilter) -> Option<cmp::Ordering> {$/;"	P	implementation:Level
partial_cmp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn partial_cmp(&self, other: &LevelFilter) -> Option<cmp::Ordering> {$/;"	P	implementation:LevelFilter
partial_cmp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    fn partial_cmp(&self, other: &Self) -> Option<Ordering> {$/;"	f
partial_cmp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^    fn partial_cmp(&self, other: &Self) -> Option<Ordering> {$/;"	f
partial_cmp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs	/^pub fn partial_cmp<T: PartialOrd>(a: &T, b: &T) -> Option<Ordering> {$/;"	f
partial_cmp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    fn partial_cmp(&self, other: &Char) -> Option<Ordering> {$/;"	P	implementation:char
partial_cmp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    fn partial_cmp(&self, other: &char) -> Option<Ordering> {$/;"	P	implementation:Char
partial_cmp	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    fn partial_cmp(&self, other: &Self) -> Option<Ordering> {$/;"	P	implementation:Term
partial_div	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^    fn partial_div(self, _: Rhs) -> Self::Output {$/;"	P	implementation:ATerm
partial_div	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^    fn partial_div(self, rhs: Rhs) -> Self::Output {$/;"	f
partial_div	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn partial_div(self, rhs: N) -> Self::Output {$/;"	f
partial_div	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    fn partial_div(self, _: Rhs) -> Self::Output;$/;"	P	interface:PartialDiv
partial_div	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn partial_div(self, _: UInt<Ur, Br>) -> Self::Output {$/;"	P	implementation:UTerm
partial_div	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn partial_div(self, rhs: UInt<Ur, Br>) -> Self::Output {$/;"	f
partial_ge	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs	/^pub fn partial_ge<T: PartialOrd>(a: &T, b: &T) -> bool {$/;"	f
partial_gt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs	/^pub fn partial_gt<T: PartialOrd>(a: &T, b: &T) -> bool {$/;"	f
partial_le	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs	/^pub fn partial_le<T: PartialOrd>(a: &T, b: &T) -> bool {$/;"	f
partial_lt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs	/^pub fn partial_lt<T: PartialOrd>(a: &T, b: &T) -> bool {$/;"	f
partial_max	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/lattice.rs	/^    fn partial_max<'a>(&'a self, other: &'a Self) -> Option<&'a Self> {$/;"	P	interface:Lattice
partial_max	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs	/^pub fn partial_max<'a, T: PartialOrd>(a: &'a T, b: &'a T) -> Option<&'a T> {$/;"	f
partial_min	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/lattice.rs	/^    fn partial_min<'a>(&'a self, other: &'a Self) -> Option<&'a Self> {$/;"	P	interface:Lattice
partial_min	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs	/^pub fn partial_min<'a, T: PartialOrd>(a: &'a T, b: &'a T) -> Option<&'a T> {$/;"	f
partial_shuffle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^    fn partial_shuffle<R>($/;"	P	implementation:T
partial_shuffle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^    fn partial_shuffle<R>($/;"	P	interface:SliceRandom
partial_sort2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/lattice.rs	/^    fn partial_sort2<'a>(&'a self, other: &'a Self) -> Option<(&'a Self, &'a Self)> {$/;"	P	interface:Lattice
partial_sort2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs	/^pub fn partial_sort2<'a, T: PartialOrd>(a: &'a T, b: &'a T) -> Option<(&'a T, &'a T)> {$/;"	f
partition	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^pub fn partition<'a, A: 'a, I, F>(iter: I, mut pred: F) -> usize$/;"	f
partition_map	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn partition_map<A, B, F, L, R>(self, mut predicate: F) -> (A, B)$/;"	P	interface:Itertools
pat	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    pat: Vec<u8>,$/;"	m	struct:FreqyPacked
path_to_ident	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga_derive-0.9.2/src/lib.rs	/^fn path_to_ident(p: &Path) -> &Ident {$/;"	f
pats	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_builder.rs	/^    pub pats: Vec<String>,$/;"	m	struct:RegexOptions
pattern	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/lib.rs	/^mod pattern;$/;"	n
pattern	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    pattern: Vec<u8>,$/;"	m	struct:BoyerMooreSearch
pc	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    pc: InstPtr,$/;"	m	struct:SuffixCacheEntry
pdf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/exponential.rs	/^        fn pdf(x: f64) -> f64 {$/;"	f	method:Exp1::sample
pdf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/normal.rs	/^        fn pdf(x: f64) -> f64 {$/;"	f	method:StandardNormal::sample
peek	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/intersperse.rs	/^    peek: Option<I::Item>,$/;"	m	struct:Intersperse
peek	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs	/^    pub fn peek(&mut self) -> Option<&I::Item> {$/;"	P	implementation:MultiPeek
peekable	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs	/^    peekable: Peekable<Fuse<I>>,$/;"	m	struct:WithPosition
peeking_next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs	/^    fn peeking_next<F>(&mut self, accept: F) -> Option<Self::Item>$/;"	f
peeking_next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs	/^    fn peeking_next<F>(&mut self, accept: F) -> Option<Self::Item>$/;"	P	interface:PeekingNext
peeking_next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs	/^    fn peeking_next<F>(&mut self, accept: F) -> Option<Self::Item>$/;"	f
peeking_next_by_clone	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs	/^macro_rules! peeking_next_by_clone {$/;"	M
peeking_take_while	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn peeking_take_while<F>(&mut self, accept: F) -> PeekingTakeWhile<Self, F>$/;"	P	interface:Itertools
peeking_take_while	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^mod peeking_take_while;$/;"	n
peeking_take_while	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs	/^pub fn peeking_take_while<I, F>(iter: &mut I, f: F) -> PeekingTakeWhile<I, F>$/;"	f
perform_fft	/Users/williamcashman/Honours/Program/n_poly/src/fft.rs	/^pub fn perform_fft<F: SupportsFFT>(signal: &mut [F], inv: bool) -> Result<(), &'static str> {$/;"	f
perform_fft_multi	/Users/williamcashman/Honours/Program/n_poly/src/fft-multi-base.rs	/^pub fn perform_fft_multi<T: SupportsFFT>(signal: &mut [T], inv: bool, base: usize) -> Result<(),/;"	f
permutation_sequence	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/mod.rs	/^mod permutation_sequence;$/;"	n
permutations	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn permutations(self, k: usize) -> Permutations<Self>$/;"	P	interface:Itertools
permutations	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^mod permutations;$/;"	n
permutations	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs	/^pub fn permutations<I: Iterator>(iter: I, k: usize) -> Permutations<I> {$/;"	f
permute_columns	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs	/^    pub fn permute_columns<N: Scalar, R2: Dim, C2: Dim, S2>(&self, rhs: &mut Matrix<N, R2, C2, S/;"	f
permute_rows	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs	/^    pub fn permute_rows<N: Scalar, R2: Dim, C2: Dim, S2>(&self, rhs: &mut Matrix<N, R2, C2, S2>)$/;"	f
perp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn perp<R2, C2, SB>(&self, b: &Matrix<N, R2, C2, SB>) -> N$/;"	P	implementation:Matrix
perspective	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod perspective;$/;"	n
phantom	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^    phantom: PhantomData<&'a mut Matrix<N, R, C, S>>,$/;"	m	struct:ColumnIterMut
phantom	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^    phantom: PhantomData<&'a mut Matrix<N, R, C, S>>,$/;"	m	struct:RowIterMut
phantom	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^    phantom: ::core::marker::PhantomData<T>,$/;"	m	struct:DistIter
phase	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    phase: bool, \/\/ false ==> it0, true ==> it1$/;"	m	struct:InterleaveShortest
pi	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/real.rs	/^    fn pi() -> Self;$/;"	P	interface:RealField
pikevm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    pub pikevm: pikevm::Cache,$/;"	m	struct:ProgramCacheInner
pikevm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/lib.rs	/^mod pikevm;$/;"	n
point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod point;$/;"	n
point_alga	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod point_alga;$/;"	n
point_alias	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod point_alias;$/;"	n
point_construction	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod point_construction;$/;"	n
point_conversion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod point_conversion;$/;"	n
point_coordinates	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod point_coordinates;$/;"	n
point_ops	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod point_ops;$/;"	n
point_simba	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod point_simba;$/;"	n
poisson	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^#[cfg(feature = "std")] mod poisson;$/;"	n
polar_decomposition	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn polar_decomposition(&self) -> (N, N, Option<Unit<Vector3<N>>>)$/;"	f
polym	/Users/williamcashman/Honours/Program/n_poly/src/lib.rs	/^pub mod polym;$/;"	n
polyring	/Users/williamcashman/Honours/Program/n_poly/src/algebras/mod.rs	/^pub mod polyring;$/;"	n
polyu	/Users/williamcashman/Honours/Program/n_poly/src/lib.rs	/^pub mod polyu;$/;"	n
pool	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations.rs	/^    pool: LazyBuffer<I>,$/;"	m	struct:Combinations
pool	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations_with_replacement.rs	/^    pool: LazyBuffer<I>,$/;"	m	struct:CombinationsWithReplacement
pop_back	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn pop_back(&mut self) -> T {$/;"	P	implementation:LRUList
pop_back	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^    fn pop_back(self) -> (Self::Shorter, T) {$/;"	f
pop_back	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^    fn pop_back(self) -> (Self::Shorter, T);$/;"	P	interface:Shorten
pop_big	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^            fn pop_big(&mut self) -> u32 {$/;"	P	implementation:WeightedIndex::new::Aliases
pop_front	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^    fn pop_front(self) -> (T, Self::Shorter) {$/;"	f
pop_front	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^    fn pop_front(self) -> (T, Self::Shorter);$/;"	P	interface:Shorten
pop_small	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^            fn pop_small(&mut self) -> u32 {$/;"	P	implementation:WeightedIndex::new::Aliases
pos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/pad_tail.rs	/^    pos: usize,$/;"	m	struct:PadUsing
pos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    pos: usize,$/;"	m	struct:InputAt
pos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    pub fn pos(&self) -> usize {$/;"	P	implementation:InputAt
pos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    pub fn pos(&self, i: usize) -> Option<(usize, usize)> {$/;"	P	implementation:CaptureLocations
pos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_trait.rs	/^    pub fn pos(&self, i: usize) -> Option<(usize, usize)> {$/;"	P	implementation:Locations
pos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    pub fn pos(&self, i: usize) -> Option<(usize, usize)> {$/;"	P	implementation:CaptureLocations
position	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    position: usize,$/;"	m	struct:ArrayBuilder
position	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    position: usize,$/;"	m	struct:ArrayConsumer
position_max	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn position_max(self) -> Option<usize>$/;"	P	interface:Itertools
position_max_by	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn position_max_by<F>(self, mut compare: F) -> Option<usize>$/;"	P	interface:Itertools
position_max_by_key	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn position_max_by_key<K, F>(self, mut key: F) -> Option<usize>$/;"	P	interface:Itertools
position_min	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn position_min(self) -> Option<usize>$/;"	P	interface:Itertools
position_min_by	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn position_min_by<F>(self, mut compare: F) -> Option<usize>$/;"	P	interface:Itertools
position_min_by_key	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn position_min_by_key<K, F>(self, mut key: F) -> Option<usize>$/;"	P	interface:Itertools
position_minmax	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn position_minmax(self) -> MinMaxResult<usize>$/;"	P	interface:Itertools
position_minmax_by	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn position_minmax_by<F>(self, mut compare: F) -> MinMaxResult<usize>$/;"	P	interface:Itertools
position_minmax_by_key	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn position_minmax_by_key<K, F>(self, mut key: F) -> MinMaxResult<usize>$/;"	P	interface:Itertools
positions	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub fn positions<I, F>(iter: I, f: F) -> Positions<I, F>$/;"	f
positions	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn positions<P>(self, predicate: P) -> Positions<Self, P>$/;"	P	interface:Itertools
pow	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^mod pow;$/;"	n
pow	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/pow.rs	/^    fn pow(self, &exp: &'b Complex<T>) -> Self::Output {$/;"	P	implementation:Complex
pow	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/pow.rs	/^    fn pow(self, exp: Complex<T>) -> Self::Output {$/;"	P	implementation:Complex
pow	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/int.rs	/^    fn pow(self, exp: u32) -> Self;$/;"	P	interface:PrimInt
pow	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^pub mod pow;$/;"	n
pow	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/pow.rs	/^    fn pow(self, rhs: RHS) -> Self::Output;$/;"	P	interface:Pow
pow	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/pow.rs	/^pub fn pow<T: Clone + One + Mul<T, Output = T>>(mut base: T, mut exp: usize) -> T {$/;"	f
pow_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/pow.rs	/^macro_rules! pow_impl {$/;"	M
pow_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/pow.rs	/^macro_rules! pow_impl {$/;"	M
pow_test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^fn pow_test() {$/;"	f
powc	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn powc(self, exp: Self) -> Self {$/;"	P	implementation:Complex
powc	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn powc(self, n: Self) -> Self;$/;"	P	interface:ComplexField
powc	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub fn powc(&self, exp: Self) -> Self {$/;"	P	implementation:Complex
powf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn powf(self, exp: Self::RealField) -> Self {$/;"	P	implementation:Complex
powf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn powf(self, n: Self::RealField) -> Self;$/;"	P	interface:ComplexField
powf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/id.rs	/^    fn powf(&self, _: E::RealField) -> Option<Self> {$/;"	P	implementation:Id
powf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn powf(&self, n: E::RealField) -> Option<Self> {$/;"	P	interface:Scaling
powf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn powf(&self, n: E::RealField) -> Option<Self> {$/;"	P	interface:Translation
powf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn powf(&self, n: E::RealField) -> Option<Self> {$/;"	f
powf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn powf(&self, n: E::RealField) -> Option<Self>;$/;"	P	interface:Rotation
powf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn powf(&self, n: N) -> Self {$/;"	f
powf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn powf(&self, n: N) -> Self$/;"	f
powf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    fn powf(&self, n: N) -> Option<Self> {$/;"	P	implementation:UnitQuaternion
powf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alga.rs	/^    fn powf(&self, _: N) -> Option<Self> {$/;"	f
powf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^    pub fn powf(&self, n: N) -> Self {$/;"	P	implementation:Rotation2
powf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^    pub fn powf(&self, n: N) -> Self$/;"	f
powf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alga.rs	/^    fn powf(&self, n: N) -> Option<Self> {$/;"	f
powf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs	/^    pub fn powf(&self, n: N) -> Self {$/;"	f
powf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_alga.rs	/^    fn powf(&self, n: N) -> Option<Self> {$/;"	f
powf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub fn powf(&self, exp: T) -> Self {$/;"	P	implementation:Complex
powf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn powf(self, n: Self) -> Self {$/;"	P	implementation:f32
powf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn powf(self, n: Self) -> Self {$/;"	P	implementation:f64
powf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn powf(self, n: Self) -> Self;$/;"	P	interface:Float
powf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn powf(self, n: Self) -> Self;$/;"	P	interface:Real
powf_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/pow.rs	/^macro_rules! powf_impl {$/;"	M
powi	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn powi(self, n: i32) -> Self {$/;"	P	implementation:Complex
powi	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn powi(self, n: i32) -> Self;$/;"	P	interface:ComplexField
powi	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub fn powi(&self, exp: i32) -> Self {$/;"	P	implementation:Complex
powi	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn powi(mut self, mut exp: i32) -> Self {$/;"	P	interface:FloatCore
powi	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn powi(self, n: i32) -> Self;$/;"	P	interface:Float
powi	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn powi(self, n: i32) -> Self;$/;"	P	interface:Real
powi	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn powi(self, _: NInt<U>) -> Self::Output {$/;"	P	implementation:P1
powi	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn powi(self, _: NInt<U>) -> Self::Output {$/;"	P	implementation:Z0
powi	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn powi(self, _: NInt<UInt<U, B0>>) -> Self::Output {$/;"	P	implementation:N1
powi	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn powi(self, _: NInt<UInt<U, B1>>) -> Self::Output {$/;"	P	implementation:N1
powi	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn powi(self, _: PInt<U>) -> Self::Output {$/;"	P	implementation:Z0
powi	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn powi(self, _: PInt<UInt<Ur, B0>>) -> Self::Output {$/;"	f
powi	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn powi(self, _: PInt<UInt<Ur, B1>>) -> Self::Output {$/;"	f
powi	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn powi(self, _: PInt<Ur>) -> Self::Output {$/;"	f
powi	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn powi(self, _: Z0) -> Self::Output {$/;"	P	implementation:NInt
powi	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn powi(self, _: Z0) -> Self::Output {$/;"	P	implementation:PInt
powi	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn powi(self, _: Z0) -> Self::Output {$/;"	P	implementation:Z0
powi	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/type_operators.rs	/^    fn powi(self, exp: Exp) -> Self::Output;$/;"	P	interface:Pow
powi	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn powi(self, n: N) -> Self::Output {$/;"	f
powu	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub fn powu(&self, exp: u32) -> Self {$/;"	P	implementation:Complex
precision	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/humantime/extern_impl.rs	/^    precision: TimestampPrecision,$/;"	m	struct:Timestamp
pred	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    pub fn pred(&self) -> Date<Tz> {$/;"	P	implementation:Date
pred	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    pub fn pred(&self) -> Weekday {$/;"	P	implementation:Weekday
pred	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    pub fn pred(&self) -> NaiveDate {$/;"	P	implementation:NaiveDate
pred	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    pub fn pred(&self) -> Of {$/;"	P	implementation:Of
pred_opt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    pub fn pred_opt(&self) -> Option<Date<Tz>> {$/;"	P	implementation:Date
pred_opt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    pub fn pred_opt(&self) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
prefix_at	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn prefix_at(&self, text: &[u8], at: usize) -> Option<usize> {$/;"	P	implementation:Fsm
prefix_at	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    fn prefix_at($/;"	P	implementation:ByteInput
prefix_at	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    fn prefix_at($/;"	P	implementation:CharInput
prefix_at	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    fn prefix_at($/;"	P	implementation:T
prefix_at	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    fn prefix_at($/;"	P	interface:Input
prefixes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    prefixes: Literals,$/;"	m	struct:Parsed
prefixes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    fn prefixes(lits: &Literals) -> Self {$/;"	P	implementation:Matcher
prefixes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    fn prefixes(lits: &Literals) -> SingleByteSet {$/;"	P	implementation:SingleByteSet
prefixes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    pub fn prefixes(lits: Literals) -> Self {$/;"	P	implementation:LiteralSearcher
prefixes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/mod.rs	/^        pub fn prefixes(_: Literals) -> Self {$/;"	P	implementation:imp::LiteralSearcher
prefixes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    pub prefixes: LiteralSearcher,$/;"	m	struct:Program
prelude	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^pub mod prelude {$/;"	n
prelude	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^pub mod prelude;$/;"	n
prepend	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^    fn prepend(self, first: T) -> Self::Longer {$/;"	f
prepend	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^    fn prepend(self, first: T) -> Self::Longer;$/;"	P	interface:Lengthen
prepend_nonuniform_scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs	/^    pub fn prepend_nonuniform_scaling<SB>($/;"	P	implementation:SquareMatrix
prepend_nonuniform_scaling_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs	/^    pub fn prepend_nonuniform_scaling_mut<SB>($/;"	P	implementation:SquareMatrix
prepend_rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/id.rs	/^    fn prepend_rotation(&self, _: &Self::Rotation) -> Self {$/;"	P	implementation:Id
prepend_rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn prepend_rotation(&self, _: &Self::Rotation) -> Self {$/;"	f
prepend_rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn prepend_rotation(&self, r: &Self::Rotation) -> Self;$/;"	P	interface:AffineTransformation
prepend_rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alga.rs	/^    fn prepend_rotation(&self, r: &Self::Rotation) -> Self {$/;"	f
prepend_rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    fn prepend_rotation(&self, r: &Self::Rotation) -> Self {$/;"	P	implementation:UnitQuaternion
prepend_rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alga.rs	/^    fn prepend_rotation(&self, r: &Self::Rotation) -> Self {$/;"	f
prepend_rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alga.rs	/^    fn prepend_rotation(&self, r: &Self::Rotation) -> Self {$/;"	f
prepend_rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alga.rs	/^    fn prepend_rotation(&self, _: &Self::Rotation) -> Self {$/;"	f
prepend_rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_alga.rs	/^    fn prepend_rotation(&self, r: &Self::Rotation) -> Self {$/;"	f
prepend_scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/id.rs	/^    fn prepend_scaling(&self, _: &Self::NonUniformScaling) -> Self {$/;"	P	implementation:Id
prepend_scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn prepend_scaling(&self, s: &Self::NonUniformScaling) -> Self {$/;"	f
prepend_scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn prepend_scaling(&self, s: &Self::NonUniformScaling) -> Self;$/;"	P	interface:AffineTransformation
prepend_scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs	/^    pub fn prepend_scaling(&self, scaling: N) -> MatrixN<N, D>$/;"	P	implementation:SquareMatrix
prepend_scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alga.rs	/^    fn prepend_scaling(&self, _: &Self::NonUniformScaling) -> Self {$/;"	f
prepend_scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    fn prepend_scaling(&self, _: &Self::NonUniformScaling) -> Self {$/;"	P	implementation:UnitQuaternion
prepend_scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alga.rs	/^    fn prepend_scaling(&self, _: &Self::NonUniformScaling) -> Self {$/;"	f
prepend_scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^    pub fn prepend_scaling(&self, scaling: N) -> Self {$/;"	f
prepend_scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alga.rs	/^    fn prepend_scaling(&self, s: &Self::NonUniformScaling) -> Self {$/;"	f
prepend_scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alga.rs	/^    fn prepend_scaling(&self, _: &Self::NonUniformScaling) -> Self {$/;"	f
prepend_scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_alga.rs	/^    fn prepend_scaling(&self, _: &Self::NonUniformScaling) -> Self {$/;"	f
prepend_scaling_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs	/^    pub fn prepend_scaling_mut(&mut self, scaling: N)$/;"	P	implementation:SquareMatrix
prepend_scaling_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^    pub fn prepend_scaling_mut(&mut self, scaling: N) {$/;"	f
prepend_translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/id.rs	/^    fn prepend_translation(&self, _: &Self::Translation) -> Self {$/;"	P	implementation:Id
prepend_translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn prepend_translation(&self, _: &Self::Translation) -> Self {$/;"	f
prepend_translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn prepend_translation(&self, t: &Self::Translation) -> Self;$/;"	P	interface:AffineTransformation
prepend_translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs	/^    pub fn prepend_translation<SB>($/;"	P	implementation:SquareMatrix
prepend_translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alga.rs	/^    fn prepend_translation(&self, t: &Self::Translation) -> Self {$/;"	f
prepend_translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    fn prepend_translation(&self, _: &Self::Translation) -> Self {$/;"	P	implementation:UnitQuaternion
prepend_translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alga.rs	/^    fn prepend_translation(&self, _: &Self::Translation) -> Self {$/;"	f
prepend_translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alga.rs	/^    fn prepend_translation(&self, t: &Self::Translation) -> Self {$/;"	f
prepend_translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alga.rs	/^    fn prepend_translation(&self, t: &Self::Translation) -> Self {$/;"	f
prepend_translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_alga.rs	/^    fn prepend_translation(&self, _: &Self::Translation) -> Self {$/;"	f
prepend_translation_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs	/^    pub fn prepend_translation_mut<SB>(&mut self, shift: &Vector<N, DimNameDiff<D, U1>, SB>)$/;"	P	implementation:SquareMatrix
prev	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    prev: usize,$/;"	m	struct:ListEntry
previous_char	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    fn previous_char(&self, at: InputAt) -> Char {$/;"	P	implementation:ByteInput
previous_char	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    fn previous_char(&self, at: InputAt) -> Char {$/;"	P	implementation:CharInput
previous_char	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    fn previous_char(&self, at: InputAt) -> Char {$/;"	P	implementation:T
previous_char	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    fn previous_char(&self, at: InputAt) -> Char;$/;"	P	interface:Input
prim_int_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/int.rs	/^macro_rules! prim_int_impl {$/;"	M
print	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    pub(crate) fn print(&self, writer: &Writer) -> io::Result<()> {$/;"	P	implementation:Formatter
print	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^    pub(in crate::fmt) fn print(&self, buf: &Buffer) -> io::Result<()> {$/;"	P	implementation:Writer
print	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    pub(in crate::fmt::writer) fn print(&self, buf: &Buffer) -> io::Result<()> {$/;"	P	implementation:BufferWriter
print	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/shim_impl.rs	/^    pub(in crate::fmt::writer) fn print(&self, buf: &Buffer) -> io::Result<()> {$/;"	P	implementation:BufferWriter
private	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/lib.rs	/^pub mod private;$/;"	n
private_and	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn private_and(self, Rhs) -> Self::Output;$/;"	P	interface:PrivateAnd
private_and	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_and(self, _: U) -> Self::Output {$/;"	P	implementation:UTerm
private_and	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_and(self, _: UTerm) -> Self::Output {$/;"	P	implementation:UInt
private_and	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_and(self, rhs: UInt<Ur, B0>) -> Self::Output {$/;"	f
private_and	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_and(self, rhs: UInt<Ur, B1>) -> Self::Output {$/;"	f
private_cmp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn private_cmp(&self, &Rhs, SoFar) -> Self::Output;$/;"	P	interface:PrivateCmp
private_cmp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_cmp(&self, _: &UInt<U, B>, _: SoFar) -> Self::Output {$/;"	P	implementation:UTerm
private_cmp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_cmp(&self, _: &UTerm, _: SoFar) -> Self::Output {$/;"	P	implementation:UInt
private_cmp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_cmp(&self, _: &UTerm, so_far: SoFar) -> Self::Output {$/;"	P	implementation:UTerm
private_cmp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_cmp(&self, rhs: &UInt<Ur, B0>, _: SoFar) -> Self::Output {$/;"	f
private_cmp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_cmp(&self, rhs: &UInt<Ur, B0>, so_far: SoFar) -> Self::Output {$/;"	f
private_cmp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_cmp(&self, rhs: &UInt<Ur, B1>, _: SoFar) -> Self::Output {$/;"	f
private_cmp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_cmp(&self, rhs: &UInt<Ur, B1>, so_far: SoFar) -> Self::Output {$/;"	f
private_div_if_quotient	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn private_div_if_quotient(self, N, D, Q, R, I, RcmpD) -> Self::Quotient;$/;"	P	interface:PrivateDivIf
private_div_if_quotient	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_div_if_quotient($/;"	f
private_div_if_quotient	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_div_if_quotient(self, _: N, _: D, q: Q, _: R, _: U0, _: Less) -> Self::Quotient {$/;"	P	implementation:PrivateDivIf
private_div_if_quotient	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_div_if_quotient(self, _: N, _: D, q: Q, _: R, i: U0, _: Equal) -> Self::Quotient /;"	f
private_div_if_quotient	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_div_if_quotient(self, _: N, _: D, q: Q, _: R, i: U0, _: Greater) -> Self::Quotien/;"	f
private_div_if_remainder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn private_div_if_remainder(self, N, D, Q, R, I, RcmpD) -> Self::Remainder;$/;"	P	interface:PrivateDivIf
private_div_if_remainder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_div_if_remainder($/;"	f
private_div_if_remainder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_div_if_remainder(self, _: N, _: D, _: Q, _: R, i: U0, _: Equal) -> Self::Remainde/;"	f
private_div_if_remainder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_div_if_remainder(self, _: N, _: D, _: Q, r: R, _: U0, _: Less) -> Self::Remainder/;"	P	implementation:PrivateDivIf
private_div_int	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn private_div_int(self, C, Divisor) -> Self::Output;$/;"	P	interface:PrivateDivInt
private_div_quotient	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn private_div_quotient(self, N, D, Q, R, I) -> Self::Quotient;$/;"	P	interface:PrivateDiv
private_div_quotient	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_div_quotient(self, n: N, d: D, q: Q, _: U0, i: I) -> Self::Quotient$/;"	f
private_div_quotient	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_div_quotient(self, n: N, d: D, q: Q, r: UInt<Ur, Br>, i: I) -> Self::Quotient {$/;"	f
private_div_remainder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn private_div_remainder(self, N, D, Q, R, I) -> Self::Remainder;$/;"	P	interface:PrivateDiv
private_div_remainder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_div_remainder(self, n: N, d: D, q: Q, _: U0, i: I) -> Self::Remainder {$/;"	f
private_div_remainder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_div_remainder(self, n: N, d: D, q: Q, r: UInt<Ur, Br>, i: I) -> Self::Remainder {$/;"	f
private_integer_add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn private_integer_add(self, _: Equal, _: N) -> Self::Output {$/;"	P	implementation:P
private_integer_add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn private_integer_add(self, _: Greater, n: N) -> Self::Output {$/;"	f
private_integer_add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn private_integer_add(self, _: Less, n: N) -> Self::Output {$/;"	f
private_integer_add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn private_integer_add(self, C, N) -> Self::Output;$/;"	P	interface:PrivateIntegerAdd
private_invert	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn private_invert(self, Rhs) -> Self::Output;$/;"	P	interface:PrivateInvert
private_invert	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn private_invert(self, rhs: IU) -> Self::Output {$/;"	P	implementation:UTerm
private_invert	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn private_invert(self, rhs: IU) -> Self::Output {$/;"	f
private_invert	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn private_invert(self, rhs: U) -> Self::Output {$/;"	P	implementation:InvertedUTerm
private_invert	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn private_invert(self, rhs: U) -> Self::Output {$/;"	f
private_max	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn private_max(self, Rhs) -> Self::Output;$/;"	P	interface:PrivateMax
private_max	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_max(self, _: Ur) -> Self::Output {$/;"	f
private_max	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_max(self, rhs: Ur) -> Self::Output {$/;"	f
private_min	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn private_min(self, Rhs) -> Self::Output;$/;"	P	interface:PrivateMin
private_min	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_min(self, _: Ur) -> Self::Output {$/;"	f
private_min	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_min(self, rhs: Ur) -> Self::Output {$/;"	f
private_pow	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn private_pow(self, Y, N) -> Self::Output;$/;"	P	interface:PrivatePow
private_pow	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_pow(self, y: Y, _: U0) -> Self::Output {$/;"	P	implementation:X
private_pow	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_pow(self, y: Y, _: U1) -> Self::Output {$/;"	f
private_pow	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_pow(self, y: Y, n: UInt<UInt<U, B>, B0>) -> Self::Output {$/;"	f
private_pow	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_pow(self, y: Y, n: UInt<UInt<U, B>, B1>) -> Self::Output {$/;"	f
private_rem	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn private_rem(self, URem, Divisor) -> Self::Output;$/;"	P	interface:PrivateRem
private_set_bit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn private_set_bit(self, I, B) -> Self::Output;$/;"	P	interface:PrivateSetBit
private_set_bit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_set_bit(self, _: I, _: B0) -> Self::Output {$/;"	P	implementation:UTerm
private_set_bit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_set_bit(self, _: U0, b: B) -> Self::Output {$/;"	P	implementation:UInt
private_set_bit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_set_bit(self, i: I, _: B1) -> Self::Output {$/;"	f
private_set_bit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_set_bit(self, i: UInt<Ui, Bi>, b: B) -> Self::Output {$/;"	f
private_sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn private_sub(self, Rhs) -> Self::Output;$/;"	P	interface:PrivateSub
private_sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_sub(self, _: UTerm) -> Self::Output {$/;"	P	implementation:U
private_sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_sub(self, rhs: UInt<Ur, B0>) -> Self::Output {$/;"	f
private_sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_sub(self, rhs: UInt<Ur, B1>) -> Self::Output {$/;"	f
private_xor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn private_xor(self, Rhs) -> Self::Output;$/;"	P	interface:PrivateXor
private_xor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_xor(self, _: UTerm) -> Self::Output {$/;"	P	implementation:UInt
private_xor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_xor(self, rhs: U) -> Self::Output {$/;"	P	implementation:UTerm
private_xor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_xor(self, rhs: UInt<Ur, B0>) -> Self::Output {$/;"	f
private_xor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn private_xor(self, rhs: UInt<Ur, B1>) -> Self::Output {$/;"	f
process_results	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs	/^pub fn process_results<I, F, T, E, R>(iterable: I, processor: F) -> Result<R, E>$/;"	f
process_results_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^mod process_results_impl;$/;"	n
product	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^    fn product<I: Iterator<Item = &'a MatrixN<N, D>>>(iter: I) -> MatrixN<N, D> {$/;"	f
product	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^    fn product<I: Iterator<Item = MatrixN<N, D>>>(iter: I) -> MatrixN<N, D> {$/;"	f
product	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn product<I>(iter: I) -> Self$/;"	P	implementation:Complex
product1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn product1<P>(mut self) -> Option<P>$/;"	P	interface:Itertools
prog	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/backtrack.rs	/^    prog: &'r Program,$/;"	m	struct:Bounded
prog	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    prog: &'a Program,$/;"	m	struct:Fsm
prog	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/lib.rs	/^mod prog;$/;"	n
prog	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/pikevm.rs	/^    prog: &'r Program,$/;"	m	struct:Fsm
project	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn project(&self, other: &Self) -> Option<Self>$/;"	f
project_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^    pub fn project_point(&self, p: &Point3<N>) -> Point3<N> {$/;"	P	implementation:Orthographic3
project_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^    pub fn project_point(&self, p: &Point3<N>) -> Point3<N> {$/;"	P	implementation:Perspective3
project_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^    pub fn project_vector<SB>(&self, p: &Vector<N, U3, SB>) -> Vector3<N>$/;"	P	implementation:Orthographic3
project_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^    pub fn project_vector<SB>(&self, p: &Vector<N, U3, SB>) -> Vector3<N>$/;"	P	implementation:Perspective3
prop_decode_last_matches_std	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/utf8.rs	/^    fn prop_decode_last_matches_std() {$/;"	f	module:tests
prop_decode_matches_std	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/utf8.rs	/^    fn prop_decode_matches_std() {$/;"	f	module:tests
prop_encode_matches_std	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/utf8.rs	/^    fn prop_encode_matches_std() {$/;"	f	module:tests
prop_inv_is_latin_square	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/one_operator.rs	/^    fn prop_inv_is_latin_square(args: (Self, Self)) -> bool$/;"	P	interface:AbstractQuasigroup
prop_inv_is_latin_square_approx	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/one_operator.rs	/^    fn prop_inv_is_latin_square_approx(args: (Self, Self)) -> bool$/;"	P	interface:AbstractQuasigroup
prop_is_associative	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/one_operator.rs	/^    fn prop_is_associative(args: (Self, Self, Self)) -> bool$/;"	P	interface:AbstractSemigroup
prop_is_associative_approx	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/one_operator.rs	/^    fn prop_is_associative_approx(args: (Self, Self, Self)) -> bool$/;"	P	interface:AbstractSemigroup
prop_is_commutative	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/one_operator.rs	/^    fn prop_is_commutative(args: (Self, Self)) -> bool$/;"	P	interface:AbstractGroupAbelian
prop_is_commutative_approx	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/one_operator.rs	/^    fn prop_is_commutative_approx(args: (Self, Self)) -> bool$/;"	P	interface:AbstractGroupAbelian
prop_mul_and_add_are_distributive	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/two_operators.rs	/^    fn prop_mul_and_add_are_distributive(args: (Self, Self, Self)) -> bool$/;"	P	interface:AbstractRing
prop_mul_and_add_are_distributive_approx	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/two_operators.rs	/^    fn prop_mul_and_add_are_distributive_approx(args: (Self, Self, Self)) -> bool$/;"	P	interface:AbstractRing
prop_mul_is_commutative	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/two_operators.rs	/^    fn prop_mul_is_commutative(args: (Self, Self)) -> bool$/;"	P	interface:AbstractRingCommutative
prop_mul_is_commutative_approx	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/two_operators.rs	/^    fn prop_mul_is_commutative_approx(args: (Self, Self)) -> bool$/;"	P	interface:AbstractRingCommutative
prop_operating_identity_element_is_noop	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/one_operator.rs	/^    fn prop_operating_identity_element_is_noop(args: (Self,)) -> bool$/;"	P	interface:AbstractMonoid
prop_operating_identity_element_is_noop_approx	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/one_operator.rs	/^    fn prop_operating_identity_element_is_noop_approx(args: (Self,)) -> bool$/;"	P	interface:AbstractMonoid
prop_read_write_i32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn prop_read_write_i32() {$/;"	f	module:tests
prop_read_write_u32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn prop_read_write_u32() {$/;"	f	module:tests
prop_roundtrip	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/utf8.rs	/^    fn prop_roundtrip() {$/;"	f	module:tests
prop_roundtrip_last	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/utf8.rs	/^    fn prop_roundtrip_last() {$/;"	f	module:tests
prop_state_encode_decode	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn prop_state_encode_decode() {$/;"	f	module:tests
properties	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs	/^mod properties;$/;"	n
pseudo_inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs	/^    pub fn pseudo_inverse(mut self, eps: N::RealField) -> Result<MatrixMN<N, C, R>, &'static str/;"	f
pseudo_inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs	/^    pub fn pseudo_inverse(self, eps: N::RealField) -> Result<MatrixMN<N, C, R>, &'static str>$/;"	f
ptr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^    fn ptr(&self) -> *const N {$/;"	f
ptr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs	/^    fn ptr(&self) -> *const N;$/;"	P	interface:Storage
ptr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^    fn ptr(&self) -> *const N {$/;"	f
ptr_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^    fn ptr_mut(&mut self) -> *mut N {$/;"	f
ptr_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^    fn ptr_mut(&mut self) -> *mut N {$/;"	P	implementation:SliceStorageMut
ptr_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs	/^    fn ptr_mut(&mut self) -> *mut N;$/;"	P	interface:StorageMut
ptr_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^    fn ptr_mut(&mut self) -> *mut N {$/;"	f
pure	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn pure(&self) -> Self {$/;"	f
push	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn push(&self, element: N) -> VectorN<N, DimSum<D, U1>>$/;"	P	implementation:Vector
push_big	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^            fn push_big(&mut self, idx: u32) {$/;"	P	implementation:WeightedIndex::new::Aliases
push_compiled	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn push_compiled(&mut self, inst: Inst) {$/;"	P	implementation:Compiler
push_front	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn push_front(&mut self, value: Option<T>) -> usize {$/;"	P	implementation:LRUList
push_hole	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn push_hole(&mut self, inst: InstHole) -> Hole {$/;"	P	implementation:Compiler
push_inst_ptr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^fn push_inst_ptr(data: &mut Vec<u8>, prev: &mut InstPtr, ip: InstPtr) {$/;"	f
push_next_group	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    fn push_next_group(&mut self, group: Vec<I::Item>) {$/;"	f
push_small	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^            fn push_small(&mut self, idx: u32) {$/;"	P	implementation:WeightedIndex::new::Aliases
push_split_hole	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn push_split_hole(&mut self) -> Hole {$/;"	P	implementation:Compiler
put	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/cache.rs	/^        fn put(&self, value: T) {$/;"	P	implementation:imp::Cached
put_back	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    pub fn put_back(&mut self, x: I::Item) {$/;"	f
put_back	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub fn put_back<I>(iterable: I) -> PutBack<I::IntoIter>$/;"	f
put_back	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs	/^    pub fn put_back(&mut self, x: I::Item) {$/;"	P	implementation:PutBackN
put_back_n	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs	/^pub fn put_back_n<I>(iterable: I) -> PutBackN<I::IntoIter>$/;"	f
put_back_n_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^mod put_back_n_impl;$/;"	n
q	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs	/^    pub fn q(&self) -> &PermutationSequence<DimMinimum<R, C>> {$/;"	f
q	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs	/^    q: PermutationSequence<DimMinimum<R, C>>,$/;"	m	struct:FullPivLU
q	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs	/^    pub fn q(&self) -> MatrixN<N, D> {$/;"	f
q	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs	/^    pub fn q(&self) -> MatrixMN<N, R, DimMinimum<R, C>>$/;"	f
q	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs	/^    q: MatrixN<N, D>,$/;"	m	struct:Schur
q	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs	/^    pub fn q(&self) -> MatrixN<N, D> {$/;"	f
q_tr_mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs	/^    pub fn q_tr_mul<R2: Dim, C2: Dim, S2>(&self, rhs: &mut Matrix<N, R2, C2, S2>)$/;"	f
qcur	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    qcur: SparseSet,$/;"	m	struct:Cache
qnext	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    qnext: SparseSet,$/;"	m	struct:Cache
qr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/mod.rs	/^mod qr;$/;"	n
qr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs	/^    pub fn qr(self) -> QR<N, R, C> {$/;"	f
qr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs	/^    qr: MatrixMN<N, R, C>,$/;"	m	struct:QR
qr_internal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs	/^    pub fn qr_internal(&self) -> &MatrixMN<N, R, C> {$/;"	f
quadform	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^    pub fn quadform<D2, S2, R3, C3, S3>($/;"	f
quadform_tr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^    pub fn quadform_tr<R3, C3, S3, D4, S4>($/;"	f
quadform_tr_with_workspace	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^    pub fn quadform_tr_with_workspace<D2, S2, R3, C3, S3, D4, S4>($/;"	f
quadform_with_workspace	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^    pub fn quadform_with_workspace<D2, S2, D3, S3, R4, C4, S4>($/;"	f
quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod quaternion;$/;"	n
quaternion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn quaternion(&self) -> &Quaternion<N> {$/;"	f
quaternion_alga	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod quaternion_alga;$/;"	n
quaternion_construction	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod quaternion_construction;$/;"	n
quaternion_conversion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod quaternion_conversion;$/;"	n
quaternion_coordinates	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod quaternion_coordinates;$/;"	n
quaternion_op_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_ops.rs	/^macro_rules! quaternion_op_impl($/;"	M
quaternion_ops	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod quaternion_ops;$/;"	n
quaternion_simba	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod quaternion_simba;$/;"	n
quit_after_match	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    quit_after_match: bool,$/;"	m	struct:Fsm
r	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs	/^    pub fn r(&self) -> MatrixMN<N, DimMinimum<R, C>, C>$/;"	f
random	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^pub fn random<T>() -> T$/;"	f
random_orthogonal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/debug/mod.rs	/^mod random_orthogonal;$/;"	n
random_sdp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/debug/mod.rs	/^mod random_sdp;$/;"	n
random_unit_quats_are_unit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^    fn random_unit_quats_are_unit() {$/;"	f	module:tests
range	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^        fn range<T: SampleUniform>(low: T, high: T) {$/;"	f	function:tests::test_float_assertions
range	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^    range: X,$/;"	m	struct:UniformInt
range	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    pub fn range(&self) -> Range<usize> {$/;"	P	implementation:Match
range	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    pub fn range(&self) -> Range<usize> {$/;"	P	implementation:Match
ranges	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    ranges: &'b [hir::ClassUnicodeRange],$/;"	m	struct:CompileClass
ranges	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    pub ranges: Vec<(char, char)>,$/;"	m	struct:InstRanges
rank	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs	/^    pub fn rank(&self, eps: N::RealField) -> usize {$/;"	f
rank_one_update	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs	/^    pub fn rank_one_update<R2: Dim, S2>(&mut self, x: &Vector<N, R2, S2>, sigma: N::RealField)$/;"	f
rare1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    rare1: u8,$/;"	m	struct:FreqyPacked
rare1i	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    rare1i: usize,$/;"	m	struct:FreqyPacked
rare2	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    rare2: u8,$/;"	m	struct:FreqyPacked
rare2i	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    rare2i: usize,$/;"	m	struct:FreqyPacked
rational	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-0.2.1/src/lib.rs	/^pub mod rational {$/;"	n
rcbuffer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tee.rs	/^    rcbuffer: Rc<RefCell<TeeBuffer<I::Item, I>>>,$/;"	m	struct:Tee
rciter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs	/^    pub rciter: Rc<RefCell<I>>,$/;"	m	struct:RcIter
rciter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs	/^pub fn rciter<I>(iterable: I) -> RcIter<I::IntoIter>$/;"	f
rciter_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^mod rciter_impl;$/;"	n
re	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/crand.rs	/^    re: Re,$/;"	m	struct:ComplexDistribution
re	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub re: T,$/;"	m	struct:Complex
re	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_trait.rs	/^    re: R,$/;"	m	struct:Matches
re_builder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/lib.rs	/^mod re_builder;$/;"	n
re_bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/lib.rs	/^mod re_bytes;$/;"	n
re_set	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/lib.rs	/^mod re_set;$/;"	n
re_trait	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/lib.rs	/^mod re_trait;$/;"	n
re_unicode	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/lib.rs	/^mod re_unicode;$/;"	n
reach	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_cholesky.rs	/^    fn reach<S: CsStorage<N, D, D>>($/;"	f
read	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/mod.rs	/^#[cfg(feature = "std")] mod read;$/;"	n
read_captures_at	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    pub fn read_captures_at<'t>($/;"	P	implementation:Regex
read_captures_at	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    pub fn read_captures_at<'t>($/;"	P	implementation:Regex
read_vari32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^fn read_vari32(data: &[u8]) -> (i32, usize) {$/;"	f
read_varu32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^fn read_varu32(data: &[u8]) -> (u32, usize) {$/;"	f
reader	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/read.rs	/^    reader: R,$/;"	m	struct:ReadRng
real	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn real(self) -> Self::RealField {$/;"	P	implementation:Complex
real	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn real(self) -> Self::RealField;$/;"	P	interface:ComplexField
real	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/mod.rs	/^mod real;$/;"	n
real	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^pub mod real;$/;"	n
real	/Users/williamcashman/Honours/Program/n_poly/src/algebras/mod.rs	/^pub mod real;$/;"	n
real_arithmetic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    mod real_arithmetic {$/;"	n	module:test
real_arithmetic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^macro_rules! real_arithmetic {$/;"	M
reallocate_copy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs	/^    unsafe fn reallocate_copy($/;"	P	interface:Reallocator
reallocate_copy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs	/^    unsafe fn reallocate_copy($/;"	P	implementation:DefaultAllocator
reallocate_copy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs	/^    unsafe fn reallocate_copy($/;"	f
recip	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn recip(self) -> Self {$/;"	P	implementation:Complex
recip	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn recip(self) -> Self;$/;"	P	interface:ComplexField
recip	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn recip(self) -> Self {$/;"	P	interface:FloatCore
recip	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn recip(self) -> Self;$/;"	P	interface:Float
recip	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn recip(self) -> Self;$/;"	P	interface:Real
recompose	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs	/^    pub fn recompose(self) -> Result<MatrixMN<N, R, C>, &'static str> {$/;"	f
recompose	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs	/^    pub fn recompose(&self) -> MatrixN<N, D> {$/;"	f
recompose	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs	/^    pub fn recompose(mut self) -> MatrixN<N, D> {$/;"	f
recons	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/strftime.rs	/^                macro_rules! recons {$/;"	M	method:StrftimeItems::next
recons	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/strftime.rs	/^    recons: &'static [Item<'static>],$/;"	m	struct:StrftimeItems
record	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    record: Record<'a>,$/;"	m	struct:RecordBuilder
red	/Users/williamcashman/Honours/Program/n_poly/src/algebras/finite_field.rs	/^    pub fn red(q: i64) -> i64 {$/;"	P	implementation:FF
reduce	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs	/^    pub fn reduce<F>(self, f: F) -> T$/;"	P	implementation:EitherOrBoth
reduce	/Users/williamcashman/Honours/Program/n_poly/src/ideals/mod.rs	/^    fn reduce(&self, g: &Ideal<'a, P>) -> Option<Self> {$/;"	P	implementation:Poly
reflect	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/reflection.rs	/^    pub fn reflect<R2: Dim, C2: Dim, S2>(&self, rhs: &mut Matrix<N, R2, C2, S2>)$/;"	P	implementation:Reflection
reflect_rows	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/reflection.rs	/^    pub fn reflect_rows<R2: Dim, C2: Dim, S2, S3>($/;"	P	implementation:Reflection
reflect_rows_with_sign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/reflection.rs	/^    pub fn reflect_rows_with_sign<R2: Dim, C2: Dim, S2, S3>($/;"	P	implementation:Reflection
reflect_with_sign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/reflection.rs	/^    pub fn reflect_with_sign<R2: Dim, C2: Dim, S2>(&self, rhs: &mut Matrix<N, R2, C2, S2>, sign:/;"	P	implementation:Reflection
reflection	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod reflection;$/;"	n
reflection_axis_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/householder.rs	/^pub fn reflection_axis_mut<N: ComplexField, D: Dim, S: StorageMut<N, D>>($/;"	f
regex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_trait.rs	/^    pub fn regex(&self) -> &R {$/;"	f
regex_strings	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    pub fn regex_strings(&self) -> &[String] {$/;"	P	implementation:Exec
register_fork_handler	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/reseeding.rs	/^    pub fn register_fork_handler() {$/;"	f	module:fork
register_fork_handler	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/reseeding.rs	/^    pub fn register_fork_handler() {}$/;"	f	module:fork
reject	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/helper.rs	/^pub fn reject<G: Gen, F: FnMut(&T) -> bool, T: Arbitrary>(g: &mut G, f: F) -> T {$/;"	f
reject	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn reject(&self, other: &Self) -> Option<Self>$/;"	f
reject_invalid	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/utf8.rs	/^    fn reject_invalid() {$/;"	f	module:tests
reject_invalid_last	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/utf8.rs	/^    fn reject_invalid_last() {$/;"	f	module:tests
reject_rand	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/helper.rs	/^pub fn reject_rand<G: Rng + ?Sized, F: FnMut(&T) -> bool, T>(g: &mut G, f: F) -> T$/;"	f
relative_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^    fn relative_eq(&self, _: &Self, _: Self::Epsilon, _: Self::Epsilon) -> bool {$/;"	P	implementation:Id
relative_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/wrapper.rs	/^    fn relative_eq($/;"	P	implementation:Wrapper
relative_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    fn relative_eq($/;"	f
relative_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn relative_eq<R2, C2, SB>($/;"	P	implementation:Matrix
relative_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^    fn relative_eq($/;"	f
relative_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^    fn relative_eq($/;"	f
relative_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    fn relative_eq($/;"	P	implementation:Quaternion
relative_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    fn relative_eq($/;"	P	implementation:UnitQuaternion
relative_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^    fn relative_eq($/;"	f
relative_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^    fn relative_eq($/;"	f
relative_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^    fn relative_eq($/;"	f
relative_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs	/^    fn relative_eq($/;"	f
relative_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs	/^    fn relative_eq($/;"	P	implementation:UnitComplex
rem	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn rem(self, modulus: Self) -> Self::Output {$/;"	P	implementation:Complex
rem	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn rem(self, other: T) -> Self::Output {$/;"	P	implementation:Complex
rem	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^    fn rem(self, _: Rhs) -> Self::Output {$/;"	P	implementation:ATerm
rem	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^    fn rem(self, rhs: Rhs) -> Self::Output {$/;"	f
rem	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn rem(self, _: I) -> Self::Output {$/;"	P	implementation:Z0
rem	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn rem(self, _: UInt<Ur, Br>) -> Self::Output {$/;"	P	implementation:UTerm
rem	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn rem(self, rhs: UInt<Ur, Br>) -> Self::Output {$/;"	f
rem_assign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn rem_assign(&mut self, other: &Self) {$/;"	P	implementation:opassign::Complex
rem_assign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn rem_assign(&mut self, other: &T) {$/;"	P	implementation:opassign::Complex
rem_assign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn rem_assign(&mut self, other: Self) {$/;"	P	implementation:opassign::Complex
rem_assign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn rem_assign(&mut self, other: T) {$/;"	P	implementation:opassign::Complex
remainder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/strftime.rs	/^    remainder: &'a str,$/;"	m	struct:StrftimeItems
remaining	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs	/^    fn remaining(&self) -> CompleteStateRemaining {$/;"	P	implementation:CompleteState
remove	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn remove(&mut self, index: usize) -> T {$/;"	P	implementation:LRUList
remove	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn remove() {$/;"	f	module:tests
remove_column	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn remove_column(self, i: usize) -> MatrixMN<N, R, DimDiff<C, U1>>$/;"	P	implementation:Matrix
remove_column	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs	/^    pub fn remove_column(&self, j: usize) -> Cholesky<N, DimDiff<D, U1>>$/;"	f
remove_columns	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn remove_columns(self, i: usize, n: usize) -> MatrixMN<N, R, Dynamic>$/;"	P	implementation:Matrix
remove_columns_at	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn remove_columns_at(self, indices: &[usize]) -> MatrixMN<N, R, Dynamic>$/;"	P	implementation:Matrix
remove_columns_generic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn remove_columns_generic<D>(self, i: usize, nremove: D) -> MatrixMN<N, R, DimDiff<C, D>/;"	P	implementation:Matrix
remove_fixed_columns	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn remove_fixed_columns<D>(self, i: usize) -> MatrixMN<N, R, DimDiff<C, D>>$/;"	P	implementation:Matrix
remove_fixed_rows	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn remove_fixed_rows<D>(self, i: usize) -> MatrixMN<N, DimDiff<R, D>, C>$/;"	P	implementation:Matrix
remove_row	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn remove_row(self, i: usize) -> MatrixMN<N, DimDiff<R, U1>, C>$/;"	P	implementation:Matrix
remove_rows	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn remove_rows(self, i: usize, n: usize) -> MatrixMN<N, Dynamic, C>$/;"	P	implementation:Matrix
remove_rows_at	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn remove_rows_at(self, indices: &[usize]) -> MatrixMN<N, Dynamic, C>$/;"	P	implementation:Matrix
remove_rows_generic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn remove_rows_generic<D>(self, i: usize, nremove: D) -> MatrixMN<N, DimDiff<R, D>, C>$/;"	P	implementation:Matrix
renormalize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs	/^    pub fn renormalize(&mut self) -> T::Norm {$/;"	P	implementation:Unit
renormalize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^    pub fn renormalize(&mut self)$/;"	P	implementation:Rotation2
renormalize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^    pub fn renormalize(&mut self)$/;"	f
renormalize_fast	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs	/^    pub fn renormalize_fast(&mut self) {$/;"	P	implementation:Unit
repeat_call	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs	/^pub fn repeat_call<F, A>(function: F) -> RepeatCall<F>$/;"	f
repeat_generic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^    pub fn repeat_generic(nrows: R, ncols: C, elem: N) -> Self {$/;"	f
repeat_n	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/repeatn.rs	/^pub fn repeat_n<A>(element: A, n: usize) -> RepeatN<A>$/;"	f
repeatn	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^mod repeatn;$/;"	n
replace	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_simba.rs	/^    fn replace(&mut self, i: usize, val: Self::Element) {$/;"	f
replace	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_simba.rs	/^    fn replace(&mut self, i: usize, val: Self::Element) {$/;"	f
replace	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_simba.rs	/^    fn replace(&mut self, i: usize, val: Self::Element) {$/;"	f
replace	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_simba.rs	/^    fn replace(&mut self, i: usize, val: Self::Element) {$/;"	f
replace	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_simba.rs	/^    fn replace(&mut self, i: usize, val: Self::Element) {$/;"	f
replace	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_simba.rs	/^    fn replace(&mut self, i: usize, val: Self::Element) {$/;"	f
replace	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_simba.rs	/^    fn replace(&mut self, i: usize, val: Self::Element) {$/;"	f
replace	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_simba.rs	/^    fn replace(&mut self, i: usize, val: Self::Element) {$/;"	f
replace	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_simba.rs	/^    fn replace(&mut self, i: usize, val: Self::Element) {$/;"	f
replace	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/utils.rs	/^    fn replace(self, index: usize, new_value: Self) -> Self {$/;"	P	interface:FloatAsSIMD
replace	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    pub fn replace<'t, R: Replacer>($/;"	P	implementation:Regex
replace	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    pub fn replace<'t, R: Replacer>($/;"	P	implementation:Regex
replace_all	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    pub fn replace_all<'t, R: Replacer>($/;"	P	implementation:Regex
replace_all	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    pub fn replace_all<'t, R: Replacer>($/;"	P	implementation:Regex
replace_append	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    fn replace_append(&mut self, _: &Captures, dst: &mut Vec<u8>) {$/;"	P	implementation:NoExpand
replace_append	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    fn replace_append(&mut self, caps: &Captures, dst: &mut Vec<u8>) {$/;"	P	implementation:ReplacerRef
replace_append	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    fn replace_append(&mut self, caps: &Captures, dst: &mut Vec<u8>) {$/;"	P	implementation:u8
replace_append	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    fn replace_append(&mut self, caps: &Captures, dst: &mut Vec<u8>) {$/;"	f
replace_append	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    fn replace_append(&mut self, caps: &Captures, dst: &mut Vec<u8>);$/;"	P	interface:Replacer
replace_append	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    fn replace_append(&mut self, _: &Captures, dst: &mut String) {$/;"	P	implementation:NoExpand
replace_append	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    fn replace_append(&mut self, caps: &Captures, dst: &mut String) {$/;"	P	implementation:ReplacerRef
replace_append	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    fn replace_append(&mut self, caps: &Captures, dst: &mut String) {$/;"	P	implementation:str
replace_append	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    fn replace_append(&mut self, caps: &Captures, dst: &mut String) {$/;"	f
replace_append	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    fn replace_append(&mut self, caps: &Captures, dst: &mut String);$/;"	P	interface:Replacer
replace_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_simba.rs	/^    unsafe fn replace_unchecked(&mut self, i: usize, val: Self::Element) {$/;"	f
replace_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_simba.rs	/^    unsafe fn replace_unchecked(&mut self, i: usize, val: Self::Element) {$/;"	f
replace_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_simba.rs	/^    unsafe fn replace_unchecked(&mut self, i: usize, val: Self::Element) {$/;"	f
replace_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_simba.rs	/^    unsafe fn replace_unchecked(&mut self, i: usize, val: Self::Element) {$/;"	f
replace_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_simba.rs	/^    unsafe fn replace_unchecked(&mut self, i: usize, val: Self::Element) {$/;"	f
replace_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_simba.rs	/^    unsafe fn replace_unchecked(&mut self, i: usize, val: Self::Element) {$/;"	f
replace_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_simba.rs	/^    unsafe fn replace_unchecked(&mut self, i: usize, val: Self::Element) {$/;"	f
replace_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_simba.rs	/^    unsafe fn replace_unchecked(&mut self, i: usize, val: Self::Element) {$/;"	f
replace_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_simba.rs	/^    unsafe fn replace_unchecked(&mut self, i: usize, val: Self::Element) {$/;"	f
replacen	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    pub fn replacen<'t, R: Replacer>($/;"	P	implementation:Regex
replacen	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    pub fn replacen<'t, R: Replacer>($/;"	P	implementation:Regex
repr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    repr: ChiSquaredRepr,$/;"	m	struct:ChiSquared
repr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    repr: GammaRepr,$/;"	m	struct:Gamma
require_bounded	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/bounds.rs	/^    fn require_bounded<T: Bounded>(_: &T) {}$/;"	f	function:wrapping_is_bounded
require_num	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^    fn require_num<T: Num>(_: &T) {}$/;"	f	function:wrapping_is_num
require_one	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/identities.rs	/^    fn require_one<T: One>(_: &T) {}$/;"	f	function:wrapping_is_one
require_unsigned	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/sign.rs	/^    fn require_unsigned<T: Unsigned>(_: &T) {}$/;"	f	function:unsigned_wrapping_is_unsigned
require_wrappingadd	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/wrapping.rs	/^    fn require_wrappingadd<T: WrappingAdd>(_: &T) {}$/;"	f	function:wrapping_is_wrappingadd
require_wrappingmul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/wrapping.rs	/^    fn require_wrappingmul<T: WrappingMul>(_: &T) {}$/;"	f	function:wrapping_is_wrappingmul
require_wrappingshl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/wrapping.rs	/^    fn require_wrappingshl<T: WrappingShl>(_: &T) {}$/;"	f	function:wrapping_is_wrappingshl
require_wrappingshr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/wrapping.rs	/^    fn require_wrappingshr<T: WrappingShr>(_: &T) {}$/;"	f	function:wrapping_is_wrappingshr
require_wrappingsub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/wrapping.rs	/^    fn require_wrappingsub<T: WrappingSub>(_: &T) {}$/;"	f	function:wrapping_is_wrappingsub
require_zero	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/identities.rs	/^    fn require_zero<T: Zero>(_: &T) {}$/;"	f	function:wrapping_is_zero
res	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    res: Vec<String>,$/;"	m	struct:ExecReadOnly
reseed	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/reseeding.rs	/^    fn reseed(&mut self) -> Result<(), Error> {$/;"	f
reseed	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/reseeding.rs	/^    pub fn reseed(&mut self) -> Result<(), Error> {$/;"	f
reseed_and_generate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/reseeding.rs	/^    fn reseed_and_generate($/;"	f
reseeder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/reseeding.rs	/^    reseeder: Rsdr,$/;"	m	struct:ReseedingCore
reseeding	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/mod.rs	/^mod reseeding;$/;"	n
reset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn reset() {$/;"	f	module:tests
reset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    fn reset(&mut self) -> io::Result<()> {$/;"	P	implementation:Buffer
reset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs	/^    fn reset(&mut self) {$/;"	f
reset_peek	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs	/^    pub fn reset_peek(&mut self) {$/;"	f
reset_size	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn reset_size(&mut self) {$/;"	P	implementation:CacheInner
resize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn resize(self, new_nrows: usize, new_ncols: usize, val: N) -> DMatrix<N>$/;"	P	implementation:Matrix
resize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^    pub unsafe fn resize(mut self, sz: usize) -> Vec<N> {$/;"	P	implementation:VecStorage
resize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/pikevm.rs	/^    fn resize(&mut self, num_insts: usize, ncaps: usize) {$/;"	P	implementation:Threads
resize_generic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn resize_generic<R2: Dim, C2: Dim>($/;"	P	implementation:Matrix
resize_horizontally	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn resize_horizontally(self, new_ncols: usize, val: N) -> MatrixMN<N, R, Dynamic>$/;"	P	implementation:Matrix
resize_horizontally_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn resize_horizontally_mut(&mut self, new_ncols: usize, val: N)$/;"	f
resize_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn resize_mut(&mut self, new_nrows: usize, new_ncols: usize, val: N)$/;"	P	implementation:DMatrix
resize_vertically	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn resize_vertically(self, new_nrows: usize, val: N) -> MatrixMN<N, Dynamic, C>$/;"	P	implementation:Matrix
resize_vertically_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn resize_vertically_mut(&mut self, new_nrows: usize, val: N)$/;"	f
resolve_year	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^        fn resolve_year(y: Option<i32>, q: Option<i32>,$/;"	f	method:Parsed::to_naive_date
rest	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^    rest: A,$/;"	m	struct:TArr
restore_state	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn restore_state(&mut self, state: State) -> Option<StatePtr> {$/;"	P	implementation:Fsm
rev	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs	/^pub fn rev<I>(iterable: I) -> iter::Rev<I::IntoIter>$/;"	f
reverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    pub fn reverse(mut self, yes: bool) -> Self {$/;"	P	implementation:Compiler
reverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    pub fn reverse($/;"	P	implementation:Fsm
rfc2822_to_datetime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parse.rs	/^    fn rfc2822_to_datetime(date: &str) -> ParseResult<DateTime<FixedOffset>> {$/;"	f	function:test_rfc2822
rfc3339_to_datetime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parse.rs	/^    fn rfc3339_to_datetime(date: &str) -> ParseResult<DateTime<FixedOffset>> {$/;"	f	function:test_rfc3339
rfold	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/iter.rs	/^    fn rfold<B, F>(mut self, init: B, mut f: F) -> B$/;"	f
right	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs	/^    pub fn right(self) -> Option<B> {$/;"	P	implementation:EitherOrBoth
right	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/merge_join.rs	/^    right: PutBack<Fuse<J>>,$/;"	m	struct:MergeJoinBy
right	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^    pub fn right(&self) -> N {$/;"	P	implementation:Orthographic3
right_and_then	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs	/^    pub fn right_and_then<F, R>(self, f: F) -> EitherOrBoth<A, R>$/;"	P	implementation:EitherOrBoth
right_div	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn right_div(&self, other: &Self) -> Option<Self>$/;"	f
ring_parameters	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    ring_parameters: PhantomData<(R, U, M)>,$/;"	m	struct:PRDomain
rng	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^    rng: R,$/;"	m	struct:DistIter
rng	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^    pub fn rng(seed: u64) -> impl RngCore {$/;"	f	module:test
rng	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/thread.rs	/^    rng: NonNull<ReseedingRng<Core, OsRng>>,$/;"	m	struct:ThreadRng
rngs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^pub mod rngs;$/;"	n
ro	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    ro: &'c Arc<ExecReadOnly>,$/;"	m	struct:ExecNoSync
ro	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    ro: Arc<ExecReadOnly>,$/;"	m	struct:Exec
rotate	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs	/^    pub fn rotate<R2: Dim, C2: Dim, S2: StorageMut<N, R2, C2>>($/;"	P	implementation:GivensRotation
rotate_left	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/int.rs	/^    fn rotate_left(self, n: u32) -> Self;$/;"	P	interface:PrimInt
rotate_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn rotate_point(&self, pt: &E) -> E {$/;"	P	interface:Similarity
rotate_right	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/int.rs	/^    fn rotate_right(self, n: u32) -> Self;$/;"	P	interface:PrimInt
rotate_rows	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs	/^    pub fn rotate_rows<R2: Dim, C2: Dim, S2: StorageMut<N, R2, C2>>($/;"	P	implementation:GivensRotation
rotate_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn rotate_vector(&self, pt: &E::Coordinates) -> E::Coordinates {$/;"	P	interface:Similarity
rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/id.rs	/^    fn rotation(&self) -> Self::Rotation {$/;"	P	implementation:Id
rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn rotation(&self) -> Self::Rotation {$/;"	f
rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn rotation(&self) -> Self::Rotation;$/;"	P	interface:Similarity
rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^    pub rotation: R,$/;"	m	struct:Isometry
rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alga.rs	/^    fn rotation(&self) -> R {$/;"	f
rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs	/^    pub fn rotation(angle: N) -> Self {$/;"	f
rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod rotation;$/;"	n
rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    fn rotation(&self) -> Self {$/;"	P	implementation:UnitQuaternion
rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alga.rs	/^    fn rotation(&self) -> Self {$/;"	f
rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alga.rs	/^    fn rotation(&self) -> R {$/;"	f
rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alga.rs	/^    fn rotation(&self) -> Id {$/;"	f
rotation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_alga.rs	/^    fn rotation(&self) -> Self {$/;"	f
rotation_alga	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod rotation_alga;$/;"	n
rotation_alias	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod rotation_alias;$/;"	n
rotation_between	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/id.rs	/^    fn rotation_between(a: &E::Coordinates, b: &E::Coordinates) -> Option<Self> {$/;"	P	implementation:Id
rotation_between	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn rotation_between(a: &E::Coordinates, b: &E::Coordinates) -> Option<Self>;$/;"	P	interface:Rotation
rotation_between	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    fn rotation_between(a: &Vector3<N>, b: &Vector3<N>) -> Option<Self> {$/;"	P	implementation:UnitQuaternion
rotation_between	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^    pub fn rotation_between<SB, SC>(a: &Vector<N, U3, SB>, b: &Vector<N, U3, SC>) -> Option<Self/;"	f
rotation_between	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alga.rs	/^    fn rotation_between(_: &VectorN<N, D>, _: &VectorN<N, D>) -> Option<Self> {$/;"	f
rotation_between	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^    pub fn rotation_between<SB, SC>(a: &Vector<N, U2, SB>, b: &Vector<N, U2, SC>) -> Self$/;"	P	implementation:Rotation2
rotation_between	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^    pub fn rotation_between<SB, SC>(a: &Vector<N, U3, SB>, b: &Vector<N, U3, SC>) -> Option<Self/;"	f
rotation_between	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_alga.rs	/^    fn rotation_between(a: &Vector2<N>, b: &Vector2<N>) -> Option<Self> {$/;"	f
rotation_between	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs	/^    pub fn rotation_between<SB, SC>(a: &Vector<N, U2, SB>, b: &Vector<N, U2, SC>) -> Self$/;"	f
rotation_between_axis	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^    pub fn rotation_between_axis<SB, SC>($/;"	f
rotation_between_axis	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs	/^    pub fn rotation_between_axis<SB, SC>($/;"	f
rotation_construction	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod rotation_construction;$/;"	n
rotation_conversion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod rotation_conversion;$/;"	n
rotation_ops	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod rotation_ops;$/;"	n
rotation_simba	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod rotation_simba; \/\/ FIXME: implement Rotation methods.$/;"	n
rotation_specialization	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod rotation_specialization;$/;"	n
rotation_to	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn rotation_to(&self, other: &Self) -> Self {$/;"	f
rotation_to	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^    pub fn rotation_to(&self, other: &Self) -> Self {$/;"	P	implementation:Rotation2
rotation_to	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^    pub fn rotation_to(&self, other: &Self) -> Self {$/;"	f
rotation_to	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs	/^    pub fn rotation_to(&self, other: &Self) -> Self {$/;"	f
rotation_wrt_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs	/^    pub fn rotation_wrt_point(r: R, p: Point<N, D>) -> Self {$/;"	f
rotation_wrt_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs	/^    pub fn rotation_wrt_point(r: R, p: Point<N, D>, scaling: N) -> Self {$/;"	f
rou	/Users/williamcashman/Honours/Program/n_poly/src/algebras/complex.rs	/^    fn rou(n: usize, inv: bool) -> Vec<Self> {$/;"	P	implementation:CC
rou	/Users/williamcashman/Honours/Program/n_poly/src/fft.rs	/^    fn rou(n: usize, inv: bool) -> Vec<Self>;$/;"	P	interface:SupportsFFT
round	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn round(self) -> Self {$/;"	P	implementation:Complex
round	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn round(self) -> Self;$/;"	P	interface:ComplexField
round	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^mod round;$/;"	n
round	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn round(self) -> Self {$/;"	P	implementation:f32
round	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn round(self) -> Self {$/;"	P	implementation:f64
round	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn round(self) -> Self {$/;"	P	interface:FloatCore
round	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn round(self) -> Self;$/;"	P	interface:Float
round	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn round(self) -> Self;$/;"	P	interface:Real
round_subsecs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/round.rs	/^    fn round_subsecs(self, digits: u16) -> Self;$/;"	P	interface:SubsecRound
round_subsecs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/round.rs	/^    fn round_subsecs(self, digits: u16) -> T {$/;"	f
row_index	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    fn row_index(&self, i: usize) -> usize {$/;"	f
row_index	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    fn row_index(&self, i: usize) -> usize;$/;"	P	interface:CsStorage
row_index_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    unsafe fn row_index_unchecked(&self, i: usize) -> usize {$/;"	f
row_index_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    unsafe fn row_index_unchecked(&self, i: usize) -> usize;$/;"	P	interface:CsStorage
row_iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn row_iter(&self) -> RowIter<N, R, C, S> {$/;"	P	implementation:Matrix
row_iter_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn row_iter_mut(&mut self) -> RowIterMut<N, R, C, S> {$/;"	P	implementation:Matrix
row_mean	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs	/^    pub fn row_mean(&self) -> RowVectorN<N, C>$/;"	P	implementation:Matrix
row_mean_tr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs	/^    pub fn row_mean_tr(&self) -> VectorN<N, C>$/;"	P	implementation:Matrix
row_reduce	/Users/williamcashman/Honours/Program/n_poly/src/ideals/f4.rs	/^pub fn row_reduce<'a, P: FPolyRing>(mat: &mut Vec<Poly<'a, P>>) {$/;"	f
row_reduce_test	/Users/williamcashman/Honours/Program/n_poly/src/ideals/f4.rs	/^    fn row_reduce_test() {$/;"	f	module:tests
row_sum	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs	/^    pub fn row_sum(&self) -> RowVectorN<N, C>$/;"	P	implementation:Matrix
row_sum_tr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs	/^    pub fn row_sum_tr(&self) -> VectorN<N, C>$/;"	P	implementation:Matrix
row_variance	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs	/^    pub fn row_variance(&self) -> RowVectorN<N, C>$/;"	P	implementation:Matrix
row_variance_tr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs	/^    pub fn row_variance_tr(&self) -> VectorN<N, C>$/;"	P	implementation:Matrix
rows_range	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^    pub fn rows_range<RowRange: SliceRange<R>>($/;"	P	implementation:Matrix
rows_range_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^    pub fn rows_range_mut<RowRange: SliceRange<R>>($/;"	P	implementation:Matrix
rustc_serialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^pub mod rustc_serialize {$/;"	n
rustc_serialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^mod rustc_serialize {$/;"	n
rustc_serialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^pub mod rustc_serialize {$/;"	n
rustc_serialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^mod rustc_serialize {$/;"	n
s	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs	/^    pub fn s(&self) -> N {$/;"	P	implementation:GivensRotation
s	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs	/^    s: N,$/;"	m	struct:GivensRotation
s_poly	/Users/williamcashman/Honours/Program/n_poly/src/ideals/groebner_basis.rs	/^fn s_poly<P: FPolyRing>(lhs: &Poly<P>, rhs: &Poly<P>) -> Poly<P> {$/;"	f
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^    fn sample<'a, G: Rng + ?Sized>(&self, rng: &'a mut G) -> MatrixMN<N, R, C> {$/;"	f
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^    fn sample<'a, G: Rng + ?Sized>(&self, rng: &'a mut G) -> Unit<VectorN<N, D>> {$/;"	f
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs	/^    fn sample<'a, G: Rng + ?Sized>(&self, rng: &'a mut G) -> Isometry<N, D, R> {$/;"	f
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^    fn sample<R: Rng + ?Sized>(&self, r: &mut R) -> Orthographic3<N> {$/;"	f
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^    fn sample<'a, R: Rng + ?Sized>(&self, r: &'a mut R) -> Perspective3<N> {$/;"	f
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs	/^    fn sample<'a, G: Rng + ?Sized>(&self, rng: &mut G) -> Point<N, D> {$/;"	f
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^    fn sample<'a, R: Rng + ?Sized>(&self, rng: &'a mut R) -> Quaternion<N> {$/;"	f
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^    fn sample<'a, R: Rng + ?Sized>(&self, rng: &'a mut R) -> UnitQuaternion<N> {$/;"	f
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^    fn sample<'a, R: Rng + ?Sized>(&self, rng: &'a mut R) -> Rotation2<N> {$/;"	f
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^    fn sample<'a, R: Rng + ?Sized>(&self, rng: &mut R) -> Rotation3<N> {$/;"	f
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs	/^    fn sample<'a, G: Rng + ?Sized>(&self, rng: &mut G) -> Similarity<N, D, R> {$/;"	f
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_construction.rs	/^    fn sample<'a, G: Rng + ?Sized>(&self, rng: &'a mut G) -> Translation<N, D> {$/;"	f
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs	/^    fn sample<'a, R: Rng + ?Sized>(&self, rng: &mut R) -> UnitComplex<N> {$/;"	f
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/crand.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> Complex<T> {$/;"	f
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/bernoulli.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> bool {$/;"	P	implementation:Bernoulli
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/binomial.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> u64 {$/;"	P	implementation:Binomial
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/cauchy.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> f64 {$/;"	P	implementation:Cauchy
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/dirichlet.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> Vec<f64> {$/;"	P	implementation:Dirichlet
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/exponential.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> f64 {$/;"	P	implementation:Exp
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/exponential.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> f64 {$/;"	P	implementation:Exp1
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> f64 {$/;"	P	implementation:Beta
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> f64 {$/;"	P	implementation:ChiSquared
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> f64 {$/;"	P	implementation:FisherF
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> f64 {$/;"	P	implementation:Gamma
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> f64 {$/;"	P	implementation:GammaLargeShape
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> f64 {$/;"	P	implementation:GammaSmallShape
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> f64 {$/;"	P	implementation:StudentT
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/integer.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> u128 {$/;"	P	implementation:Standard
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/integer.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> u16 {$/;"	P	implementation:Standard
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/integer.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> u32 {$/;"	P	implementation:Standard
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/integer.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> u64 {$/;"	P	implementation:Standard
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/integer.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> u8 {$/;"	P	implementation:Standard
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/integer.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> usize {$/;"	P	implementation:Standard
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> T {$/;"	P	implementation:D
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> T;$/;"	P	interface:Distribution
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/normal.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> f64 {$/;"	P	implementation:LogNormal
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/normal.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> f64 {$/;"	P	implementation:Normal
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/normal.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> f64 {$/;"	P	implementation:StandardNormal
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/other.rs	/^    fn sample<R: Rng + ?Sized>(&self, _: &mut R) -> () {$/;"	P	implementation:Standard
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/other.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> Option<T> {$/;"	f
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/other.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> Wrapping<T> {$/;"	f
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/other.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> bool {$/;"	P	implementation:Standard
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/other.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> char {$/;"	P	implementation:Alphanumeric
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/other.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> char {$/;"	P	implementation:Standard
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/pareto.rs	/^    fn sample() {$/;"	f	module:tests
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/pareto.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> f64 {$/;"	P	implementation:Pareto
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/poisson.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> u64 {$/;"	P	implementation:Poisson
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/triangular.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> f64 {$/;"	P	implementation:Triangular
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^            fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> Self::X {$/;"	P	implementation:tests::test_custom_uniform::UniformMyF32
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> Duration {$/;"	P	implementation:UniformDuration
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> Self::X;$/;"	P	interface:UniformSampler
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> X {$/;"	P	implementation:Uniform
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/unit_circle.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> [f64; 2] {$/;"	P	implementation:UnitCircle
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/unit_sphere.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> [f64; 3] {$/;"	P	implementation:UnitSphereSurface
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weibull.rs	/^    fn sample() {$/;"	f	module:tests
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weibull.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> f64 {$/;"	P	implementation:Weibull
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> usize {$/;"	P	implementation:WeightedIndex
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/mod.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> usize {$/;"	f
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^    fn sample<T, D: Distribution<T>>(&mut self, distr: D) -> T {$/;"	P	interface:Rng
sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^pub fn sample<R>(rng: &mut R, length: usize, amount: usize) -> IndexVec$/;"	f
sample_floyd	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^fn sample_floyd<R>(rng: &mut R, length: u32, amount: u32) -> IndexVec$/;"	f
sample_inplace	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^fn sample_inplace<R>(rng: &mut R, length: u32, amount: u32) -> IndexVec$/;"	f
sample_iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^    fn sample_iter<R>(self, rng: R) -> DistIter<Self, R, T>$/;"	P	interface:Distribution
sample_iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^    fn sample_iter<T, D>(self, distr: D) -> distributions::DistIter<D, Self, T>$/;"	P	interface:Rng
sample_rejection	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^fn sample_rejection<X: UInt, R>(rng: &mut R, length: X, amount: X) -> IndexVec$/;"	f
sample_single	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^    fn sample_single<R: Rng + ?Sized, B1, B2>(low: B1, high: B2, rng: &mut R) -> Self::X$/;"	P	interface:UniformSampler
saturating	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/mod.rs	/^pub mod saturating;$/;"	n
saturating_add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/saturating.rs	/^    fn saturating_add(self, v: Self) -> Self;$/;"	P	interface:Saturating
saturating_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/saturating.rs	/^macro_rules! saturating_impl {$/;"	M
saturating_sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/saturating.rs	/^    fn saturating_sub(self, v: Self) -> Self;$/;"	P	interface:Saturating
scalar	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs	/^mod scalar;$/;"	n
scalar	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn scalar(&self) -> N {$/;"	f
scalar_float_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/utils.rs	/^macro_rules! scalar_float_impl {$/;"	M
scalar_op_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_ops.rs	/^macro_rules! scalar_op_impl($/;"	M
scale	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn scale(self, factor: Self::RealField) -> Self {$/;"	P	implementation:Complex
scale	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn scale(self, factor: Self::RealField) -> Self;$/;"	P	interface:ComplexField
scale	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn scale(&self, real: N::SimdRealField) -> MatrixMN<N, R, C>$/;"	P	implementation:Matrix
scale	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub fn scale(&self, t: T) -> Self {$/;"	P	implementation:Complex
scale	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/cauchy.rs	/^    scale: f64,$/;"	m	struct:Cauchy
scale	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    scale: f64,$/;"	m	struct:GammaLargeShape
scale	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/pareto.rs	/^    scale: f64,$/;"	m	struct:Pareto
scale	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^    scale: X,$/;"	m	struct:UniformFloat
scale	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weibull.rs	/^    scale: f64,$/;"	m	struct:Weibull
scale	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    pub fn scale(&self, scalar: &P::Coeff) -> Self {$/;"	P	implementation:Term
scale	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    pub fn scale(&self, scalar: P::Coeff) -> Self {$/;"	P	implementation:Poly
scale_ass	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    pub fn scale_ass(&mut self, scalar: P::Coeff) {$/;"	P	implementation:Poly
scale_between	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn scale_between(a: &E::Coordinates, b: &E::Coordinates) -> Option<Self> {$/;"	P	interface:Scaling
scale_between	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn scale_between(a: &E::Coordinates, b: &E::Coordinates) -> Option<Self> {$/;"	f
scale_by	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_alga.rs	/^    fn scale_by(&self, n: N) -> Self {$/;"	f
scale_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn scale_mut(&mut self, real: N::SimdRealField) {$/;"	P	implementation:Matrix
scale_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^    fn scale_mut(&mut self, n: Self::Norm) {$/;"	f
scale_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs	/^    fn scale_mut(&mut self, n: Self::Norm);$/;"	P	interface:Normed
scale_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    fn scale_mut(&mut self, n: Self::Norm) {$/;"	P	implementation:Quaternion
scale_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs	/^    fn scale_mut(&mut self, n: Self::Norm) {$/;"	P	implementation:Complex
scale_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn scale_point(&self, pt: &E) -> E {$/;"	P	interface:Similarity
scale_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn scale_vector(&self, pt: &E::Coordinates) -> E::Coordinates {$/;"	P	interface:Similarity
scaled_axis	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn scaled_axis(&self) -> Vector3<N>$/;"	f
scaled_axis	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^    pub fn scaled_axis(&self) -> Vector3<N>$/;"	f
scaled_axis	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^    pub fn scaled_axis(&self) -> VectorN<N, U1> {$/;"	P	implementation:Rotation2
scaled_axis	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs	/^    pub fn scaled_axis(&self) -> Vector1<N> {$/;"	f
scaled_rotation_between	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/id.rs	/^    fn scaled_rotation_between($/;"	P	implementation:Id
scaled_rotation_between	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn scaled_rotation_between($/;"	P	interface:Rotation
scaled_rotation_between	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    fn scaled_rotation_between(a: &Vector3<N>, b: &Vector3<N>, s: N) -> Option<Self> {$/;"	P	implementation:UnitQuaternion
scaled_rotation_between	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^    pub fn scaled_rotation_between<SB, SC>($/;"	f
scaled_rotation_between	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alga.rs	/^    fn scaled_rotation_between(_: &VectorN<N, D>, _: &VectorN<N, D>, _: N) -> Option<Self> {$/;"	f
scaled_rotation_between	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^    pub fn scaled_rotation_between<SB, SC>($/;"	P	implementation:Rotation2
scaled_rotation_between	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^    pub fn scaled_rotation_between<SB, SC>($/;"	f
scaled_rotation_between	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_alga.rs	/^    fn scaled_rotation_between(a: &Vector2<N>, b: &Vector2<N>, s: N) -> Option<Self> {$/;"	f
scaled_rotation_between	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs	/^    pub fn scaled_rotation_between<SB, SC>($/;"	f
scaled_rotation_between_axis	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^    pub fn scaled_rotation_between_axis<SB, SC>($/;"	f
scaled_rotation_between_axis	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs	/^    pub fn scaled_rotation_between_axis<SB, SC>($/;"	f
scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/id.rs	/^    fn scaling(&self) -> Self::Scaling {$/;"	P	implementation:Id
scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn scaling(&self) -> Self::Scaling {$/;"	f
scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn scaling(&self) -> Self::Scaling;$/;"	P	interface:Similarity
scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alga.rs	/^    fn scaling(&self) -> Id {$/;"	f
scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    fn scaling(&self) -> Id {$/;"	P	implementation:UnitQuaternion
scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alga.rs	/^    fn scaling(&self) -> Id {$/;"	f
scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^    pub fn scaling(&self) -> N {$/;"	f
scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^    scaling: N,$/;"	m	struct:Similarity
scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alga.rs	/^    fn scaling(&self) -> N {$/;"	f
scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alga.rs	/^    fn scaling(&self) -> Id {$/;"	f
scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_alga.rs	/^    fn scaling(&self) -> Id {$/;"	f
scan	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^mod scan;$/;"	n
scatter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_ops.rs	/^    fn scatter<R2: Dim, C2: Dim>($/;"	P	implementation:CsMatrix
schur	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/mod.rs	/^mod schur;$/;"	n
schur	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs	/^    pub fn schur(self) -> Schur<N, D> {$/;"	f
searcher	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    pub fn searcher(&self) -> ExecNoSync {$/;"	P	implementation:Exec
searcher_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    pub fn searcher_str(&self) -> ExecNoSyncStr {$/;"	P	implementation:Exec
second	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    #[inline] fn second(&self) -> u32 { self.naive_local().second() }$/;"	P	implementation:DateTime
second	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub second: Option<u32>,$/;"	m	struct:Parsed
second	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    fn second(&self) -> u32;$/;"	P	interface:Timelike
second	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn second(&self) -> u32 {$/;"	P	implementation:NaiveDateTime
second	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    fn second(&self) -> u32 {$/;"	P	implementation:NaiveTime
seconds	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    seconds: u64,$/;"	m	struct:TimedCache
seconds	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    pub fn seconds(seconds: i64) -> Duration {$/;"	P	implementation:Duration
secs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    secs: u32,$/;"	m	struct:NaiveTime
secs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    secs: i64,$/;"	m	struct:Duration
seen_pairs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^            seen_pairs: usize,$/;"	m	struct:tests::test_record_key_values_builder::TestVisitor
select	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_simba.rs	/^    fn select(self, cond: Self::SimdBool, other: Self) -> Self {$/;"	f
select	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_simba.rs	/^    fn select(self, cond: Self::SimdBool, other: Self) -> Self {$/;"	f
select	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_simba.rs	/^    fn select(self, cond: Self::SimdBool, other: Self) -> Self {$/;"	f
select	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_simba.rs	/^    fn select(self, cond: Self::SimdBool, other: Self) -> Self {$/;"	f
select	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_simba.rs	/^    fn select(self, cond: Self::SimdBool, other: Self) -> Self {$/;"	f
select	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_simba.rs	/^    fn select(self, cond: Self::SimdBool, other: Self) -> Self {$/;"	f
select	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_simba.rs	/^    fn select(self, cond: Self::SimdBool, other: Self) -> Self {$/;"	f
select	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_simba.rs	/^    fn select(self, cond: Self::SimdBool, other: Self) -> Self {$/;"	f
select	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_simba.rs	/^    fn select(self, cond: Self::SimdBool, other: Self) -> Self {$/;"	f
select_columns	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn select_columns<'a, I>(&self, icols: I) -> MatrixMN<N, R, Dynamic>$/;"	P	implementation:Matrix
select_guard	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    fn select_guard(pattern: &[u8]) -> (u8, usize) {$/;"	P	implementation:BoyerMooreSearch
select_rows	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn select_rows<'a, I>(&self, irows: I) -> MatrixMN<N, Dynamic, C>$/;"	P	implementation:Matrix
send	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/iter.rs	/^    fn send<I: Send>(_iter: I) {}$/;"	f	module:test
sep	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/format.rs	/^    sep: &'a str,$/;"	m	struct:Format
sep	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/format.rs	/^    sep: &'a str,$/;"	m	struct:FormatWith
seq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^pub mod seq;$/;"	n
sequence	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^pub mod sequence;$/;"	n
serde	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^pub mod serde {$/;"	n
serde	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    pub mod serde {$/;"	n	module:naive
serde	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^pub mod serde {$/;"	n
serde	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^mod serde {$/;"	n
serde	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^pub mod serde {$/;"	n
serde	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^mod serde {$/;"	n
serde	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^mod serde;$/;"	n
serde_from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn serde_from<T, E, V>(me: LocalResult<T>, ts: &V) -> Result<T, E>$/;"	f	module:serde
serialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:serde::DateTime
serialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^        pub fn serialize<S>(dt: &DateTime<Utc>, serializer: S) -> Result<S::Ok, S::Error>$/;"	f	module:serde::ts_milliseconds
serialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^        pub fn serialize<S>(dt: &DateTime<Utc>, serializer: S) -> Result<S::Ok, S::Error>$/;"	f	module:serde::ts_nanoseconds
serialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^        pub fn serialize<S>(dt: &DateTime<Utc>, serializer: S) -> Result<S::Ok, S::Error>$/;"	f	module:serde::ts_seconds
serialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^        pub fn serialize<S>(opt: &Option<DateTime<Utc>>, serializer: S) -> Result<S::Ok, S::Erro/;"	f	module:serde::ts_milliseconds_option
serialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^        pub fn serialize<S>(opt: &Option<DateTime<Utc>>, serializer: S) -> Result<S::Ok, S::Erro/;"	f	module:serde::ts_nanoseconds_option
serialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^        pub fn serialize<S>(opt: &Option<DateTime<Utc>>, serializer: S) -> Result<S::Ok, S::Erro/;"	f	module:serde::ts_seconds_option
serialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:weekday_serde::Weekday
serialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:serde::NaiveDate
serialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:serde::NaiveDateTime
serialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^        pub fn serialize<S>(dt: &NaiveDateTime, serializer: S) -> Result<S::Ok, S::Error>$/;"	f	module:serde::ts_milliseconds
serialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^        pub fn serialize<S>(dt: &NaiveDateTime, serializer: S) -> Result<S::Ok, S::Error>$/;"	f	module:serde::ts_nanoseconds
serialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^        pub fn serialize<S>(dt: &NaiveDateTime, serializer: S) -> Result<S::Ok, S::Error>$/;"	f	module:serde::ts_seconds
serialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:serde::NaiveTime
serialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/impl_serde.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Level
serialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:LevelFilter
serialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Dynamic
serialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    fn serialize<T>(&self, serializer: T) -> Result<T::Ok, T::Error>$/;"	f
serialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Unit
serialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Orthographic3
serialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Perspective3
serialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
set	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/matrix.rs	/^    fn set(&mut self, i: usize, j: usize, val: Self::Field) {$/;"	P	interface:Matrix
set	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn set(&mut self, index: usize, value: T) {$/;"	P	implementation:LRUList
set	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/pikevm.rs	/^    set: SparseSet,$/;"	m	struct:Threads
set	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    fn set(&mut self, ind: usize, val: usize) -> Option<()>;$/;"	P	interface:Variate
set	/Users/williamcashman/Honours/Program/n_poly/src/polym.rs	/^    fn set(&mut self, ind: usize, val: usize) -> Option<()> {$/;"	P	implementation:MultiIndex
set	/Users/williamcashman/Honours/Program/n_poly/src/polyu.rs	/^    fn set(&mut self, _ind: usize, val: usize) -> Option<()> {$/;"	P	implementation:UniIndex
set_alias	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^            fn set_alias(&mut self, idx: u32, alias: u32) {$/;"	P	implementation:WeightedIndex::new::Aliases
set_ampm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub fn set_ampm(&mut self, value: bool) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_aspect	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^    pub fn set_aspect(&mut self, aspect: N) {$/;"	P	implementation:Perspective3
set_bg	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    pub fn set_bg(&mut self, color: Color) -> &mut Style {$/;"	P	implementation:Style
set_bit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn set_bit<IM: InternalMarker>(self, I, B) -> Self::Output;$/;"	P	interface:SetBit
set_bit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn set_bit<IM: InternalMarker>(self, i: I, b: B) -> Self::Output {$/;"	f
set_bold	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    pub fn set_bold(&mut self, yes: bool) -> &mut Style {$/;"	P	implementation:Style
set_bottom	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^    pub fn set_bottom(&mut self, bottom: N) {$/;"	P	implementation:Orthographic3
set_bottom_and_top	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^    pub fn set_bottom_and_top(&mut self, bottom: N, top: N) {$/;"	P	implementation:Orthographic3
set_boxed_logger	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^pub fn set_boxed_logger(logger: Box<Log>) -> Result<(), SetLoggerError> {$/;"	f
set_category	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^    pub fn set_category<CNew: SuperTCategoryOf<C>>(self) -> Transform<N, D, CNew> {$/;"	f
set_color	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    fn set_color(&mut self, spec: &ColorSpec) -> io::Result<()> {$/;"	P	implementation:Buffer
set_color	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    pub fn set_color(&mut self, color: Color) -> &mut Style {$/;"	P	implementation:Style
set_column	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/matrix.rs	/^    fn set_column(&self, i: usize, col: &Self::Column) -> Self {$/;"	P	interface:Matrix
set_column	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn set_column<R2: Dim, S2>(&mut self, i: usize, column: &Vector<N, R2, S2>)$/;"	P	implementation:Matrix
set_column_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/matrix.rs	/^    fn set_column_mut(&mut self, i: usize, col: &Self::Column);$/;"	P	interface:Matrix
set_day	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub fn set_day(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_diagonal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/matrix.rs	/^    fn set_diagonal(&self, diag: &Self::Vector) -> Self {$/;"	P	interface:SquareMatrixMut
set_diagonal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn set_diagonal<R2: Dim, S2>(&mut self, diag: &Vector<N, R2, S2>)$/;"	P	implementation:Matrix
set_diagonal_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/matrix.rs	/^    fn set_diagonal_mut(&mut self, diag: &Self::Vector);$/;"	P	interface:SquareMatrixMut
set_empty	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn set_empty(&mut self) {$/;"	P	implementation:StateFlags
set_fovy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^    pub fn set_fovy(&mut self, fovy: N) {$/;"	P	implementation:Perspective3
set_from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn set_from<'a, A: 'a, J>(&mut self, from: J) -> usize$/;"	P	interface:Itertools
set_hour	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub fn set_hour(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_hour12	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub fn set_hour12(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_if_consistent	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^fn set_if_consistent<T: PartialEq>(old: &mut Option<T>, new: T) -> ParseResult<()> {$/;"	f
set_intense	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    pub fn set_intense(&mut self, yes: bool) -> &mut Style {$/;"	P	implementation:Style
set_isoweek	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub fn set_isoweek(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_isoyear	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub fn set_isoyear(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_isoyear_div_100	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub fn set_isoyear_div_100(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_isoyear_mod_100	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub fn set_isoyear_mod_100(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_left	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^    pub fn set_left(&mut self, left: N) {$/;"	P	implementation:Orthographic3
set_left_and_right	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^    pub fn set_left_and_right(&mut self, left: N, right: N) {$/;"	P	implementation:Orthographic3
set_logger	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^pub fn set_logger(logger: &'static Log) -> Result<(), SetLoggerError> {$/;"	f
set_logger_inner	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^fn set_logger_inner<F>(make_logger: F) -> Result<(), SetLoggerError>$/;"	f
set_logger_racy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^pub unsafe fn set_logger_racy(logger: &'static Log) -> Result<(), SetLoggerError> {$/;"	f
set_magnitude	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^    pub fn set_magnitude(&mut self, magnitude: N::SimdRealField)$/;"	P	implementation:Matrix
set_match	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn set_match(&mut self) {$/;"	P	implementation:StateFlags
set_max_level	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^pub fn set_max_level(level: LevelFilter) {$/;"	f
set_minute	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub fn set_minute(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_month	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub fn set_month(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_nanosecond	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub fn set_nanosecond(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_next	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn set_next(&mut self, si: StatePtr, cls: usize, next: StatePtr) {$/;"	P	implementation:Transitions
set_non_match	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn set_non_match(self, at: usize) -> Result<T> {$/;"	P	implementation:Result
set_offset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub fn set_offset(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_one	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn set_one(&mut self) {$/;"	P	implementation:Complex
set_one	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/identities.rs	/^    fn set_one(&mut self) {$/;"	P	interface:One
set_one	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/identities.rs	/^    fn set_one(&mut self) {$/;"	f
set_ordinal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub fn set_ordinal(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_partial_diagonal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn set_partial_diagonal(&mut self, diag: impl Iterator<Item = N>) {$/;"	P	implementation:Matrix
set_range	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn set_range(&mut self, start: u8, end: u8) {$/;"	P	implementation:ByteClassSet
set_right	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^    pub fn set_right(&mut self, right: N) {$/;"	P	implementation:Orthographic3
set_row	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/matrix.rs	/^    fn set_row(&self, i: usize, row: &Self::Row) -> Self {$/;"	P	interface:Matrix
set_row	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn set_row<C2: Dim, S2>(&mut self, i: usize, row: &RowVector<N, C2, S2>)$/;"	P	implementation:Matrix
set_row_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/matrix.rs	/^    fn set_row_mut(&mut self, i: usize, row: &Self::Row);$/;"	P	interface:Matrix
set_scaling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^    pub fn set_scaling(&mut self, scaling: N) {$/;"	f
set_second	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub fn set_second(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_timestamp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub fn set_timestamp(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_top	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^    pub fn set_top(&mut self, top: N) {$/;"	P	implementation:Orthographic3
set_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/matrix.rs	/^    unsafe fn set_unchecked(&mut self, i: usize, j: usize, val: Self::Field);$/;"	P	interface:Matrix
set_week_from_mon	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub fn set_week_from_mon(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_week_from_sun	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub fn set_week_from_sun(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_weekday	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub fn set_weekday(&mut self, value: Weekday) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_weekday_with_num_days_from_sunday	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parse.rs	/^fn set_weekday_with_num_days_from_sunday(p: &mut Parsed, v: i64) -> ParseResult<()> {$/;"	f
set_weekday_with_number_from_monday	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parse.rs	/^fn set_weekday_with_number_from_monday(p: &mut Parsed, v: i64) -> ParseResult<()> {$/;"	f
set_word	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn set_word(&mut self) {$/;"	P	implementation:StateFlags
set_word_boundary	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn set_word_boundary(&mut self) {$/;"	P	implementation:ByteClassSet
set_year	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub fn set_year(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_year_div_100	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub fn set_year_div_100(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_year_mod_100	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub fn set_year_mod_100(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_zero	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn set_zero(&mut self) {$/;"	P	implementation:Complex
set_zero	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/identities.rs	/^    fn set_zero(&mut self) {$/;"	P	interface:Zero
set_zero	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/identities.rs	/^    fn set_zero(&mut self) {$/;"	f
set_zfar	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^    pub fn set_zfar(&mut self, zfar: N) {$/;"	P	implementation:Orthographic3
set_zfar	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^    pub fn set_zfar(&mut self, zfar: N) {$/;"	P	implementation:Perspective3
set_znear	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^    pub fn set_znear(&mut self, znear: N) {$/;"	P	implementation:Orthographic3
set_znear	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^    pub fn set_znear(&mut self, znear: N) {$/;"	P	implementation:Perspective3
set_znear_and_zfar	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^    pub fn set_znear_and_zfar(&mut self, znear: N, zfar: N) {$/;"	P	implementation:Orthographic3
set_znear_and_zfar	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^    pub fn set_znear_and_zfar(&mut self, znear: N, zfar: N) {$/;"	P	implementation:Perspective3
shape	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^    fn shape(&self) -> (R, C) {$/;"	f
shape	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn shape(&self) -> (usize, usize) {$/;"	P	implementation:Matrix
shape	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs	/^    fn shape(&self) -> (R, C);$/;"	P	interface:Storage
shape	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^    fn shape(&self) -> (Dynamic, C) {$/;"	f
shape	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^    fn shape(&self) -> (R, Dynamic) {$/;"	f
shape	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    fn shape(&self) -> (R, C) {$/;"	f
shape	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    fn shape(&self) -> (R, C);$/;"	P	interface:CsStorage
shape	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    pub fn shape(&self) -> (usize, usize) {$/;"	P	implementation:CsMatrix
shl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn shl(self, _: B0) -> Self::Output {$/;"	P	implementation:UInt
shl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn shl(self, _: B0) -> Self::Output {$/;"	P	implementation:UTerm
shl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn shl(self, _: B1) -> Self::Output {$/;"	P	implementation:UInt
shl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn shl(self, _: B1) -> Self::Output {$/;"	P	implementation:UTerm
shl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn shl(self, _: U) -> Self::Output {$/;"	P	implementation:UTerm
shl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn shl(self, _: UTerm) -> Self::Output {$/;"	P	implementation:UInt
shl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn shl(self, rhs: UInt<Ur, Br>) -> Self::Output {$/;"	f
short_month0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/scan.rs	/^pub fn short_month0(s: &str) -> ParseResult<(&str, u8)> {$/;"	f
short_or_long_month0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/scan.rs	/^pub fn short_or_long_month0(s: &str) -> ParseResult<(&str, u8)> {$/;"	f
short_or_long_weekday	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/scan.rs	/^pub fn short_or_long_weekday(s: &str) -> ParseResult<(&str, Weekday)> {$/;"	f
short_weekday	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/scan.rs	/^pub fn short_weekday(s: &str) -> ParseResult<(&str, Weekday)> {$/;"	f
shortest_dfa	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    fn shortest_dfa(&self, text: &[u8], start: usize) -> dfa::Result<usize> {$/;"	P	implementation:ExecNoSync
shortest_dfa_reverse_suffix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    fn shortest_dfa_reverse_suffix($/;"	P	implementation:ExecNoSync
shortest_match	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    pub fn shortest_match(&self, text: &[u8]) -> Option<usize> {$/;"	P	implementation:Regex
shortest_match	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    pub fn shortest_match(&self, text: &str) -> Option<usize> {$/;"	P	implementation:Regex
shortest_match_at	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    fn shortest_match_at(&self, text: &[u8], start: usize) -> Option<usize> {$/;"	P	implementation:ExecNoSync
shortest_match_at	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    fn shortest_match_at(&self, text: &str, start: usize) -> Option<usize> {$/;"	P	implementation:ExecNoSyncStr
shortest_match_at	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    pub fn shortest_match_at($/;"	P	implementation:Regex
shortest_match_at	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_trait.rs	/^    fn shortest_match_at($/;"	P	interface:RegularExpression
shortest_match_at	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    pub fn shortest_match_at($/;"	P	implementation:Regex
shortest_nfa	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    fn shortest_nfa(&self, text: &[u8], start: usize) -> Option<usize> {$/;"	P	implementation:ExecNoSync
shortest_nfa_type	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    fn shortest_nfa_type($/;"	P	implementation:ExecNoSync
should_exec	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/backtrack.rs	/^pub fn should_exec(num_insts: usize, text_len: usize) -> bool {$/;"	f
should_suffix_scan	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    fn should_suffix_scan(&self) -> bool {$/;"	P	implementation:ExecReadOnly
should_use	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    fn should_use(pattern: &[u8]) -> bool {$/;"	P	implementation:BoyerMooreSearch
show_state_ptr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^fn show_state_ptr(si: StatePtr) -> String {$/;"	f
shr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn shr(self, _: B0) -> Self::Output {$/;"	P	implementation:UInt
shr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn shr(self, _: B0) -> Self::Output {$/;"	P	implementation:UTerm
shr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn shr(self, _: B1) -> Self::Output {$/;"	P	implementation:UInt
shr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn shr(self, _: B1) -> Self::Output {$/;"	P	implementation:UTerm
shr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn shr(self, _: U) -> Self::Output {$/;"	P	implementation:UTerm
shr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn shr(self, _: UTerm) -> Self::Output {$/;"	P	implementation:UInt
shr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn shr(self, rhs: UInt<Ur, Br>) -> Self::Output {$/;"	f
shuffle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^    fn shuffle<R>(&mut self, rng: &mut R)$/;"	P	implementation:T
shuffle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^    fn shuffle<R>(&mut self, rng: &mut R)$/;"	P	interface:SliceRandom
sift_down	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs	/^fn sift_down<T, S>(heap: &mut [T], index: usize, mut less_than: S)$/;"	f
sign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^pub mod sign;$/;"	n
signed_duration_since	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    pub fn signed_duration_since<Tz2: TimeZone>(self, rhs: Date<Tz2>) -> OldDuration {$/;"	P	implementation:Date
signed_duration_since	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    pub fn signed_duration_since<Tz2: TimeZone>(self, rhs: DateTime<Tz2>) -> OldDuration {$/;"	P	implementation:DateTime
signed_duration_since	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    pub fn signed_duration_since(self, rhs: NaiveDate) -> OldDuration {$/;"	P	implementation:NaiveDate
signed_duration_since	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    pub fn signed_duration_since(self, rhs: NaiveDateTime) -> OldDuration {$/;"	P	implementation:NaiveDateTime
signed_duration_since	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    pub fn signed_duration_since(self, rhs: NaiveTime) -> OldDuration {$/;"	P	implementation:NaiveTime
signed_float_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/sign.rs	/^macro_rules! signed_float_impl {$/;"	M
signed_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/sign.rs	/^macro_rules! signed_impl {$/;"	M
signed_shl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/int.rs	/^    fn signed_shl(self, n: u32) -> Self;$/;"	P	interface:PrimInt
signed_shr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/int.rs	/^    fn signed_shr(self, n: u32) -> Self;$/;"	P	interface:PrimInt
signum	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn signum(self) -> Self {$/;"	P	interface:ComplexField
signum	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn signum(self) -> Self {$/;"	P	interface:FloatCore
signum	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn signum(self) -> Self;$/;"	P	interface:Float
signum	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn signum(self) -> Self;$/;"	P	interface:Real
signum	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/sign.rs	/^    fn signum(&self) -> Self {$/;"	f
signum	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/sign.rs	/^    fn signum(&self) -> Self;$/;"	P	interface:Signed
signum	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/sign.rs	/^pub fn signum<T: Signed>(value: T) -> T {$/;"	f
simd_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/integer.rs	/^macro_rules! simd_impl {$/;"	M
simd_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/utils.rs	/^macro_rules! simd_impl {$/;"	M
simd_try_inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn simd_try_inverse(&self) -> SimdOption<Self> {$/;"	f
simd_try_normalize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^    pub fn simd_try_normalize(&self, min_norm: N::SimdRealField) -> SimdOption<MatrixMN<N, R, C>/;"	P	implementation:Matrix
simd_try_normalize_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^    pub fn simd_try_normalize_mut($/;"	P	implementation:Matrix
simd_wmul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/utils.rs	/^mod simd_wmul {$/;"	n
similarity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod similarity;$/;"	n
similarity_alga	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod similarity_alga;$/;"	n
similarity_alias	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod similarity_alias;$/;"	n
similarity_binop_assign_impl_all	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_ops.rs	/^macro_rules! similarity_binop_assign_impl_all($/;"	M
similarity_binop_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_ops.rs	/^macro_rules! similarity_binop_impl($/;"	M
similarity_binop_impl_all	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_ops.rs	/^macro_rules! similarity_binop_impl_all($/;"	M
similarity_construction	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod similarity_construction;$/;"	n
similarity_construction_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs	/^macro_rules! similarity_construction_impl($/;"	M
similarity_conversion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod similarity_conversion;$/;"	n
similarity_from_composition_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_ops.rs	/^macro_rules! similarity_from_composition_impl($/;"	M
similarity_from_composition_impl_all	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_ops.rs	/^macro_rules! similarity_from_composition_impl_all($/;"	M
similarity_ops	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod similarity_ops;$/;"	n
similarity_simba	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod similarity_simba;$/;"	n
sin	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn sin(self) -> Self {$/;"	P	implementation:Complex
sin	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn sin(self) -> Self;$/;"	P	interface:ComplexField
sin	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn sin(&self) -> Self {$/;"	f
sin	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub fn sin(&self) -> Self {$/;"	P	implementation:Complex
sin	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn sin(self) -> Self {$/;"	P	implementation:f32
sin	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn sin(self) -> Self {$/;"	P	implementation:f64
sin	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn sin(self) -> Self;$/;"	P	interface:Float
sin	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn sin(self) -> Self;$/;"	P	interface:Real
sin_angle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs	/^    pub fn sin_angle(&self) -> N {$/;"	f
sin_cos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn sin_cos(self) -> (Self, Self) {$/;"	P	implementation:Complex
sin_cos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn sin_cos(self) -> (Self, Self);$/;"	P	interface:ComplexField
sin_cos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn sin_cos(self) -> (Self, Self) {$/;"	P	implementation:f32
sin_cos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn sin_cos(self) -> (Self, Self) {$/;"	P	implementation:f64
sin_cos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn sin_cos(self) -> (Self, Self);$/;"	P	interface:Float
sin_cos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn sin_cos(self) -> (Self, Self);$/;"	P	interface:Real
sinc	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn sinc(self) -> Self {$/;"	P	interface:ComplexField
single	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^    pub fn single(self) -> Option<T> {$/;"	P	implementation:LocalResult
singular_values	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs	/^    pub fn singular_values(&self) -> VectorN<N::RealField, DimMinimum<R, C>> {$/;"	f
singular_values	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs	/^    pub singular_values: VectorN<N::RealField, DimMinimum<R, C>>,$/;"	m	struct:SVD
sinh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn sinh(self) -> Self {$/;"	P	implementation:Complex
sinh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn sinh(self) -> Self;$/;"	P	interface:ComplexField
sinh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn sinh(&self) -> Self {$/;"	f
sinh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub fn sinh(&self) -> Self {$/;"	P	implementation:Complex
sinh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn sinh(self) -> Self {$/;"	P	implementation:f32
sinh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn sinh(self) -> Self {$/;"	P	implementation:f64
sinh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn sinh(self) -> Self;$/;"	P	interface:Float
sinh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn sinh(self) -> Self;$/;"	P	interface:Real
sinh_cosh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn sinh_cosh(self) -> (Self, Self) {$/;"	P	implementation:Complex
sinh_cosh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn sinh_cosh(self) -> (Self, Self) {$/;"	P	interface:ComplexField
sinhc	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn sinhc(self) -> Self {$/;"	P	interface:ComplexField
size	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    size: usize,$/;"	m	struct:ChunkIndex
size	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^    fn size(&self, _: D) -> Self::Size {$/;"	P	implementation:Range
size	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^    fn size(&self, _: D) -> Self::Size {$/;"	P	implementation:RangeTo
size	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^    fn size(&self, _: D) -> Self::Size {$/;"	P	implementation:usize
size	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^    fn size(&self, dim: D) -> Self::Size {$/;"	P	implementation:RangeFrom
size	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^    fn size(&self, dim: D) -> Self::Size {$/;"	P	implementation:RangeFull
size	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^    fn size(&self, shape: D) -> Self::Size;$/;"	P	interface:SliceRange
size	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    size: usize,$/;"	m	struct:CacheInner
size_cache_racing_keys_eviction_regression	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn size_cache_racing_keys_eviction_regression() {$/;"	f	module:tests
size_hint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/iter.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/exactly_one_err.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/intersperse.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^mod size_hint;$/;"	n
size_hint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/merge_join.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/pad_tail.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:PutBackN
size_hint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/repeatn.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tee.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:WithPosition
size_hint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_eq_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_longest.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:ColumnIter
size_hint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:ColumnIterMut
size_hint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:RowIter
size_hint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:RowIterMut
size_hint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:IndexVecIntoIter
size_hint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:IndexVecIter
size_hint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^        fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:test::ChunkHintedIterator
size_hint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^        fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:test::WindowHintedIterator
size_hint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:SliceChooseIter
size_hint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:CaptureNames
size_hint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:CaptureNames
size_limit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    pub fn size_limit(mut self, size_limit: usize) -> Self {$/;"	P	implementation:Compiler
size_limit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    size_limit: usize,$/;"	m	struct:Compiler
size_limit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_builder.rs	/^    pub size_limit: usize,$/;"	m	struct:RegexOptions
sized_cache	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn sized_cache() {$/;"	f	module:tests
sized_cache_get_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn sized_cache_get_mut() {$/;"	f	module:tests
skip	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    skip: usize,$/;"	m	struct:Step
skip	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    pub fn skip(&self, mut pc: usize) -> usize {$/;"	P	implementation:Program
skip_loop	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    fn skip_loop($/;"	P	implementation:BoyerMooreSearch
skip_table	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    skip_table: Vec<usize>,$/;"	m	struct:BoyerMooreSearch
slerp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn slerp<S2: Storage<N, D>>($/;"	P	implementation:Unit
slerp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn slerp(&self, other: &Self, t: N) -> Self$/;"	f
slice	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^    slice: &'a S,$/;"	m	struct:SliceChooseIter
slice_range	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^    pub fn slice_range<RowRange, ColRange>($/;"	P	implementation:Matrix
slice_range_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^    pub fn slice_range_mut<RowRange, ColRange>($/;"	P	implementation:Matrix
slice_storage_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^macro_rules! slice_storage_impl($/;"	M
slot	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    pub slot: usize,$/;"	m	struct:InstSave
slots	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/backtrack.rs	/^    slots: &'s mut [Slot],$/;"	m	struct:Bounded
slots_len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    fn slots_len(&self) -> usize {$/;"	P	implementation:ExecNoSync
slots_len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    fn slots_len(&self) -> usize {$/;"	P	implementation:ExecNoSyncStr
slots_len	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_trait.rs	/^    fn slots_len(&self) -> usize;$/;"	P	interface:RegularExpression
slots_per_thread	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/pikevm.rs	/^    slots_per_thread: usize,$/;"	m	struct:Threads
small	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/mod.rs	/^#[cfg(feature = "small_rng")] mod small;$/;"	n
smalls_head	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^            smalls_head: u32,$/;"	m	struct:WeightedIndex::new::Aliases
smalls_is_empty	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^            fn smalls_is_empty(&self) -> bool {$/;"	P	implementation:WeightedIndex::new::Aliases
solve	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs	/^    pub fn solve<R2: Dim, C2: Dim, S2>(&self, b: &Matrix<N, R2, C2, S2>) -> MatrixMN<N, R2, C2>$/;"	f
solve	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs	/^    pub fn solve<R2: Dim, C2: Dim, S2>($/;"	f
solve	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs	/^    pub fn solve<R2: Dim, C2: Dim, S2>($/;"	f
solve	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/mod.rs	/^mod solve;$/;"	n
solve	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs	/^    pub fn solve<R2: Dim, C2: Dim, S2>($/;"	f
solve	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs	/^    pub fn solve<R2: Dim, C2: Dim, S2>($/;"	f
solve_lower_triangular	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs	/^    pub fn solve_lower_triangular<R2: Dim, C2: Dim, S2>($/;"	P	implementation:SquareMatrix
solve_lower_triangular	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_solve.rs	/^    pub fn solve_lower_triangular<R2: Dim, C2: Dim, S2>($/;"	P	implementation:CsMatrix
solve_lower_triangular_cs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_solve.rs	/^    pub fn solve_lower_triangular_cs<D2: Dim, S2>($/;"	P	implementation:CsMatrix
solve_lower_triangular_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs	/^    pub fn solve_lower_triangular_mut<R2: Dim, C2: Dim, S2>($/;"	P	implementation:SquareMatrix
solve_lower_triangular_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_solve.rs	/^    pub fn solve_lower_triangular_mut<R2: Dim, C2: Dim, S2>($/;"	P	implementation:CsMatrix
solve_lower_triangular_vector_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs	/^    fn solve_lower_triangular_vector_mut<R2: Dim, S2>(&self, b: &mut Vector<N, R2, S2>) -> bool$/;"	P	implementation:SquareMatrix
solve_lower_triangular_with_diag_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs	/^    pub fn solve_lower_triangular_with_diag_mut<R2: Dim, C2: Dim, S2>($/;"	P	implementation:SquareMatrix
solve_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs	/^    pub fn solve_mut<R2: Dim, C2: Dim, S2>(&self, b: &mut Matrix<N, R2, C2, S2>)$/;"	f
solve_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs	/^    pub fn solve_mut<R2: Dim, C2: Dim, S2>(&self, b: &mut Matrix<N, R2, C2, S2>) -> bool$/;"	f
solve_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs	/^    pub fn solve_mut<R2: Dim, C2: Dim, S2>(&self, b: &mut Matrix<N, R2, C2, S2>) -> bool$/;"	f
solve_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs	/^    pub fn solve_mut<R2: Dim, C2: Dim, S2>(&self, b: &mut Matrix<N, R2, C2, S2>) -> bool$/;"	f
solve_upper_triangular	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs	/^    pub fn solve_upper_triangular<R2: Dim, C2: Dim, S2>($/;"	P	implementation:SquareMatrix
solve_upper_triangular_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs	/^    fn solve_upper_triangular_mut<R2: Dim, C2: Dim, S2>($/;"	f
solve_upper_triangular_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs	/^    pub fn solve_upper_triangular_mut<R2: Dim, C2: Dim, S2>($/;"	P	implementation:SquareMatrix
solve_upper_triangular_vector_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs	/^    fn solve_upper_triangular_vector_mut<R2: Dim, S2>(&self, b: &mut Vector<N, R2, S2>) -> bool$/;"	P	implementation:SquareMatrix
sort	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    pub(crate) fn sort(&mut self)$/;"	f
sort	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/cauchy.rs	/^    fn sort(numbers: &mut [f64]) {$/;"	f	module:test
sort_with_workspace	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    pub(crate) fn sort_with_workspace(&mut self, workspace: &mut [N]) {$/;"	f
sorted	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs	/^pub fn sorted<I>(iterable: I) -> VecIntoIter<I::Item>$/;"	f
sorted	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn sorted(self) -> VecIntoIter<Self::Item>$/;"	P	interface:Itertools
sorted_by	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn sorted_by<F>(self, cmp: F) -> VecIntoIter<Self::Item>$/;"	P	interface:Itertools
sorted_by_key	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn sorted_by_key<K, F>(self, f: F) -> VecIntoIter<Self::Item>$/;"	P	interface:Itertools
source	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/mod.rs	/^mod source;$/;"	n
source	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/read.rs	/^    fn source(&self) -> Option<&(dyn std::error::Error + 'static)> {$/;"	P	implementation:ReadError
source	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/entropy.rs	/^    source: OsRng,$/;"	m	struct:EntropyRng
source_is_object_safe	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^    fn source_is_object_safe() {$/;"	f	module:tests
sources	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^mod sources;$/;"	n
sp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^macro_rules! sp   { ($x:expr) => (Item::Space($x)) }$/;"	M
space	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/scan.rs	/^pub fn space(s: &str) -> ParseResult<&str> {$/;"	f
span_for_digits	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/round.rs	/^fn span_for_digits(digits: u16) -> u32 {$/;"	f
sparse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs	/^pub mod sparse;$/;"	n
sparse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    sparse: Box<[usize]>,$/;"	m	struct:SuffixCache
sparse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/lib.rs	/^mod sparse;$/;"	n
sparse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    sparse: Vec<bool>,$/;"	m	struct:SingleByteSet
sparse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/sparse.rs	/^    sparse: Box<[usize]>,$/;"	m	struct:SparseSet
sparse	/Users/williamcashman/Honours/Program/n_poly/src/lib.rs	/^pub mod sparse;$/;"	n
spec	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    spec: ColorSpec,$/;"	m	struct:Style
specialize_structures	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/specialized.rs	/^macro_rules! specialize_structures($/;"	M
specialized	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/mod.rs	/^mod specialized;$/;"	n
splat	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_simba.rs	/^    fn splat(val: Self::Element) -> Self {$/;"	f
splat	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_simba.rs	/^    fn splat(val: Self::Element) -> Self {$/;"	f
splat	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_simba.rs	/^    fn splat(val: Self::Element) -> Self {$/;"	f
splat	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_simba.rs	/^    fn splat(val: Self::Element) -> Self {$/;"	f
splat	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_simba.rs	/^    fn splat(val: Self::Element) -> Self {$/;"	f
splat	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_simba.rs	/^    fn splat(val: Self::Element) -> Self {$/;"	f
splat	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_simba.rs	/^    fn splat(val: Self::Element) -> Self {$/;"	f
splat	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_simba.rs	/^    fn splat(val: Self::Element) -> Self {$/;"	f
splat	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_simba.rs	/^    fn splat(val: Self::Element) -> Self {$/;"	f
splat	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/utils.rs	/^    fn splat(scalar: Self) -> Self {$/;"	P	interface:FloatAsSIMD
split	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^    fn split(self) -> (Self::First, Self::Second) {$/;"	f
split	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/sequence.rs	/^    fn split(self) -> (Self::First, Self::Second);$/;"	P	interface:Split
split	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    pub fn split<'r, 't>(&'r self, text: &'t [u8]) -> Split<'r, 't> {$/;"	P	implementation:Regex
split	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    pub fn split<'r, 't>(&'r self, text: &'t str) -> Split<'r, 't> {$/;"	P	implementation:Regex
splitn	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    pub fn splitn<'r, 't>($/;"	P	implementation:Regex
splitn	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    pub fn splitn<'r, 't>($/;"	P	implementation:Regex
splits	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    splits: Split<'r, 't>,$/;"	m	struct:SplitN
splits	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    splits: Split<'r, 't>,$/;"	m	struct:SplitN
sqrt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn sqrt(self) -> Self {$/;"	P	implementation:Complex
sqrt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn sqrt(self) -> Self;$/;"	P	interface:ComplexField
sqrt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn sqrt(&self) -> Self {$/;"	f
sqrt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub fn sqrt(&self) -> Self {$/;"	P	implementation:Complex
sqrt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn sqrt(self) -> Self {$/;"	P	implementation:f32
sqrt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn sqrt(self) -> Self {$/;"	P	implementation:f64
sqrt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn sqrt(self) -> Self;$/;"	P	interface:Float
sqrt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn sqrt(self) -> Self;$/;"	P	interface:Real
sqrt_2lambda	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/poisson.rs	/^    sqrt_2lambda: f64,$/;"	m	struct:Poisson
sqrt_test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^fn sqrt_test() {$/;"	f
squared	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn squared(&self) -> Self {$/;"	f
stack	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/cache.rs	/^        stack: Mutex<Vec<T>>,$/;"	m	struct:imp::Cached
stack	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    stack: Vec<InstPtr>,$/;"	m	struct:CacheInner
stack	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/pikevm.rs	/^    stack: &'r mut Vec<FollowEpsilon>,$/;"	m	struct:Fsm
stack	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/pikevm.rs	/^    stack: Vec<FollowEpsilon>,$/;"	m	struct:Cache
standard_f64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/crand.rs	/^fn standard_f64() {$/;"	f
start	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    start: u8,$/;"	m	struct:SuffixCacheKey
start	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    start: StatePtr,$/;"	m	struct:Fsm
start	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    start: bool,$/;"	m	struct:EmptyFlags
start	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    pub start: InstPtr,$/;"	m	struct:Program
start	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    pub start: u8,$/;"	m	struct:InstBytes
start	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    pub fn start(&self) -> usize {$/;"	P	implementation:Match
start	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    start: usize,$/;"	m	struct:Match
start	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    pub fn start(&self) -> usize {$/;"	P	implementation:Match
start	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    start: usize,$/;"	m	struct:Match
start_flags	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn start_flags(&self, text: &[u8], at: usize) -> (EmptyFlags, StateFlags) {$/;"	P	implementation:Fsm
start_flags_reverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn start_flags_reverse($/;"	P	implementation:Fsm
start_line	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    start_line: bool,$/;"	m	struct:EmptyFlags
start_ptr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn start_ptr(&self, si: StatePtr) -> StatePtr {$/;"	P	implementation:Fsm
start_state	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn start_state($/;"	P	implementation:Fsm
start_states	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    start_states: Vec<StatePtr>,$/;"	m	struct:CacheInner
state	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs	/^    state: PermutationState,$/;"	m	struct:Permutations
state	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs	/^    pub state: St,$/;"	m	struct:Unfold
state	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs	/^    state: St,$/;"	m	struct:Iterate
state	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn state(&self, si: StatePtr) -> &State {$/;"	P	implementation:Fsm
state_heap_size	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn state_heap_size(&self) -> usize {$/;"	P	implementation:Transitions
states	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    states: Vec<State>,$/;"	m	struct:StateMap
statistics	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs	/^mod statistics;$/;"	n
std	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/mod.rs	/^mod std;$/;"	n
std_dev	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/normal.rs	/^    std_dev: f64,$/;"	m	struct:Normal
std_fmt_impls	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^mod std_fmt_impls {$/;"	n
std_support	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/error.rs	/^mod std_support {$/;"	n
std_support	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^mod std_support {$/;"	n
std_support	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^mod std_support {$/;"	n
std_support	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^mod std_support {$/;"	n
stderr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    pub(in crate::fmt::writer) fn stderr(is_test: bool, write_style: WriteStyle) -> Self {$/;"	P	implementation:BufferWriter
stderr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/shim_impl.rs	/^    pub(in crate::fmt::writer) fn stderr(_is_test: bool, _write_style: WriteStyle) -> Self {$/;"	P	implementation:BufferWriter
stdout	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    pub(in crate::fmt::writer) fn stdout(is_test: bool, write_style: WriteStyle) -> Self {$/;"	P	implementation:BufferWriter
stdout	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/shim_impl.rs	/^    pub(in crate::fmt::writer) fn stdout(_is_test: bool, _write_style: WriteStyle) -> Self {$/;"	P	implementation:BufferWriter
step	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub fn step<I>(iter: I, step: usize) -> Step<I>$/;"	f
step	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    fn step(&mut self, client: usize) -> Option<I::Item> {$/;"	f
step	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    fn step(&self, client: usize) -> Option<I::Item> {$/;"	f
step	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    fn step(&self, client: usize) -> Option<I::Item>$/;"	f
step	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn step(self, n: usize) -> Step<Self>$/;"	P	interface:Itertools
step	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/backtrack.rs	/^    fn step(&mut self, mut ip: InstPtr, mut at: InputAt) -> bool {$/;"	P	implementation:Bounded
step	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/pikevm.rs	/^    fn step($/;"	P	implementation:Fsm
step_buffering	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    fn step_buffering(&mut self, client: usize) -> Option<I::Item> {$/;"	f
step_current	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    fn step_current(&mut self) -> Option<I::Item> {$/;"	f
stirling	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/binomial.rs	/^                fn stirling(a: f64) -> f64 {$/;"	f	method:Binomial::sample
storage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs	/^pub mod storage;$/;"	n
storage_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^macro_rules! storage_impl($/;"	M
store	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    store: HashMap<K, (Instant, V)>,$/;"	m	struct:TimedCache
store	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    store: HashMap<K, V>,$/;"	m	struct:UnboundCache
store	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    store: HashMap<K, usize>,$/;"	m	struct:SizedCache
stores	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/lib.rs	/^pub mod stores;$/;"	n
str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    static LONG_MONTHS: [&'static str; 12] =$/;"	v	function:format
str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    static LONG_WEEKDAYS: [&'static str; 7] =$/;"	v	function:format
str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    static SHORT_MONTHS: [&'static str; 12] =$/;"	v	function:format
str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    static SHORT_WEEKDAYS: [&'static str; 7] =$/;"	v	function:format
str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parse.rs	/^    static RFC850_FMT: &'static str =  "%A, %d-%b-%y %T GMT";$/;"	v	function:parse_rfc850
str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/scan.rs	/^    static LONG_MONTH_SUFFIXES: [&'static str; 12] =$/;"	v	function:short_or_long_month0
str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/scan.rs	/^    static LONG_WEEKDAY_SUFFIXES: [&'static str; 7] =$/;"	v	function:short_or_long_weekday
str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/strftime.rs	/^const HAVE_ALTERNATES: &'static str = "z";$/;"	v
str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^type SubtleStyle = &'static str;$/;"	v
str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^type SubtleStyle = StyledValue<'static, &'static str>;$/;"	v
str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^pub const DEFAULT_FILTER_ENV: &'static str = "RUST_LOG";$/;"	v
str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^pub const DEFAULT_WRITE_STYLE_ENV: &'static str = "RUST_LOG_STYLE";$/;"	v
str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^impl ToKey for str {$/;"	c
str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^impl<'v> ToValue for &'v str {$/;"	c
str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        fn str(&mut self, v: &str) -> Result<(), Error> {$/;"	P	implementation:fmt_support::FmtVisitor
str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        fn str(&mut self, v: &str) -> Result<(), Error> {$/;"	P	implementation:sval_support::SvalVisitor
str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    fn str(&mut self, v: &str) -> Result<(), Error>;$/;"	P	interface:Visitor
str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/test.rs	/^            fn str(&mut self, v: &str) -> Result<(), Error> {$/;"	P	implementation:Value::to_token::TestVisitor
str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^static LEVEL_PARSE_ERROR: &'static str =$/;"	v
str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^static LOG_LEVEL_NAMES: [&'static str; 6] = ["OFF", "ERROR", "WARN", "INFO", "DEBUG", "TRACE"];$/;"	v
str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^static SET_LOGGER_ERROR: &'static str = "attempted to set a logger after the logging system \\$/;"	v
str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^impl<'a> Replacer for &'a str {$/;"	c
str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^impl<'t> From<Match<'t>> for &'t str {$/;"	c
str	/Users/williamcashman/Honours/Program/n_poly/src/algebras/complex.rs	/^    const REGEX: &'static str = r"-?\\d*\\.\\d*\\s*(\\+|-)\\s*\\d*\\.\\d*i";$/;"	v	implementation:CC
str	/Users/williamcashman/Honours/Program/n_poly/src/algebras/finite_field.rs	/^    const REGEX: &'static str = r"-?\\d+";$/;"	v	implementation:FF
str	/Users/williamcashman/Honours/Program/n_poly/src/algebras/integers.rs	/^    const REGEX: &'static str = r"-?\\d+";$/;"	v	implementation:ZZ
str	/Users/williamcashman/Honours/Program/n_poly/src/algebras/mod.rs	/^    const REGEX: &'static str;$/;"	v	interface:ScalarRing
str	/Users/williamcashman/Honours/Program/n_poly/src/algebras/real.rs	/^    const REGEX: &'static str = r"\\d*\\.\\d*";$/;"	v	implementation:RR
stream	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        fn stream(&self, s: &mut sval::value::Stream) -> sval::value::Result {$/;"	P	implementation:sval_support::Value
strftime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^pub mod strftime;$/;"	n
stride	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^    pub fn stride(&self) -> usize {$/;"	f
strides	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^    fn strides(&self) -> (Self::RStride, Self::CStride) {$/;"	f
strides	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn strides(&self) -> (usize, usize) {$/;"	P	implementation:Matrix
strides	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs	/^    fn strides(&self) -> (Self::RStride, Self::CStride);$/;"	P	interface:Storage
strides	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs	/^    fn strides(&self) -> (Self::RStride, Self::CStride) {$/;"	f
structs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^pub mod structs {$/;"	n
style	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    pub fn style(&self) -> Style {$/;"	P	implementation:Formatter
style	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    style: Cow<'a, Style>,$/;"	m	struct:StyledValue
sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/wrapper.rs	/^    fn sub(self, lhs: Self) -> Self {$/;"	f
sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    fn sub(self, rhs: Date<Tz>) -> OldDuration {$/;"	P	implementation:Date
sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    fn sub(self, rhs: OldDuration) -> Date<Tz> {$/;"	P	implementation:Date
sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn sub(self, rhs: DateTime<Tz>) -> OldDuration {$/;"	P	implementation:DateTime
sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn sub(self, rhs: OldDuration) -> DateTime<Tz> {$/;"	P	implementation:DateTime
sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn sub(self, rhs: NaiveDate) -> OldDuration {$/;"	P	implementation:NaiveDate
sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn sub(self, rhs: OldDuration) -> NaiveDate {$/;"	P	implementation:NaiveDate
sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn sub(self, rhs: NaiveDateTime) -> OldDuration {$/;"	P	implementation:NaiveDateTime
sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn sub(self, rhs: OldDuration) -> NaiveDateTime {$/;"	P	implementation:NaiveDateTime
sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    fn sub(self, rhs: NaiveTime) -> OldDuration {$/;"	P	implementation:NaiveTime
sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    fn sub(self, rhs: OldDuration) -> NaiveTime {$/;"	P	implementation:NaiveTime
sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/fixed.rs	/^    fn sub(self, rhs: FixedOffset) -> DateTime<Tz> {$/;"	P	implementation:DateTime
sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/fixed.rs	/^    fn sub(self, rhs: FixedOffset) -> NaiveDateTime {$/;"	P	implementation:NaiveDateTime
sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/fixed.rs	/^    fn sub(self, rhs: FixedOffset) -> NaiveTime {$/;"	P	implementation:NaiveTime
sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    fn sub(self, rhs: Duration) -> Duration {$/;"	P	implementation:Duration
sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^    fn sub(self, rhs: usize) -> Self {$/;"	P	implementation:Dynamic
sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn sub(self, other: Self) -> Self::Output {$/;"	P	implementation:Complex
sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn sub(self, other: T) -> Self::Output {$/;"	P	implementation:Complex
sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^    fn sub(self, _: ATerm) -> Self::Output {$/;"	P	implementation:ATerm
sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^    fn sub(self, rhs: TArr<Vr, Ar>) -> Self::Output {$/;"	f
sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn sub(self, _: NInt<U>) -> Self::Output {$/;"	P	implementation:Z0
sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn sub(self, _: NInt<Ur>) -> Self::Output {$/;"	f
sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn sub(self, _: PInt<U>) -> Self::Output {$/;"	P	implementation:Z0
sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn sub(self, _: PInt<Ur>) -> Self::Output {$/;"	f
sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn sub(self, _: Z0) -> Self::Output {$/;"	P	implementation:NInt
sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn sub(self, _: Z0) -> Self::Output {$/;"	P	implementation:PInt
sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn sub(self, _: Z0) -> Self::Output {$/;"	P	implementation:Z0
sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn sub(self, rhs: NInt<Ur>) -> Self::Output {$/;"	f
sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn sub(self, rhs: PInt<Ur>) -> Self::Output {$/;"	f
sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn sub(self, _: B0) -> Self::Output {$/;"	P	implementation:UInt
sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn sub(self, _: B0) -> Self::Output {$/;"	P	implementation:UTerm
sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn sub(self, _: B1) -> Self::Output {$/;"	P	implementation:UInt
sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn sub(self, _: B1) -> Self::Output {$/;"	f
sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn sub(self, _: UTerm) -> Self::Output {$/;"	P	implementation:UTerm
sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn sub(self, rhs: Ur) -> Self::Output {$/;"	f
sub	/Users/williamcashman/Honours/Program/n_poly/src/algebras/complex.rs	/^    fn sub(&self, other: &Self) -> Self {$/;"	P	implementation:CC
sub	/Users/williamcashman/Honours/Program/n_poly/src/algebras/finite_field.rs	/^    fn sub(&self, other: &Self) -> Self {$/;"	P	implementation:FF
sub	/Users/williamcashman/Honours/Program/n_poly/src/algebras/integers.rs	/^    fn sub(&self, other: &Self) -> Self {$/;"	P	implementation:ZZ
sub	/Users/williamcashman/Honours/Program/n_poly/src/algebras/mod.rs	/^    fn sub(&self, other: &Self) -> Self;$/;"	P	interface:Group
sub	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    fn sub(&self, _other: &Self) -> Self {$/;"	P	implementation:Term
sub	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    fn sub(&self, other: &Self) -> Option<Self>;$/;"	P	interface:Variate
sub	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    fn sub(&self, other: &Self) -> Self {$/;"	P	implementation:Poly
sub	/Users/williamcashman/Honours/Program/n_poly/src/algebras/real.rs	/^    fn sub(&self, other: &Self) -> Self {$/;"	P	implementation:RR
sub	/Users/williamcashman/Honours/Program/n_poly/src/polym.rs	/^    fn sub(&self, other: &Self) -> Option<Self> {$/;"	P	implementation:MultiIndex
sub	/Users/williamcashman/Honours/Program/n_poly/src/polyu.rs	/^    fn sub(&self, other: &Self) -> Option<Self> {$/;"	P	implementation:UniIndex
sub_ass	/Users/williamcashman/Honours/Program/n_poly/src/algebras/complex.rs	/^    fn sub_ass(&mut self, other: &Self) {$/;"	P	implementation:CC
sub_ass	/Users/williamcashman/Honours/Program/n_poly/src/algebras/finite_field.rs	/^    fn sub_ass(&mut self, other: &Self) {$/;"	P	implementation:FF
sub_ass	/Users/williamcashman/Honours/Program/n_poly/src/algebras/integers.rs	/^    fn sub_ass(&mut self, other: &Self) {$/;"	P	implementation:ZZ
sub_ass	/Users/williamcashman/Honours/Program/n_poly/src/algebras/mod.rs	/^    fn sub_ass(&mut self, other: &Self);$/;"	P	interface:ScalarRing
sub_ass	/Users/williamcashman/Honours/Program/n_poly/src/algebras/real.rs	/^    fn sub_ass(&mut self, other: &Self) {$/;"	P	implementation:RR
sub_assign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn sub_assign(&mut self, rhs: OldDuration) {$/;"	P	implementation:NaiveDate
sub_assign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn sub_assign(&mut self, rhs: OldDuration) {$/;"	P	implementation:NaiveDateTime
sub_assign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    fn sub_assign(&mut self, rhs: OldDuration) {$/;"	P	implementation:NaiveTime
sub_assign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn sub_assign(&mut self, other: Self) {$/;"	P	implementation:opassign::Complex
sub_assign	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn sub_assign(&mut self, other: T) {$/;"	P	implementation:opassign::Complex
sub_scalar	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/size_hint.rs	/^pub fn sub_scalar(sh: SizeHint, x: usize) -> SizeHint {$/;"	f
subdiag	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs	/^    subdiag: VectorN<N, DimDiff<D, U1>>,$/;"	m	struct:Hessenberg
subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/mod.rs	/^mod subset;$/;"	n
subtle_style	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    fn subtle_style(&self, text: &'static str) -> SubtleStyle {$/;"	P	implementation:DefaultFormat
succ	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    pub fn succ(&self) -> Date<Tz> {$/;"	P	implementation:Date
succ	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    pub fn succ(&self) -> Weekday {$/;"	P	implementation:Weekday
succ	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    pub fn succ(&self) -> NaiveDate {$/;"	P	implementation:NaiveDate
succ	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    pub fn succ(&self) -> Of {$/;"	P	implementation:Of
succ_opt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    pub fn succ_opt(&self) -> Option<Date<Tz>> {$/;"	P	implementation:Date
succ_opt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    pub fn succ_opt(&self) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
suffix_cache	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    suffix_cache: SuffixCache,$/;"	m	struct:Compiler
suffixes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    suffixes: LiteralSearcher,$/;"	m	struct:ExecReadOnly
suffixes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    suffixes: Literals,$/;"	m	struct:Parsed
suffixes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    fn suffixes(lits: &Literals) -> Self {$/;"	P	implementation:Matcher
suffixes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    fn suffixes(lits: &Literals) -> SingleByteSet {$/;"	P	implementation:SingleByteSet
suffixes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^    pub fn suffixes(lits: Literals) -> Self {$/;"	P	implementation:LiteralSearcher
suffixes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/mod.rs	/^        pub fn suffixes(_: Literals) -> Self {$/;"	P	implementation:imp::LiteralSearcher
sum	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^    fn sum<I: Iterator<Item = &'a MatrixMN<N, Dynamic, C>>>($/;"	f
sum	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^    fn sum<I: Iterator<Item = &'a MatrixMN<N, R, C>>>(iter: I) -> MatrixMN<N, R, C> {$/;"	f
sum	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^    fn sum<I: Iterator<Item = MatrixMN<N, Dynamic, C>>>(mut iter: I) -> MatrixMN<N, Dynamic, C> /;"	f
sum	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^    fn sum<I: Iterator<Item = MatrixMN<N, R, C>>>(iter: I) -> MatrixMN<N, R, C> {$/;"	f
sum	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs	/^    pub fn sum(&self) -> N {$/;"	P	implementation:Matrix
sum	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn sum<I>(iter: I) -> Self$/;"	P	implementation:Complex
sum	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^    fn sum(values: &[Self]) -> Self {$/;"	P	interface:Weight
sum1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn sum1<S>(mut self) -> Option<S>$/;"	P	interface:Itertools
sup	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs	/^    pub fn sup(&self, other: &Self) -> MatrixMN<N, R, C> {$/;"	f
sup	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^    pub fn sup(&self, other: &Self) -> Point<N, D> {$/;"	f
sup	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs	/^pub fn sup<N, R: Dim, C: Dim>(a: &MatrixMN<N, R, C>, b: &MatrixMN<N, R, C>) -> MatrixMN<N, R, C>$/;"	f
super_tcategory_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^macro_rules! super_tcategory_impl($/;"	M
sval	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        fn sval(&mut self, v: &sval::Value) -> Result<(), Error> {$/;"	P	implementation:sval_support::SvalVisitor
sval	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        fn sval(&mut self, v: &sval_support::Value) -> Result<(), Error> {$/;"	P	implementation:fmt_support::FmtVisitor
sval	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    fn sval(&mut self, v: &sval_support::Value) -> Result<(), Error>;$/;"	P	interface:Visitor
sval	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/test.rs	/^            fn sval(&mut self, _: &internal::sval_support::Value) -> Result<(), Error> {$/;"	P	implementation:Value::to_token::TestVisitor
sval_support	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^pub(super) mod sval_support {$/;"	n
svd	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/mod.rs	/^mod svd;$/;"	n
svd	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs	/^    pub fn svd(self, compute_u: bool, compute_v: bool) -> SVD<N, R, C> {$/;"	f
swap	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn swap(&mut self, row_cols1: (usize, usize), row_cols2: (usize, usize)) {$/;"	P	implementation:Matrix
swap_bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/int.rs	/^    fn swap_bytes(self) -> Self;$/;"	P	interface:PrimInt
swap_columns	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn swap_columns(&mut self, icol1: usize, icol2: usize) {$/;"	P	implementation:Matrix
swap_greed	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_builder.rs	/^    pub swap_greed: bool,$/;"	m	struct:RegexOptions
swap_rows	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn swap_rows(&mut self, irow1: usize, irow2: usize) {$/;"	P	implementation:Matrix
swap_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub unsafe fn swap_unchecked(&mut self, row_cols1: (usize, usize), row_cols2: (usize, usize)/;"	P	implementation:Matrix
swap_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs	/^    unsafe fn swap_unchecked(&mut self, row_col1: (usize, usize), row_col2: (usize, usize)) {$/;"	P	interface:StorageMut
swap_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^    pub unsafe fn swap_unchecked(&mut self, i1: usize, i2: usize) {$/;"	f
swap_unchecked_linear	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs	/^    unsafe fn swap_unchecked_linear(&mut self, i1: usize, i2: usize) {$/;"	P	interface:StorageMut
swizzle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs	/^mod swizzle;$/;"	n
swizzle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod swizzle;$/;"	n
sygemv	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^    pub fn sygemv<D2: Dim, D3: Dim, SB, SC>($/;"	f
syger	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^    pub fn syger<D2: Dim, D3: Dim, SB, SC>($/;"	f
symb	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    fn symb(&self) -> Option<Vec<char>> {$/;"	f
symb	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    fn symb(&self) -> Option<Vec<char>>;$/;"	P	interface:PolyRing
symmetric_eigen	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/mod.rs	/^mod symmetric_eigen;$/;"	n
symmetric_eigen	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs	/^    pub fn symmetric_eigen(self) -> SymmetricEigen<N, D> {$/;"	f
symmetric_eigenvalues	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs	/^    pub fn symmetric_eigenvalues(&self) -> VectorN<N::RealField, D> {$/;"	f
symmetric_part	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn symmetric_part(&self) -> MatrixMN<N, D, D>$/;"	P	implementation:SquareMatrix
symmetric_tridiagonal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/mod.rs	/^mod symmetric_tridiagonal;$/;"	n
symmetric_tridiagonalize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs	/^    pub fn symmetric_tridiagonalize(self) -> SymmetricTridiagonal<N, D> {$/;"	f
t	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs	/^    t: T,$/;"	m	struct:Zip
t	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs	/^    t: MatrixN<N, D>,$/;"	m	struct:Schur
t	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^        macro_rules! t {$/;"	M	function:tests::test_float_assertions
t	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^        macro_rules! t {$/;"	M	function:tests::test_floats
t	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^        macro_rules! t {$/;"	M	function:tests::test_integers
table	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    table: Vec<StatePtr>,$/;"	m	struct:Transitions
tail	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs	/^    tail: I,$/;"	m	struct:HeadTail
take_while_ref	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub fn take_while_ref<I, F>(iter: &mut I, f: F) -> TakeWhileRef<I, F>$/;"	f
take_while_ref	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn take_while_ref<F>(&mut self, accept: F) -> TakeWhileRef<Self, F>$/;"	P	interface:Itertools
tan	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn tan(self) -> Self {$/;"	P	implementation:Complex
tan	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn tan(self) -> Self;$/;"	P	interface:ComplexField
tan	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn tan(&self) -> Self$/;"	f
tan	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub fn tan(&self) -> Self {$/;"	P	implementation:Complex
tan	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn tan(self) -> Self {$/;"	P	implementation:f32
tan	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn tan(self) -> Self {$/;"	P	implementation:f64
tan	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn tan(self) -> Self;$/;"	P	interface:Float
tan	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn tan(self) -> Self;$/;"	P	interface:Real
tanh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn tanh(self) -> Self {$/;"	P	implementation:Complex
tanh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn tanh(self) -> Self;$/;"	P	interface:ComplexField
tanh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn tanh(&self) -> Self$/;"	f
tanh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub fn tanh(&self) -> Self {$/;"	P	implementation:Complex
tanh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn tanh(self) -> Self {$/;"	P	implementation:f32
tanh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn tanh(self) -> Self {$/;"	P	implementation:f64
tanh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn tanh(self) -> Self;$/;"	P	interface:Float
tanh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn tanh(self) -> Self;$/;"	P	interface:Real
target	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^    pub(crate) fn target(&mut self, target: Target) -> &mut Self {$/;"	P	implementation:Builder
target	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^    target: Target,$/;"	m	struct:Builder
target	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/shim_impl.rs	/^    target: Target,$/;"	m	struct:BufferWriter
target	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    pub fn target(&mut self, target: fmt::Target) -> &mut Self {$/;"	P	implementation:Builder
target	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn target(&mut self, target: &'a str) -> &mut MetadataBuilder<'a> {$/;"	P	implementation:MetadataBuilder
target	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn target(&mut self, target: &'a str) -> &mut RecordBuilder<'a> {$/;"	P	implementation:RecordBuilder
target	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn target(&self) -> &'a str {$/;"	P	implementation:Metadata
target	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn target(&self) -> &'a str {$/;"	P	implementation:Record
target	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    target: &'a str,$/;"	m	struct:Metadata
tarr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/array.rs	/^macro_rules! tarr {$/;"	M
tee	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn tee(self) -> (Tee<Self>, Tee<Self>)$/;"	P	interface:Itertools
tee	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^mod tee;$/;"	n
ten_dice_rolls_other_than_five	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^        fn ten_dice_rolls_other_than_five<'a, R: Rng>($/;"	f	function:tests::test_make_an_iter
term_scale	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    pub fn term_scale(&self, term: &Term<P>) -> Poly<'a, P> {$/;"	P	implementation:Poly
termcolor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^mod termcolor;$/;"	n
test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/iter.rs	/^mod test {$/;"	n
test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^mod test {$/;"	n
test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^pub(in kv) mod test;$/;"	n
test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs	/^mod test {$/;"	n
test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/cast.rs	/^mod test {$/;"	n
test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^            fn test(c: Complex64) {$/;"	f	function:test::float::test_polar_conv
test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^            fn test(c: Complex64, arg: f64) {$/;"	f	function:test::float::test_arg
test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^            fn test(c: Complex64, ns: f64) {$/;"	f	function:test::float::test_norm
test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test(c: Complex64, r: f64, i: f64) {$/;"	f	function:test::test_consts
test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test(c: Complex64, s: String) {$/;"	f	function:test::test_to_string
test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test(s: &str) {$/;"	f	function:test::test_from_str_fail
test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test(z: Complex64, s: &str) {$/;"	f	function:test::test_from_str
test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test(z: Complex64, s: &str, radix: u32) {$/;"	f	function:test::test_from_str_radix
test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^mod test {$/;"	n
test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/bernoulli.rs	/^mod test {$/;"	n
test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/binomial.rs	/^mod test {$/;"	n
test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/cauchy.rs	/^mod test {$/;"	n
test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/dirichlet.rs	/^mod test {$/;"	n
test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/exponential.rs	/^mod test {$/;"	n
test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^mod test {$/;"	n
test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/poisson.rs	/^mod test {$/;"	n
test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/triangular.rs	/^mod test {$/;"	n
test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^mod test {$/;"	n
test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/mod.rs	/^mod test {$/;"	n
test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^mod test {$/;"	n
test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/read.rs	/^mod test {$/;"	n
test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/reseeding.rs	/^mod test {$/;"	n
test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/entropy.rs	/^mod test {$/;"	n
test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/std.rs	/^mod test {$/;"	n
test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/thread.rs	/^mod test {$/;"	n
test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^mod test {$/;"	n
test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^mod test {$/;"	n
test	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^mod test {$/;"	n
test_a_op_b	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    macro_rules! test_a_op_b {$/;"	M	module:test
test_acos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_acos() {$/;"	f	module:test::float
test_acosh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_acosh() {$/;"	f	module:test::float
test_add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_add() {$/;"	f	module:test::complex_arithmetic
test_add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_add() {$/;"	f	module:test::real_arithmetic
test_alphanumeric	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/other.rs	/^    fn test_alphanumeric() {$/;"	f	module:tests
test_arg	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_arg() {$/;"	f	module:test::float
test_as_primitive	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/cast.rs	/^    fn test_as_primitive() {$/;"	f	module:test
test_asin	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_asin() {$/;"	f	module:test::float
test_asinh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_asinh() {$/;"	f	module:test::float
test_assembly	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    fn test_assembly() {$/;"	f	module:test
test_atan	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_atan() {$/;"	f	module:test::float
test_atanh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_atanh() {$/;"	f	module:test::float
test_auto_conversion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^fn test_auto_conversion() {$/;"	f
test_average	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/bernoulli.rs	/^    fn test_average() {$/;"	f	module:test
test_beta	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    fn test_beta() {$/;"	f	module:test
test_beta_invalid_dof	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    fn test_beta_invalid_dof() {$/;"	f	module:test
test_binomial	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/binomial.rs	/^    fn test_binomial() {$/;"	f	module:test
test_binomial_end_points	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/binomial.rs	/^    fn test_binomial_end_points() {$/;"	f	module:test
test_binomial_invalid_lambda_neg	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/binomial.rs	/^    fn test_binomial_invalid_lambda_neg() {$/;"	f	module:test
test_binomial_mean_and_variance	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/binomial.rs	/^    fn test_binomial_mean_and_variance<R: Rng>(n: u64, p: f64, rng: &mut R) {$/;"	f	module:test
test_bit_op	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^    macro_rules! test_bit_op {$/;"	M	module:tests
test_cauchy_averages	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/cauchy.rs	/^    fn test_cauchy_averages() {$/;"	f	module:test
test_cauchy_invalid_scale_neg	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/cauchy.rs	/^    fn test_cauchy_invalid_scale_neg() {$/;"	f	module:test
test_cauchy_invalid_scale_zero	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/cauchy.rs	/^    fn test_cauchy_invalid_scale_zero() {$/;"	f	module:test
test_cbrt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_cbrt() {$/;"	f	module:test::float
test_cbrt_imag	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_cbrt_imag() {$/;"	f	module:test::float
test_cbrt_real	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_cbrt_real() {$/;"	f	module:test::float
test_chars	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/other.rs	/^    fn test_chars() {$/;"	f	module:tests
test_chi_squared_invalid_dof	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    fn test_chi_squared_invalid_dof() {$/;"	f	module:test
test_chi_squared_large	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    fn test_chi_squared_large() {$/;"	f	module:test
test_chi_squared_one	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    fn test_chi_squared_one() {$/;"	f	module:test
test_chi_squared_small	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    fn test_chi_squared_small() {$/;"	f	module:test
test_clone_reseeding	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/reseeding.rs	/^    fn test_clone_reseeding() {$/;"	f	module:test
test_conj	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn test_conj() {$/;"	f	module:test
test_const	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn test_const() {$/;"	f	module:test
test_consts	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn test_consts() {$/;"	f	module:test
test_cos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_cos() {$/;"	f	module:test::float
test_cosh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_cosh() {$/;"	f	module:test::float
test_cross_cmp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn test_cross_cmp() {$/;"	f	module:tests
test_cross_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn test_cross_eq() {$/;"	f	module:tests
test_custom_uniform	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^    fn test_custom_uniform() {$/;"	f	module:tests
test_date_add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn test_date_add() {$/;"	f	module:tests
test_date_addassignment	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn test_date_addassignment() {$/;"	f	module:tests
test_date_bounds	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^fn test_date_bounds() {$/;"	f
test_date_extreme_offset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/fixed.rs	/^    fn test_date_extreme_offset() {$/;"	f	module:tests
test_date_fields	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn test_date_fields() {$/;"	f	module:tests
test_date_fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn test_date_fmt() {$/;"	f	module:tests
test_date_format	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn test_date_format() {$/;"	f	module:tests
test_date_from_isoywd	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn test_date_from_isoywd() {$/;"	f	module:tests
test_date_from_isoywd_and_iso_week	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn test_date_from_isoywd_and_iso_week() {$/;"	f	module:tests
test_date_from_num_days_from_ce	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn test_date_from_num_days_from_ce() {$/;"	f	module:tests
test_date_from_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn test_date_from_str() {$/;"	f	module:tests
test_date_from_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    fn test_date_from_str() {$/;"	f	module:tests
test_date_from_ymd	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn test_date_from_ymd() {$/;"	f	module:tests
test_date_from_yo	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn test_date_from_yo() {$/;"	f	module:tests
test_date_num_days_from_ce	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn test_date_num_days_from_ce() {$/;"	f	module:tests
test_date_parse_from_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn test_date_parse_from_str() {$/;"	f	module:tests
test_date_pred	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn test_date_pred() {$/;"	f	module:tests
test_date_sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn test_date_sub() {$/;"	f	module:tests
test_date_subassignment	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn test_date_subassignment() {$/;"	f	module:tests
test_date_succ	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn test_date_succ() {$/;"	f	module:tests
test_date_weekday	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn test_date_weekday() {$/;"	f	module:tests
test_date_with_fields	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn test_date_with_fields() {$/;"	f	module:tests
test_datetime_add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn test_datetime_add() {$/;"	f	module:tests
test_datetime_add_sub_invariant	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn test_datetime_add_sub_invariant() { \/\/ issue #37$/;"	f	module:tests
test_datetime_addassignment	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn test_datetime_addassignment() {$/;"	f	module:tests
test_datetime_date_and_time	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn test_datetime_date_and_time() {$/;"	f	module:tests
test_datetime_format	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn test_datetime_format() {$/;"	f	module:tests
test_datetime_format_alignment	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn test_datetime_format_alignment() {$/;"	f	module:tests
test_datetime_format_with_local	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn test_datetime_format_with_local() {$/;"	f	module:tests
test_datetime_from_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn test_datetime_from_str() {$/;"	f	module:tests
test_datetime_from_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn test_datetime_from_str() {$/;"	f	module:tests
test_datetime_from_timestamp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn test_datetime_from_timestamp() {$/;"	f	module:tests
test_datetime_is_copy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn test_datetime_is_copy() {$/;"	f	module:tests
test_datetime_is_send	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn test_datetime_is_send() {$/;"	f	module:tests
test_datetime_offset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn test_datetime_offset() {$/;"	f	module:tests
test_datetime_parse_from_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn test_datetime_parse_from_str() {$/;"	f	module:tests
test_datetime_parse_from_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn test_datetime_parse_from_str() {$/;"	f	module:tests
test_datetime_rfc2822_and_rfc3339	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn test_datetime_rfc2822_and_rfc3339() {$/;"	f	module:tests
test_datetime_sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn test_datetime_sub() {$/;"	f	module:tests
test_datetime_subassignment	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn test_datetime_subassignment() {$/;"	f	module:tests
test_datetime_timestamp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn test_datetime_timestamp() {$/;"	f	module:tests
test_datetime_with_timezone	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn test_datetime_with_timezone() {$/;"	f	module:tests
test_decodable	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn test_decodable() {$/;"	f	module:rustc_serialize
test_decodable	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn test_decodable() {$/;"	f	module:rustc_serialize
test_decodable	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn test_decodable() {$/;"	f	module:rustc_serialize
test_decodable	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    fn test_decodable() {$/;"	f	module:rustc_serialize
test_decodable_json	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^fn test_decodable_json<FUtc, FFixed, FLocal, E>(utc_from_str: FUtc,$/;"	f
test_decodable_json	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^fn test_decodable_json<F, E>(from_str: F)$/;"	f
test_decodable_json	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^fn test_decodable_json<F, E>(from_str: F)$/;"	f
test_decodable_json	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^fn test_decodable_json<F, E>(from_str: F)$/;"	f
test_decodable_json_timestamp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^fn test_decodable_json_timestamp<F, E>(from_str: F)$/;"	f
test_decodable_json_timestamps	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^fn test_decodable_json_timestamps<FUtc, FFixed, FLocal, E>(utc_from_str: FUtc,$/;"	f
test_decodable_timestamps	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn test_decodable_timestamps() {$/;"	f	module:rustc_serialize
test_decodable_timestamps	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn test_decodable_timestamps() {$/;"	f	module:rustc_serialize
test_deserialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/impl_serde.rs	/^    fn test_deserialize() {$/;"	f	module:tests
test_dirichlet	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/dirichlet.rs	/^    fn test_dirichlet() {$/;"	f	module:test
test_dirichlet_invalid_alpha	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/dirichlet.rs	/^    fn test_dirichlet_invalid_alpha() {$/;"	f	module:test
test_dirichlet_invalid_length	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/dirichlet.rs	/^    fn test_dirichlet_invalid_length() {$/;"	f	module:test
test_dirichlet_with_param	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/dirichlet.rs	/^    fn test_dirichlet_with_param() {$/;"	f	module:test
test_distributions_iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^    fn test_distributions_iter() {$/;"	f	module:tests
test_div	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_div() {$/;"	f	module:test::complex_arithmetic
test_div	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_div() {$/;"	f	module:test::real_arithmetic
test_div	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn test_div() {$/;"	f	module:tests
test_div	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    macro_rules! test_div {$/;"	M	module:tests
test_div_mod_floor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/div.rs	/^    fn test_div_mod_floor() {$/;"	f	module:tests
test_div_rem_gaussian	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_div_rem_gaussian() {$/;"	f	module:test::real_arithmetic
test_divide_by_zero_natural	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn test_divide_by_zero_natural() {$/;"	f	module:test
test_double_inversion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^fn test_double_inversion() {$/;"	f
test_duration	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    fn test_duration() {$/;"	f	module:tests
test_duration_checked_ops	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    fn test_duration_checked_ops() {$/;"	f	module:tests
test_duration_div	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    fn test_duration_div() {$/;"	f	module:tests
test_duration_fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    fn test_duration_fmt() {$/;"	f	module:tests
test_duration_mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    fn test_duration_mul() {$/;"	f	module:tests
test_duration_num_days	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    fn test_duration_num_days() {$/;"	f	module:tests
test_duration_num_microseconds	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    fn test_duration_num_microseconds() {$/;"	f	module:tests
test_duration_num_milliseconds	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    fn test_duration_num_milliseconds() {$/;"	f	module:tests
test_duration_num_nanoseconds	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    fn test_duration_num_nanoseconds() {$/;"	f	module:tests
test_duration_num_seconds	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    fn test_duration_num_seconds() {$/;"	f	module:tests
test_durations	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^    fn test_durations() {$/;"	f	module:tests
test_encodable	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn test_encodable() {$/;"	f	module:rustc_serialize
test_encodable	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn test_encodable() {$/;"	f	module:rustc_serialize
test_encodable	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn test_encodable() {$/;"	f	module:rustc_serialize
test_encodable	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    fn test_encodable() {$/;"	f	module:rustc_serialize
test_encodable_json	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^fn test_encodable_json<FUtc, FFixed, E>(to_string_utc: FUtc, to_string_fixed: FFixed)$/;"	f
test_encodable_json	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^fn test_encodable_json<F, E>(to_string: F)$/;"	f
test_encodable_json	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^fn test_encodable_json<F, E>(to_string: F)$/;"	f
test_encodable_json	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^fn test_encodable_json<F, E>(to_string: F)$/;"	f
test_entropy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/entropy.rs	/^    fn test_entropy() {$/;"	f	module:test
test_error_trait	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn test_error_trait() {$/;"	f	module:tests
test_exp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_exp() {$/;"	f	module:test::float
test_exp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/exponential.rs	/^    fn test_exp() {$/;"	f	module:test
test_exp_invalid_lambda_neg	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/exponential.rs	/^    fn test_exp_invalid_lambda_neg() {$/;"	f	module:test
test_exp_invalid_lambda_zero	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/exponential.rs	/^    fn test_exp_invalid_lambda_zero() {$/;"	f	module:test
test_exp_ln	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_exp_ln() {$/;"	f	module:test::float
test_f	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    fn test_f() {$/;"	f	module:test
test_f32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/float.rs	/^    macro_rules! test_f32 {$/;"	M	module:tests
test_f64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/float.rs	/^    macro_rules! test_f64 {$/;"	M	module:tests
test_fill	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^    fn test_fill() {$/;"	f	module:test
test_fill_bytes_default	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^    fn test_fill_bytes_default() {$/;"	f	module:test
test_fill_empty	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^    fn test_fill_empty() {$/;"	f	module:test
test_float_assertions	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^    fn test_float_assertions() {$/;"	f	module:tests
test_floats	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^    fn test_floats() {$/;"	f	module:tests
test_from_primitive	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/cast.rs	/^    fn test_from_primitive() {$/;"	f	module:test
test_from_std	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    fn test_from_std() {$/;"	f	module:tests
test_from_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn test_from_str() {$/;"	f	module:test
test_from_str_fail	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn test_from_str_fail() {$/;"	f	module:test
test_from_str_radix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn test_from_str_radix() {$/;"	f	module:test
test_from_sval	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        fn test_from_sval() {$/;"	f	module:sval_support::tests
test_from_system_time	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn test_from_system_time() {$/;"	f	module:tests
test_gen_bool	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^    fn test_gen_bool() {$/;"	f	module:test
test_gen_range	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^    fn test_gen_range() {$/;"	f	module:test
test_gen_range_panic_int	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^    fn test_gen_range_panic_int() {$/;"	f	module:test
test_gen_range_panic_usize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^    fn test_gen_range_panic_usize() {$/;"	f	module:test
test_gen_ratio_average	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^    fn test_gen_ratio_average() {$/;"	f	module:test
test_get_bit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^fn test_get_bit() {$/;"	f
test_hash	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn test_hash() {$/;"	f	module:test
test_hashset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn test_hashset() {$/;"	f	module:test
test_hyperbolic_identites	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_hyperbolic_identites() {$/;"	f	module:test::float
test_integers	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/integer.rs	/^    fn test_integers() {$/;"	f	module:tests
test_integers	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^    fn test_integers() {$/;"	f	module:tests
test_inv	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn test_inv() {$/;"	f	module:test
test_inv_zero	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn test_inv_zero() {$/;"	f	module:test
test_inversion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^fn test_inversion() {$/;"	f
test_is_finite	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn test_is_finite() {$/;"	f	module:test
test_is_infinite	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn test_is_infinite() {$/;"	f	module:test
test_is_nan	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn test_is_nan() {$/;"	f	module:test
test_is_nan_special_cases	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn test_is_nan_special_cases() {$/;"	f	module:test
test_is_normal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn test_is_normal() {$/;"	f	module:test
test_iso_week_extremes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/isoweek.rs	/^    fn test_iso_week_extremes() {$/;"	f	module:tests
test_iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^        fn test_iter<R: Rng + ?Sized, Iter: Iterator<Item = usize> + Clone>(r: &mut R, iter: Ite/;"	f	function:test::test_iterator_choose
test_iterator_choose	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^    fn test_iterator_choose() {$/;"	f	module:test
test_l1_norm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn test_l1_norm() {$/;"	f	module:test
test_leap_second	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/local.rs	/^    fn test_leap_second() { \/\/ issue #123$/;"	f	module:tests
test_level_case_insensitive	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^    fn test_level_case_insensitive() {$/;"	f	module:tests
test_level_de_bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^    fn test_level_de_bytes() {$/;"	f	module:tests
test_level_de_error	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^    fn test_level_de_error() {$/;"	f	module:tests
test_level_filter_case_insensitive	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^    fn test_level_filter_case_insensitive() {$/;"	f	module:tests
test_level_filter_de_bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^    fn test_level_filter_de_bytes() {$/;"	f	module:tests
test_level_filter_de_error	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^    fn test_level_filter_de_error() {$/;"	f	module:tests
test_level_filter_ser_de	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^    fn test_level_filter_ser_de() {$/;"	f	module:tests
test_level_from_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn test_level_from_str() {$/;"	f	module:tests
test_level_ser_de	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^    fn test_level_ser_de() {$/;"	f	module:tests
test_level_show	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn test_level_show() {$/;"	f	module:tests
test_levelfilter_from_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn test_levelfilter_from_str() {$/;"	f	module:tests
test_levelfilter_show	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn test_levelfilter_show() {$/;"	f	module:tests
test_ln	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_ln() {$/;"	f	module:test::float
test_local_date_sanity_check	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/local.rs	/^    fn test_local_date_sanity_check() { \/\/ issue #27$/;"	f	module:tests
test_log	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_log() {$/;"	f	module:test::float
test_log_normal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/normal.rs	/^    fn test_log_normal() {$/;"	f	module:tests
test_log_normal_invalid_sd	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/normal.rs	/^    fn test_log_normal_invalid_sd() {$/;"	f	module:tests
test_make_an_iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^    fn test_make_an_iter() {$/;"	f	module:tests
test_mdf_fields	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    fn test_mdf_fields() {$/;"	f	module:tests
test_mdf_to_of	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    fn test_mdf_to_of() {$/;"	f	module:tests
test_mdf_to_of_to_mdf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    fn test_mdf_to_of_to_mdf() {$/;"	f	module:tests
test_mdf_valid	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    fn test_mdf_valid() {$/;"	f	module:tests
test_mdf_with_fields	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    fn test_mdf_with_fields() {$/;"	f	module:tests
test_metadata_builder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn test_metadata_builder() {$/;"	f	module:tests
test_metadata_convenience_builder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn test_metadata_convenience_builder() {$/;"	f	module:tests
test_misc	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/other.rs	/^    fn test_misc() {$/;"	f	module:tests
test_mod_floor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/div.rs	/^    fn test_mod_floor() {$/;"	f	module:tests
test_mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_mul() {$/;"	f	module:test::complex_arithmetic
test_mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_mul() {$/;"	f	module:test::real_arithmetic
test_mul_add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_mul_add() {$/;"	f	module:test::complex_arithmetic
test_mul_add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/mul_add.rs	/^        macro_rules! test_mul_add {$/;"	M	function:tests::mul_add_float
test_mul_add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/mul_add.rs	/^        macro_rules! test_mul_add {$/;"	M	function:tests::mul_add_integer
test_mul_add_float	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_mul_add_float() {$/;"	f	module:test::complex_arithmetic
test_nanos_never_panics	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^    fn test_nanos_never_panics() {$/;"	f	module:tests
test_nanosecond_range	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn test_nanosecond_range() {$/;"	f	module:tests
test_neg	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_neg() {$/;"	f	module:test::complex_arithmetic
test_negative_millis	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^    fn test_negative_millis() {$/;"	f	module:tests
test_negative_nanos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^    fn test_negative_nanos() {$/;"	f	module:tests
test_new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/triangular.rs	/^    fn test_new() {$/;"	f	module:test
test_norm	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_norm() {$/;"	f	module:test::float
test_normal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/normal.rs	/^    fn test_normal() {$/;"	f	module:tests
test_normal_invalid_sd	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/normal.rs	/^    fn test_normal_invalid_sd() {$/;"	f	module:tests
test_num_cast	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/cast.rs	/^    fn test_num_cast() {$/;"	f	module:test
test_of	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    fn test_of() {$/;"	f	module:tests
test_of_fields	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    fn test_of_fields() {$/;"	f	module:tests
test_of_isoweekdate_raw	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    fn test_of_isoweekdate_raw() {$/;"	f	module:tests
test_of_to_mdf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    fn test_of_to_mdf() {$/;"	f	module:tests
test_of_to_mdf_to_of	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    fn test_of_to_mdf_to_of() {$/;"	f	module:tests
test_of_weekday	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    fn test_of_weekday() {$/;"	f	module:tests
test_of_with_fields	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    fn test_of_with_fields() {$/;"	f	module:tests
test_one	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn test_one() {$/;"	f	module:test
test_op	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    macro_rules! test_op {$/;"	M	module:test
test_parse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parse.rs	/^fn test_parse() {$/;"	f
test_parsed_set_fields	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    fn test_parsed_set_fields() {$/;"	f	module:tests
test_parsed_to_datetime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    fn test_parsed_to_datetime() {$/;"	f	module:tests
test_parsed_to_datetime_with_timezone	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    fn test_parsed_to_datetime_with_timezone() {$/;"	f	module:tests
test_parsed_to_naive_date	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    fn test_parsed_to_naive_date() {$/;"	f	module:tests
test_parsed_to_naive_datetime_with_offset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    fn test_parsed_to_naive_datetime_with_offset() {$/;"	f	module:tests
test_parsed_to_naive_time	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    fn test_parsed_to_naive_time() {$/;"	f	module:tests
test_partial_shuffle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^    fn test_partial_shuffle() {$/;"	f	module:test
test_poisson_10	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/poisson.rs	/^    fn test_poisson_10() {$/;"	f	module:test
test_poisson_15	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/poisson.rs	/^    fn test_poisson_15() {$/;"	f	module:test
test_poisson_invalid_lambda_neg	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/poisson.rs	/^    fn test_poisson_invalid_lambda_neg() {$/;"	f	module:test
test_poisson_invalid_lambda_zero	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/poisson.rs	/^    fn test_poisson_invalid_lambda_zero() {$/;"	f	module:test
test_polar_conv	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_polar_conv() {$/;"	f	module:test::float
test_pow	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn test_pow() {$/;"	f	module:test
test_powc	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_powc() {$/;"	f	module:test::float
test_powf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_powf() {$/;"	f	module:test::float
test_prod	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn test_prod() {$/;"	f	module:test
test_random	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^    fn test_random() {$/;"	f	module:test
test_reader_rng_fill_bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/read.rs	/^    fn test_reader_rng_fill_bytes() {$/;"	f	module:test
test_reader_rng_insufficient_bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/read.rs	/^    fn test_reader_rng_insufficient_bytes() {$/;"	f	module:test
test_reader_rng_u32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/read.rs	/^    fn test_reader_rng_u32() {$/;"	f	module:test
test_reader_rng_u64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/read.rs	/^    fn test_reader_rng_u64() {$/;"	f	module:test
test_readme_doomsday	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^fn test_readme_doomsday() {$/;"	f
test_record_builder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn test_record_builder() {$/;"	f	module:tests
test_record_complete_builder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn test_record_complete_builder() {$/;"	f	module:tests
test_record_convenience_builder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn test_record_convenience_builder() {$/;"	f	module:tests
test_record_key_values_builder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn test_record_key_values_builder() {$/;"	f	module:tests
test_rem	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_rem() {$/;"	f	module:test::complex_arithmetic
test_rem	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_rem() {$/;"	f	module:test::real_arithmetic
test_reseeding	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/reseeding.rs	/^    fn test_reseeding() {$/;"	f	module:test
test_rfc2822	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parse.rs	/^fn test_rfc2822() {$/;"	f
test_rfc3339	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parse.rs	/^fn test_rfc3339() {$/;"	f
test_rfc3339_opts	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn test_rfc3339_opts() {$/;"	f	module:tests
test_rfc3339_opts_nonexhaustive	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn test_rfc3339_opts_nonexhaustive() {$/;"	f	module:tests
test_rng	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/crand.rs	/^fn test_rng() -> SmallRng {$/;"	f
test_rng_boxed_trait	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^    fn test_rng_boxed_trait() {$/;"	f	module:test
test_rng_trait_object	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^    fn test_rng_trait_object() {$/;"	f	module:test
test_round	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/round.rs	/^    fn test_round() {$/;"	f	module:tests
test_round_leap_nanos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/round.rs	/^    fn test_round_leap_nanos() {$/;"	f	module:tests
test_sample	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/triangular.rs	/^    fn test_sample() {$/;"	f	module:test
test_sample_alg	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^    fn test_sample_alg() {$/;"	f	module:test
test_sample_boundaries	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^    fn test_sample_boundaries() {$/;"	f	module:test
test_sample_iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^    fn test_sample_iter() {$/;"	f	module:test
test_samples	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/float.rs	/^        fn test_samples<T: Copy + core::fmt::Debug + PartialEq, D: Distribution<T>>($/;"	f	function:tests::value_stability
test_samples	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/integer.rs	/^        fn test_samples<T: Copy + core::fmt::Debug + PartialEq>(zero: T, expected: &[T])$/;"	f	function:tests::value_stability
test_samples	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/other.rs	/^        fn test_samples<T: Copy + core::fmt::Debug + PartialEq, D: Distribution<T>>($/;"	f	function:tests::value_stability
test_samples	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^        fn test_samples<T: SampleUniform + Copy + core::fmt::Debug + PartialEq>($/;"	f	function:tests::value_stability
test_samples	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^        fn test_samples<W: Weight>(weights: Vec<W>, buf: &mut [usize], expected: &[usize]) {$/;"	f	function:test::value_stability
test_samples	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/mod.rs	/^        fn test_samples<X: SampleUniform + PartialOrd, I>($/;"	f	function:test::value_stability
test_scale_unscale	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn test_scale_unscale() {$/;"	f	module:test
test_send_iter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/iter.rs	/^    fn test_send_iter() {$/;"	f	module:test
test_serde_bincode	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn test_serde_bincode() {$/;"	f	module:serde
test_serde_bincode	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn test_serde_bincode() {$/;"	f	module:serde
test_serde_bincode	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn test_serde_bincode() {$/;"	f	module:serde
test_serde_bincode	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    fn test_serde_bincode() {$/;"	f	module:serde
test_serde_deserialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn test_serde_deserialize() {$/;"	f	module:serde
test_serde_deserialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    fn test_serde_deserialize() {$/;"	f	module:weekday_serde
test_serde_deserialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn test_serde_deserialize() {$/;"	f	module:serde
test_serde_deserialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn test_serde_deserialize() {$/;"	f	module:serde
test_serde_deserialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    fn test_serde_deserialize() {$/;"	f	module:serde
test_serde_serialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn test_serde_serialize() {$/;"	f	module:serde
test_serde_serialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    fn test_serde_serialize() {$/;"	f	module:weekday_serde
test_serde_serialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn test_serde_serialize() {$/;"	f	module:serde
test_serde_serialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn test_serde_serialize() {$/;"	f	module:serde
test_serde_serialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    fn test_serde_serialize() {$/;"	f	module:serde
test_serialize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/impl_serde.rs	/^    fn test_serialize() {$/;"	f	module:tests
test_serialized_size	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/impl_serde.rs	/^    fn test_serialized_size() {$/;"	f	module:tests
test_set_bit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^fn test_set_bit() {$/;"	f
test_shuffle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^    fn test_shuffle() {$/;"	f	module:test
test_sin	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_sin() {$/;"	f	module:test::float
test_sinh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_sinh() {$/;"	f	module:test::float
test_slice_choose	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^    fn test_slice_choose() {$/;"	f	module:test
test_some_expf_cases	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_some_expf_cases() {$/;"	f	module:test::float
test_sqrt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_sqrt() {$/;"	f	module:test::float
test_sqrt_imag	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_sqrt_imag() {$/;"	f	module:test::float
test_sqrt_real	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_sqrt_real() {$/;"	f	module:test::float
test_stdrng_construction	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/std.rs	/^    fn test_stdrng_construction() {$/;"	f	module:test
test_strftime_docs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/strftime.rs	/^fn test_strftime_docs() {$/;"	f
test_strftime_items	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/strftime.rs	/^fn test_strftime_items() {$/;"	f
test_string_formatting	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn test_string_formatting() {$/;"	f	module:test
test_sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_sub() {$/;"	f	module:test::complex_arithmetic
test_sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_sub() {$/;"	f	module:test::real_arithmetic
test_subsecond_part	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn test_subsecond_part() {$/;"	f	module:tests
test_sum	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn test_sum() {$/;"	f	module:test
test_sval_structured	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        fn test_sval_structured() {$/;"	f	module:sval_support::tests
test_t	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/gamma.rs	/^    fn test_t() {$/;"	f	module:test
test_tan	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_tan() {$/;"	f	module:test::float
test_tanh	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_tanh() {$/;"	f	module:test::float
test_target	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    test_target: Option<Target>,$/;"	m	struct:Buffer
test_target	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    test_target: Option<Target>,$/;"	m	struct:BufferWriter
test_thread_rng	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/thread.rs	/^    fn test_thread_rng() {$/;"	f	module:test
test_time_add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    fn test_time_add() {$/;"	f	module:tests
test_time_addassignment	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    fn test_time_addassignment() {$/;"	f	module:tests
test_time_fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    fn test_time_fmt() {$/;"	f	module:tests
test_time_format	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    fn test_time_format() {$/;"	f	module:tests
test_time_from_hms_micro	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    fn test_time_from_hms_micro() {$/;"	f	module:tests
test_time_from_hms_milli	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    fn test_time_from_hms_milli() {$/;"	f	module:tests
test_time_hms	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    fn test_time_hms() {$/;"	f	module:tests
test_time_overflowing_add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    fn test_time_overflowing_add() {$/;"	f	module:tests
test_time_parse_from_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    fn test_time_parse_from_str() {$/;"	f	module:tests
test_time_sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    fn test_time_sub() {$/;"	f	module:tests
test_time_subassignment	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    fn test_time_subassignment() {$/;"	f	module:tests
test_to_level	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn test_to_level() {$/;"	f	module:tests
test_to_level_filter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn test_to_level_filter() {$/;"	f	module:tests
test_to_primitive	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/cast.rs	/^    fn test_to_primitive() {$/;"	f	module:test
test_to_std	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    fn test_to_std() {$/;"	f	module:tests
test_to_string	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn test_to_string() {$/;"	f	module:test
test_to_value_display	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn test_to_value_display() {$/;"	f	module:tests
test_to_value_structured	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn test_to_value_structured() {$/;"	f	module:tests
test_trig_identities	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_trig_identities() {$/;"	f	module:test::float
test_trig_to_hyperbolic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^        fn test_trig_to_hyperbolic() {$/;"	f	module:test::float
test_trivial	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/bernoulli.rs	/^    fn test_trivial() {$/;"	f	module:test
test_trunc	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/round.rs	/^    fn test_trunc() {$/;"	f	module:tests
test_trunc_leap_nanos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/round.rs	/^    fn test_trunc_leap_nanos() {$/;"	f	module:tests
test_uniform_bad_limits_equal_int	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^    fn test_uniform_bad_limits_equal_int() {$/;"	f	module:tests
test_uniform_bad_limits_flipped_int	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^    fn test_uniform_bad_limits_flipped_int() {$/;"	f	module:tests
test_uniform_from_std_range	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^    fn test_uniform_from_std_range() {$/;"	f	module:tests
test_uniform_from_std_range_inclusive	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^    fn test_uniform_from_std_range_inclusive() {$/;"	f	module:tests
test_uniform_good_limits_equal_int	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^    fn test_uniform_good_limits_equal_int() {$/;"	f	module:tests
test_update_weights	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/mod.rs	/^    fn test_update_weights() {$/;"	f	module:test
test_weighted	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^    fn test_weighted() {$/;"	f	module:test
test_weighted_index	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^    fn test_weighted_index<W: Weight, F: Fn(W) -> f64>(w_to_f64: F)$/;"	f	module:test
test_weighted_index_f32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^    fn test_weighted_index_f32() {$/;"	f	module:test
test_weighted_index_i128	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^    fn test_weighted_index_i128() {$/;"	f	module:test
test_weighted_index_i8	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^    fn test_weighted_index_i8() {$/;"	f	module:test
test_weighted_index_u128	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^    fn test_weighted_index_u128() {$/;"	f	module:test
test_weighted_index_u8	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^    fn test_weighted_index_u8() {$/;"	f	module:test
test_weightedindex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/mod.rs	/^    fn test_weightedindex() {$/;"	f	module:test
test_wrapping_bounded	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/bounds.rs	/^    macro_rules! test_wrapping_bounded {$/;"	M	function:wrapping_bounded
test_wrapping_bounded	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/bounds.rs	/^    macro_rules! test_wrapping_bounded {$/;"	M	function:wrapping_bounded_i128
test_wrapping_from_str_radix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^    macro_rules! test_wrapping_from_str_radix {$/;"	M	function:wrapping_from_str_radix
test_wrapping_identities	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/identities.rs	/^    macro_rules! test_wrapping_identities {$/;"	M	function:wrapping_identities
test_wrapping_traits	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/wrapping.rs	/^fn test_wrapping_traits() {$/;"	f
test_year_flags_ndays_from_year	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    fn test_year_flags_ndays_from_year() {$/;"	f	module:tests
test_year_flags_nisoweeks	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    fn test_year_flags_nisoweeks() {$/;"	f	module:tests
test_zero	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn test_zero() {$/;"	f	module:test
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/div.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/isoweek.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/fixed.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/local.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/round.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/impl_serde.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^    mod tests {$/;"	n	module:std_support
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    mod tests {$/;"	n	module:sval_support
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/mul_add.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/float.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/integer.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/normal.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/other.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/pareto.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/unit_circle.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/unit_sphere.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weibull.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/expand.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/literal/imp.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/utf8.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/Honours/Program/n_poly/src/algebras/complex.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/Honours/Program/n_poly/src/algebras/finite_field.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/Honours/Program/n_poly/src/fft-multi-base.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/Honours/Program/n_poly/src/fft.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/Honours/Program/n_poly/src/ideals/f4.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/Honours/Program/n_poly/src/ideals/groebner_basis.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/Honours/Program/n_poly/src/lib.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/Honours/Program/n_poly/src/parse.rs	/^mod tests {$/;"	n
tests	/Users/williamcashman/Honours/Program/n_poly/src/polyu.rs	/^mod tests {$/;"	n
text	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/input.rs	/^    text: &'t [u8],$/;"	m	struct:ByteInput
text	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    text: &'t [u8],$/;"	m	struct:Captures
text	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^    text: &'t [u8],$/;"	m	struct:Match
text	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_trait.rs	/^    pub fn text(&self) -> &'t R::Text {$/;"	f
text	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_trait.rs	/^    text: &'t R::Text,$/;"	m	struct:Matches
text	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    text: &'t str,$/;"	m	struct:Captures
text	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_unicode.rs	/^    text: &'t str,$/;"	m	struct:Match
thread	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/mod.rs	/^#[cfg(feature = "std")] pub(crate) mod thread;$/;"	n
thread_rng	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/thread.rs	/^pub fn thread_rng() -> ThreadRng {$/;"	f
threshold	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/reseeding.rs	/^    threshold: i64,$/;"	m	struct:ReseedingCore
time	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    pub fn time(&self) -> NaiveTime {$/;"	P	implementation:DateTime
time	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    time: Option<NaiveTime>,$/;"	m	struct:DelayedFormat
time	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    mod time;$/;"	n	module:naive
time	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    pub fn time(&self) -> NaiveTime {$/;"	P	implementation:NaiveDateTime
time	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    time: NaiveTime,$/;"	m	struct:NaiveDateTime
time	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/humantime/extern_impl.rs	/^    time: SystemTime,$/;"	m	struct:Timestamp
timed_cache	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn timed_cache() {$/;"	f	module:tests
timestamp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    pub fn timestamp(&self) -> i64 {$/;"	P	implementation:DateTime
timestamp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub timestamp: Option<i64>,$/;"	m	struct:Parsed
timestamp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    pub fn timestamp(&self) -> i64 {$/;"	P	implementation:NaiveDateTime
timestamp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^    fn timestamp(&self, secs: i64, nsecs: u32) -> DateTime<Self> {$/;"	P	interface:TimeZone
timestamp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/humantime/extern_impl.rs	/^    pub fn timestamp(&self) -> Timestamp {$/;"	P	implementation:Formatter
timestamp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    timestamp: Option<TimestampPrecision>,$/;"	m	struct:DefaultFormat
timestamp_micros	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/humantime/extern_impl.rs	/^    pub fn timestamp_micros(&self) -> Timestamp {$/;"	P	implementation:Formatter
timestamp_millis	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    pub fn timestamp_millis(&self) -> i64 {$/;"	P	implementation:DateTime
timestamp_millis	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    pub fn timestamp_millis(&self) -> i64 {$/;"	P	implementation:NaiveDateTime
timestamp_millis	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^    fn timestamp_millis(&self, millis: i64) -> DateTime<Self> {$/;"	P	interface:TimeZone
timestamp_millis	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/humantime/extern_impl.rs	/^    pub fn timestamp_millis(&self) -> Timestamp {$/;"	P	implementation:Formatter
timestamp_millis_opt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^    fn timestamp_millis_opt(&self, millis: i64) -> LocalResult<DateTime<Self>> {$/;"	P	interface:TimeZone
timestamp_nanos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    pub fn timestamp_nanos(&self) -> i64 {$/;"	P	implementation:DateTime
timestamp_nanos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    pub fn timestamp_nanos(&self) -> i64 {$/;"	P	implementation:NaiveDateTime
timestamp_nanos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^    fn timestamp_nanos(&self, nanos: i64) -> DateTime<Self> {$/;"	P	interface:TimeZone
timestamp_nanos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/humantime/extern_impl.rs	/^    pub fn timestamp_nanos(&self) -> Timestamp {$/;"	P	implementation:Formatter
timestamp_opt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^    fn timestamp_opt(&self, secs: i64, nsecs: u32) -> LocalResult<DateTime<Self>> {$/;"	P	interface:TimeZone
timestamp_seconds	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/humantime/extern_impl.rs	/^    pub fn timestamp_seconds(&self) -> Timestamp {$/;"	P	implementation:Formatter
timestamp_subsec_micros	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    pub fn timestamp_subsec_micros(&self) -> u32 {$/;"	P	implementation:DateTime
timestamp_subsec_micros	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    pub fn timestamp_subsec_micros(&self) -> u32 {$/;"	P	implementation:NaiveDateTime
timestamp_subsec_millis	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    pub fn timestamp_subsec_millis(&self) -> u32 {$/;"	P	implementation:DateTime
timestamp_subsec_millis	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    pub fn timestamp_subsec_millis(&self) -> u32 {$/;"	P	implementation:NaiveDateTime
timestamp_subsec_nanos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    pub fn timestamp_subsec_nanos(&self) -> u32 {$/;"	P	implementation:DateTime
timestamp_subsec_nanos	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    pub fn timestamp_subsec_nanos(&self) -> u32 {$/;"	P	implementation:NaiveDateTime
timezone	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    pub fn timezone(&self) -> Tz {$/;"	P	implementation:Date
timezone	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    pub fn timezone(&self) -> Tz {$/;"	P	implementation:DateTime
timezone_offset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/scan.rs	/^pub fn timezone_offset<F>(s: &str, consume_colon: F) -> ParseResult<(&str, i32)>$/;"	f
timezone_offset_2822	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/scan.rs	/^pub fn timezone_offset_2822(s: &str) -> ParseResult<(&str, Option<i32>)> {$/;"	f
timezone_offset_internal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/scan.rs	/^fn timezone_offset_internal<F>(mut s: &str, mut consume_colon: F, allow_missing_minutes: bool)$/;"	f
timezone_offset_permissive	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/scan.rs	/^pub fn timezone_offset_permissive<F>(s: &str, colon: F)$/;"	f
timezone_offset_zulu	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/scan.rs	/^pub fn timezone_offset_zulu<F>(s: &str, colon: F)$/;"	f
tm_to_datetime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/local.rs	/^fn tm_to_datetime(mut tm: oldtime::Tm) -> DateTime<Local> {$/;"	f
tm_to_naive_date	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/local.rs	/^    fn tm_to_naive_date(tm: &oldtime::Tm) -> NaiveDate {$/;"	f	function:tm_to_datetime
to_ascii_uppercase	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    fn to_ascii_uppercase(c: u8) -> u8 {$/;"	f	function:eq_ignore_ascii_case
to_be	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/int.rs	/^    fn to_be(self) -> Self;$/;"	P	interface:PrimInt
to_bool	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^    fn to_bool() -> bool {$/;"	P	implementation:B0
to_bool	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^    fn to_bool() -> bool {$/;"	P	implementation:B1
to_bool	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/marker_traits.rs	/^    fn to_bool() -> bool;$/;"	P	interface:Bit
to_builder	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn to_builder(&self) -> RecordBuilder {$/;"	P	implementation:Record
to_coeffs	/Users/williamcashman/Honours/Program/n_poly/src/fast_mult.rs	/^fn to_coeffs<P: PolyRing>(input: &Vec<Term<P>>, n: usize) -> Vec<P::Coeff> {$/;"	f
to_datetime	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub fn to_datetime(&self) -> ParseResult<DateTime<FixedOffset>> {$/;"	P	implementation:Parsed
to_datetime_with_timezone	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub fn to_datetime_with_timezone<Tz: TimeZone>(&self, tz: &Tz) -> ParseResult<DateTime<Tz>> /;"	P	implementation:Parsed
to_degrees	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn to_degrees(self) -> Self {$/;"	P	implementation:f32
to_degrees	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn to_degrees(self) -> Self {$/;"	P	implementation:f64
to_degrees	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn to_degrees(self) -> Self {$/;"	P	interface:Float
to_degrees	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn to_degrees(self) -> Self;$/;"	P	interface:FloatCore
to_degrees	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn to_degrees(self) -> Self;$/;"	P	interface:Real
to_degrees_rounding	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn to_degrees_rounding() {$/;"	f	module:tests
to_euler_angles	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn to_euler_angles(&self) -> (N, N, N)$/;"	f
to_euler_angles	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs	/^    pub fn to_euler_angles(&self) -> (N, N, N)$/;"	f
to_exp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn to_exp(self) -> (Self::RealField, Self) {$/;"	P	interface:ComplexField
to_f32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^    fn to_f32(&self) -> Option<f32> {$/;"	P	interface:ToPrimitive
to_f64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^    fn to_f64(&self) -> Option<f64> {$/;"	P	interface:ToPrimitive
to_fixed_offset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub fn to_fixed_offset(&self) -> ParseResult<FixedOffset> {$/;"	P	implementation:Parsed
to_homogeneous	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn to_homogeneous(&self) -> MatrixN<N, DimSum<D, U1>>$/;"	P	implementation:Matrix
to_homogeneous	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn to_homogeneous(&self) -> VectorN<N, DimSum<D, U1>>$/;"	P	implementation:Vector
to_homogeneous	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^    pub fn to_homogeneous(&self) -> MatrixN<N, DimNameSum<D, U1>>$/;"	f
to_homogeneous	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^    pub fn to_homogeneous(&self) -> Matrix4<N> {$/;"	P	implementation:Orthographic3
to_homogeneous	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^    pub fn to_homogeneous(&self) -> Matrix4<N> {$/;"	P	implementation:Perspective3
to_homogeneous	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^    pub fn to_homogeneous(&self) -> VectorN<N, DimNameSum<D, U1>>$/;"	f
to_homogeneous	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn to_homogeneous(&self) -> Matrix4<N> {$/;"	f
to_homogeneous	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^    pub fn to_homogeneous(&self) -> MatrixN<N, DimNameSum<D, U1>>$/;"	f
to_homogeneous	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^    pub fn to_homogeneous(&self) -> MatrixN<N, DimNameSum<D, U1>>$/;"	f
to_homogeneous	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^    pub fn to_homogeneous(&self) -> MatrixN<N, DimNameSum<D, U1>> {$/;"	f
to_homogeneous	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs	/^    pub fn to_homogeneous(&self) -> MatrixN<N, DimNameSum<D, U1>>$/;"	f
to_homogeneous	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs	/^    pub fn to_homogeneous(&self) -> Matrix3<N> {$/;"	f
to_i128	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^    fn to_i128(&self) -> Option<i128> {$/;"	P	interface:ToPrimitive
to_i128	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn to_i128() -> i128 {$/;"	P	implementation:NInt
to_i128	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn to_i128() -> i128 {$/;"	P	implementation:PInt
to_i128	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn to_i128() -> i128 {$/;"	P	implementation:Z0
to_i128	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/marker_traits.rs	/^    fn to_i128() -> i128;$/;"	P	interface:Integer
to_i128	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/marker_traits.rs	/^    fn to_i128() -> i128;$/;"	P	interface:Unsigned
to_i128	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn to_i128() -> i128 {$/;"	P	implementation:UInt
to_i128	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn to_i128() -> i128 {$/;"	P	implementation:UTerm
to_i16	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^    fn to_i16(&self) -> Option<i16> {$/;"	P	interface:ToPrimitive
to_i16	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn to_i16() -> i16 {$/;"	P	implementation:NInt
to_i16	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn to_i16() -> i16 {$/;"	P	implementation:PInt
to_i16	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn to_i16() -> i16 {$/;"	P	implementation:Z0
to_i16	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/marker_traits.rs	/^    fn to_i16() -> i16;$/;"	P	interface:Integer
to_i16	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/marker_traits.rs	/^    fn to_i16() -> i16;$/;"	P	interface:Unsigned
to_i16	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn to_i16() -> i16 {$/;"	P	implementation:UInt
to_i16	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn to_i16() -> i16 {$/;"	P	implementation:UTerm
to_i32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^    fn to_i32(&self) -> Option<i32> {$/;"	P	interface:ToPrimitive
to_i32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn to_i32() -> i32 {$/;"	P	implementation:NInt
to_i32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn to_i32() -> i32 {$/;"	P	implementation:PInt
to_i32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn to_i32() -> i32 {$/;"	P	implementation:Z0
to_i32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/marker_traits.rs	/^    fn to_i32() -> i32;$/;"	P	interface:Integer
to_i32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/marker_traits.rs	/^    fn to_i32() -> i32;$/;"	P	interface:Unsigned
to_i32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn to_i32() -> i32 {$/;"	P	implementation:UInt
to_i32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn to_i32() -> i32 {$/;"	P	implementation:UTerm
to_i64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^    fn to_i64(&self) -> Option<i64>;$/;"	P	interface:ToPrimitive
to_i64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn to_i64() -> i64 {$/;"	P	implementation:NInt
to_i64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn to_i64() -> i64 {$/;"	P	implementation:PInt
to_i64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn to_i64() -> i64 {$/;"	P	implementation:Z0
to_i64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/marker_traits.rs	/^    fn to_i64() -> i64;$/;"	P	interface:Integer
to_i64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/marker_traits.rs	/^    fn to_i64() -> i64;$/;"	P	interface:Unsigned
to_i64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn to_i64() -> i64 {$/;"	P	implementation:UInt
to_i64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn to_i64() -> i64 {$/;"	P	implementation:UTerm
to_i8	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^    fn to_i8(&self) -> Option<i8> {$/;"	P	interface:ToPrimitive
to_i8	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn to_i8() -> i8 {$/;"	P	implementation:NInt
to_i8	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn to_i8() -> i8 {$/;"	P	implementation:PInt
to_i8	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn to_i8() -> i8 {$/;"	P	implementation:Z0
to_i8	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/marker_traits.rs	/^    fn to_i8() -> i8;$/;"	P	interface:Integer
to_i8	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/marker_traits.rs	/^    fn to_i8() -> i8;$/;"	P	interface:Unsigned
to_i8	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn to_i8() -> i8 {$/;"	P	implementation:UInt
to_i8	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn to_i8() -> i8 {$/;"	P	implementation:UTerm
to_isize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^    fn to_isize(&self) -> Option<isize> {$/;"	P	interface:ToPrimitive
to_isize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn to_isize() -> isize {$/;"	P	implementation:NInt
to_isize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn to_isize() -> isize {$/;"	P	implementation:PInt
to_isize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn to_isize() -> isize {$/;"	P	implementation:Z0
to_isize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/marker_traits.rs	/^    fn to_isize() -> isize;$/;"	P	interface:Integer
to_isize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/marker_traits.rs	/^    fn to_isize() -> isize;$/;"	P	interface:Unsigned
to_isize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn to_isize() -> isize {$/;"	P	implementation:UInt
to_isize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn to_isize() -> isize {$/;"	P	implementation:UTerm
to_ix_min	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/int.rs	/^    fn to_ix_min() {$/;"	f	module:tests
to_key	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^        fn to_key(&self) -> Key {$/;"	P	implementation:std_support::Cow
to_key	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^        fn to_key(&self) -> Key {$/;"	P	implementation:std_support::String
to_key	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^    fn to_key(&self) -> Key {$/;"	P	implementation:Key
to_key	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^    fn to_key(&self) -> Key {$/;"	P	implementation:str
to_key	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^    fn to_key(&self) -> Key {$/;"	f
to_key	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/key.rs	/^    fn to_key(&self) -> Key;$/;"	P	interface:ToKey
to_le	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/int.rs	/^    fn to_le(self) -> Self;$/;"	P	interface:PrimInt
to_le	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^    fn to_le(&mut self) {}$/;"	P	implementation:u8
to_le	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^    fn to_le(&mut self);$/;"	P	interface:AsByteSliceMut
to_level	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn to_level(&self) -> Option<Level> {$/;"	P	implementation:LevelFilter
to_level_filter	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^    pub fn to_level_filter(&self) -> LevelFilter {$/;"	P	implementation:Level
to_mdf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    pub fn to_mdf(&self) -> Mdf {$/;"	P	implementation:Of
to_naive_date	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub fn to_naive_date(&self) -> ParseResult<NaiveDate> {$/;"	P	implementation:Parsed
to_naive_datetime_with_offset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub fn to_naive_datetime_with_offset(&self, offset: i32) -> ParseResult<NaiveDateTime> {$/;"	P	implementation:Parsed
to_naive_time	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub fn to_naive_time(&self) -> ParseResult<NaiveTime> {$/;"	P	implementation:Parsed
to_of	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    pub fn to_of(&self) -> Of {$/;"	P	implementation:Mdf
to_ordering	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/lib.rs	/^    fn to_ordering() -> Ordering {$/;"	P	implementation:Equal
to_ordering	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/lib.rs	/^    fn to_ordering() -> Ordering {$/;"	P	implementation:Greater
to_ordering	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/lib.rs	/^    fn to_ordering() -> Ordering {$/;"	P	implementation:Less
to_ordering	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/marker_traits.rs	/^    fn to_ordering() -> ::core::cmp::Ordering;$/;"	P	interface:Ord
to_polar	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn to_polar(self) -> (Self::RealField, Self::RealField) {$/;"	P	interface:ComplexField
to_polar	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub fn to_polar(&self) -> (T, T) {$/;"	P	implementation:Complex
to_projective	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^    pub fn to_projective(&self) -> Projective3<N> {$/;"	P	implementation:Orthographic3
to_projective	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^    pub fn to_projective(&self) -> Projective3<N> {$/;"	P	implementation:Perspective3
to_radians	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn to_radians(self) -> Self {$/;"	P	implementation:f32
to_radians	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn to_radians(self) -> Self {$/;"	P	implementation:f64
to_radians	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn to_radians(self) -> Self {$/;"	P	interface:Float
to_radians	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn to_radians(self) -> Self;$/;"	P	interface:FloatCore
to_radians	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn to_radians(self) -> Self;$/;"	P	interface:Real
to_real	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn to_real(&self) -> E::RealField {$/;"	P	interface:Scaling
to_real	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn to_real(&self) -> E::RealField {$/;"	f
to_rfc2822	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    pub fn to_rfc2822(&self) -> String {$/;"	f
to_rfc3339	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    pub fn to_rfc3339(&self) -> String {$/;"	f
to_rfc3339_opts	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    pub fn to_rfc3339_opts(&self, secform: SecondsFormat, use_z: bool) -> String {$/;"	f
to_rotation_matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn to_rotation_matrix(&self) -> Rotation<N, U3> {$/;"	f
to_rotation_matrix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs	/^    pub fn to_rotation_matrix(&self) -> Rotation2<N> {$/;"	f
to_std	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    pub fn to_std(&self) -> Result<StdDuration, OutOfRangeError> {$/;"	P	implementation:Duration
to_str	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    pub fn to_str(&self, ring: &P) -> String {$/;"	P	implementation:Term
to_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/subset.rs	/^    fn to_subset(&self) -> Option<SS> {$/;"	P	implementation:SP
to_subset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/subset.rs	/^    fn to_subset(&self) -> Option<T> {$/;"	P	interface:SupersetOf
to_subset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/subset.rs	/^    unsafe fn to_subset_unchecked(&self) -> SS {$/;"	P	implementation:SP
to_subset_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/subset.rs	/^    unsafe fn to_subset_unchecked(&self) -> T;$/;"	P	interface:SupersetOf
to_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^    fn to_superset(&self) -> T {$/;"	P	implementation:Id
to_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/subset.rs	/^    fn to_superset(&self) -> Complex<N2> {$/;"	P	implementation:Complex
to_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/subset.rs	/^    fn to_superset(&self) -> T;$/;"	P	interface:SubsetOf
to_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs	/^    fn to_superset(&self) -> MatrixMN<N2, R2, C2> {$/;"	f
to_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_conversion.rs	/^    fn to_superset(&self) -> Isometry<N2, D, R2> {$/;"	f
to_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_conversion.rs	/^    fn to_superset(&self) -> MatrixN<N2, DimNameSum<D, U1>> {$/;"	f
to_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_conversion.rs	/^    fn to_superset(&self) -> Similarity<N2, D, R2> {$/;"	f
to_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_conversion.rs	/^    fn to_superset(&self) -> Transform<N2, D, C> {$/;"	f
to_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_conversion.rs	/^    fn to_superset(&self) -> Point<N2, D> {$/;"	f
to_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_conversion.rs	/^    fn to_superset(&self) -> VectorN<N2, DimNameSum<D, U1>> {$/;"	f
to_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^    fn to_superset(&self) -> Isometry<N2, U3, R> {$/;"	f
to_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^    fn to_superset(&self) -> Matrix4<N2> {$/;"	P	implementation:UnitQuaternion
to_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^    fn to_superset(&self) -> Quaternion<N2> {$/;"	f
to_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^    fn to_superset(&self) -> Rotation3<N2> {$/;"	f
to_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^    fn to_superset(&self) -> Similarity<N2, U3, R> {$/;"	f
to_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^    fn to_superset(&self) -> Transform<N2, U3, C> {$/;"	f
to_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs	/^    fn to_superset(&self) -> UnitQuaternion<N2> {$/;"	f
to_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^    fn to_superset(&self) -> Isometry<N2, D, R> {$/;"	f
to_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^    fn to_superset(&self) -> MatrixN<N2, DimNameSum<D, U1>> {$/;"	f
to_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^    fn to_superset(&self) -> Rotation<N2, D> {$/;"	f
to_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^    fn to_superset(&self) -> Similarity<N2, D, R> {$/;"	f
to_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^    fn to_superset(&self) -> Transform<N2, D, C> {$/;"	f
to_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^    fn to_superset(&self) -> UnitComplex<N2> {$/;"	f
to_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs	/^    fn to_superset(&self) -> UnitQuaternion<N2> {$/;"	f
to_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_conversion.rs	/^    fn to_superset(&self) -> MatrixN<N2, DimNameSum<D, U1>> {$/;"	f
to_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_conversion.rs	/^    fn to_superset(&self) -> Similarity<N2, D, R2> {$/;"	f
to_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_conversion.rs	/^    fn to_superset(&self) -> Transform<N2, D, C> {$/;"	f
to_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_conversion.rs	/^    fn to_superset(&self) -> MatrixN<N2, DimNameSum<D, U1>> {$/;"	f
to_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_conversion.rs	/^    fn to_superset(&self) -> Transform<N2, D, C2> {$/;"	f
to_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs	/^    fn to_superset(&self) -> Isometry<N2, D, R> {$/;"	f
to_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs	/^    fn to_superset(&self) -> MatrixN<N2, DimNameSum<D, U1>> {$/;"	f
to_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs	/^    fn to_superset(&self) -> Similarity<N2, D, R> {$/;"	f
to_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs	/^    fn to_superset(&self) -> Transform<N2, D, C> {$/;"	f
to_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs	/^    fn to_superset(&self) -> Translation<N2, D> {$/;"	f
to_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs	/^    fn to_superset(&self) -> Isometry<N2, U2, R> {$/;"	f
to_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs	/^    fn to_superset(&self) -> Matrix3<N2> {$/;"	P	implementation:UnitComplex
to_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs	/^    fn to_superset(&self) -> Rotation2<N2> {$/;"	f
to_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs	/^    fn to_superset(&self) -> Similarity<N2, U2, R> {$/;"	f
to_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs	/^    fn to_superset(&self) -> Transform<N2, U2, C> {$/;"	f
to_superset	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs	/^    fn to_superset(&self) -> UnitComplex<N2> {$/;"	f
to_token	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/test.rs	/^    pub(in kv) fn to_token(&self) -> Token {$/;"	P	implementation:Value
to_u128	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^    fn to_u128(&self) -> Option<u128> {$/;"	P	interface:ToPrimitive
to_u128	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/marker_traits.rs	/^    fn to_u128() -> u128;$/;"	P	interface:Unsigned
to_u128	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn to_u128() -> u128 {$/;"	P	implementation:UInt
to_u128	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn to_u128() -> u128 {$/;"	P	implementation:UTerm
to_u16	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^    fn to_u16(&self) -> Option<u16> {$/;"	P	interface:ToPrimitive
to_u16	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/marker_traits.rs	/^    fn to_u16() -> u16;$/;"	P	interface:Unsigned
to_u16	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn to_u16() -> u16 {$/;"	P	implementation:UInt
to_u16	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn to_u16() -> u16 {$/;"	P	implementation:UTerm
to_u32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^    fn to_u32(&self) -> Option<u32> {$/;"	P	interface:ToPrimitive
to_u32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/marker_traits.rs	/^    fn to_u32() -> u32;$/;"	P	interface:Unsigned
to_u32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn to_u32() -> u32 {$/;"	P	implementation:UInt
to_u32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn to_u32() -> u32 {$/;"	P	implementation:UTerm
to_u64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^    fn to_u64(&self) -> Option<u64>;$/;"	P	interface:ToPrimitive
to_u64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/marker_traits.rs	/^    fn to_u64() -> u64;$/;"	P	interface:Unsigned
to_u64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn to_u64() -> u64 {$/;"	P	implementation:InvertedUInt
to_u64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn to_u64() -> u64 {$/;"	P	implementation:InvertedUTerm
to_u64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn to_u64() -> u64;$/;"	P	interface:InvertedUnsigned
to_u64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn to_u64() -> u64 {$/;"	P	implementation:UInt
to_u64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn to_u64() -> u64 {$/;"	P	implementation:UTerm
to_u8	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^    fn to_u8(&self) -> Option<u8> {$/;"	P	interface:ToPrimitive
to_u8	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^    fn to_u8() -> u8 {$/;"	P	implementation:B0
to_u8	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/bit.rs	/^    fn to_u8() -> u8 {$/;"	P	implementation:B1
to_u8	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/marker_traits.rs	/^    fn to_u8() -> u8;$/;"	P	interface:Bit
to_u8	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/marker_traits.rs	/^    fn to_u8() -> u8;$/;"	P	interface:Unsigned
to_u8	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn to_u8() -> u8 {$/;"	P	implementation:UInt
to_u8	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn to_u8() -> u8 {$/;"	P	implementation:UTerm
to_usize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/cast.rs	/^    fn to_usize(&self) -> Option<usize> {$/;"	P	interface:ToPrimitive
to_usize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/marker_traits.rs	/^    fn to_usize() -> usize;$/;"	P	interface:Unsigned
to_usize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn to_usize() -> usize {$/;"	P	implementation:UInt
to_usize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/uint.rs	/^    fn to_usize() -> usize {$/;"	P	implementation:UTerm
to_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^        fn to_value(&self) -> Value {$/;"	P	implementation:std_support::Cow
to_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^        fn to_value(&self) -> Value {$/;"	P	implementation:std_support::String
to_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^        fn to_value(&self) -> Value {$/;"	f	module:std_support
to_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn to_value(&self) -> Value {$/;"	P	implementation:Arguments
to_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn to_value(&self) -> Value {$/;"	P	implementation:ToValue
to_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn to_value(&self) -> Value {$/;"	P	implementation:bool
to_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn to_value(&self) -> Value {$/;"	P	implementation:char
to_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn to_value(&self) -> Value {$/;"	P	implementation:f32
to_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn to_value(&self) -> Value {$/;"	P	implementation:f64
to_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn to_value(&self) -> Value {$/;"	P	implementation:i16
to_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn to_value(&self) -> Value {$/;"	P	implementation:i32
to_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn to_value(&self) -> Value {$/;"	P	implementation:i64
to_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn to_value(&self) -> Value {$/;"	P	implementation:i8
to_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn to_value(&self) -> Value {$/;"	P	implementation:isize
to_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn to_value(&self) -> Value {$/;"	P	implementation:str
to_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn to_value(&self) -> Value {$/;"	P	implementation:u16
to_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn to_value(&self) -> Value {$/;"	P	implementation:u32
to_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn to_value(&self) -> Value {$/;"	P	implementation:u64
to_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn to_value(&self) -> Value {$/;"	P	implementation:u8
to_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn to_value(&self) -> Value {$/;"	P	implementation:usize
to_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^    fn to_value(&self) -> Value {$/;"	f
to_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^    fn to_value(&self) -> Value {$/;"	P	implementation:Value
to_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^    fn to_value(&self) -> Value {$/;"	f
to_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^    fn to_value(&self) -> Value;$/;"	P	interface:ToValue
to_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/id.rs	/^    fn to_vector(&self) -> E::Coordinates {$/;"	P	implementation:Id
to_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn to_vector(&self) -> E::Coordinates;$/;"	P	interface:Translation
to_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alga.rs	/^    fn to_vector(&self) -> VectorN<N, D> {$/;"	f
today	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/local.rs	/^    pub fn today() -> Date<Local> {$/;"	P	implementation:Local
today	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/utc.rs	/^    pub fn today() -> Date<Utc> { Utc::now().date() }$/;"	P	implementation:Utc
top	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    top: Option<I::Item>,$/;"	m	struct:PutBack
top	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs	/^    top: Vec<I::Item>,$/;"	m	struct:PutBackN
top	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^    pub fn top(&self) -> N {$/;"	P	implementation:Orthographic3
top_group	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs	/^    top_group: usize,$/;"	m	struct:GroupInner
tot_deg	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    fn tot_deg(&self) -> usize;$/;"	P	interface:Variate
tot_deg	/Users/williamcashman/Honours/Program/n_poly/src/polym.rs	/^    fn tot_deg(&self) -> usize {$/;"	P	implementation:MultiIndex
tot_deg	/Users/williamcashman/Honours/Program/n_poly/src/polyu.rs	/^    fn tot_deg(self: &Self) -> usize {$/;"	P	implementation:UniIndex
total	/Users/williamcashman/Honours/Program/n_poly/src/polym.rs	/^    total: usize,$/;"	m	struct:MultiIndex
total_weight	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/mod.rs	/^    total_weight: X,$/;"	m	struct:WeightedIndex
tr_copy_from	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn tr_copy_from<R2, C2, SB>(&mut self, other: &Matrix<N, R2, C2, SB>)$/;"	P	implementation:Matrix
tr_dot	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^    pub fn tr_dot<R2: Dim, C2: Dim, SB>(&self, rhs: &Matrix<N, R2, C2, SB>) -> N$/;"	f
tr_mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^    pub fn tr_mul<R2: Dim, C2: Dim, SB>(&self, rhs: &Matrix<N, R2, C2, SB>) -> MatrixMN<N, C1, C/;"	f
tr_mul_to	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^    pub fn tr_mul_to<R2: Dim, C2: Dim, SB, R3: Dim, C3: Dim, SC>($/;"	f
tr_solve_lower_triangular	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs	/^    pub fn tr_solve_lower_triangular<R2: Dim, C2: Dim, S2>($/;"	P	implementation:SquareMatrix
tr_solve_lower_triangular	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_solve.rs	/^    pub fn tr_solve_lower_triangular<R2: Dim, C2: Dim, S2>($/;"	P	implementation:CsMatrix
tr_solve_lower_triangular_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs	/^    pub fn tr_solve_lower_triangular_mut<R2: Dim, C2: Dim, S2>($/;"	P	implementation:SquareMatrix
tr_solve_lower_triangular_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_solve.rs	/^    pub fn tr_solve_lower_triangular_mut<R2: Dim, C2: Dim, S2>($/;"	P	implementation:CsMatrix
tr_solve_upper_triangular	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs	/^    pub fn tr_solve_upper_triangular<R2: Dim, C2: Dim, S2>($/;"	P	implementation:SquareMatrix
tr_solve_upper_triangular_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs	/^    pub fn tr_solve_upper_triangular_mut<R2: Dim, C2: Dim, S2>($/;"	P	implementation:SquareMatrix
trace	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/macros.rs	/^macro_rules! trace {$/;"	M
trace	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn trace(&self) -> N$/;"	P	implementation:SquareMatrix
trace	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^macro_rules! trace { ($($x:tt)*) => ($/;"	M
trailing_zeros	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/int.rs	/^    fn trailing_zeros(self) -> u32;$/;"	P	interface:PrimInt
traits	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^pub mod traits {$/;"	n
traits	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-0.2.1/src/lib.rs	/^pub mod traits {$/;"	n
trans	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    trans: Transitions,$/;"	m	struct:CacheInner
transform	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod transform;$/;"	n
transform_alga	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod transform_alga;$/;"	n
transform_alias	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod transform_alias;$/;"	n
transform_construction	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod transform_construction;$/;"	n
transform_conversion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod transform_conversion;$/;"	n
transform_ops	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod transform_ops;$/;"	n
transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/id.rs	/^    fn transform_point(&self, pt: &E) -> E {$/;"	P	implementation:Id
transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn transform_point(&self, pt: &E) -> E {$/;"	f
transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn transform_point(&self, pt: &E) -> E;$/;"	P	interface:Transformation
transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs	/^    pub fn transform_point($/;"	f
transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs	/^    fn transform_point(&self, p: &Point<N, D>) -> Point<N, D>$/;"	P	interface:AbstractRotation
transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs	/^    fn transform_point(&self, p: &Point<N, D>) -> Point<N, D>$/;"	f
transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs	/^    fn transform_point(&self, p: &Point<N, U2>) -> Point<N, U2> {$/;"	f
transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs	/^    fn transform_point(&self, p: &Point<N, U3>) -> Point<N, U3> {$/;"	f
transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^    pub fn transform_point(&self, pt: &Point<N, D>) -> Point<N, D> {$/;"	f
transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alga.rs	/^    fn transform_point(&self, pt: &Point<N, D>) -> Point<N, D> {$/;"	f
transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn transform_point(&self, pt: &Point3<N>) -> Point3<N> {$/;"	f
transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    fn transform_point(&self, pt: &Point3<N>) -> Point3<N> {$/;"	P	implementation:UnitQuaternion
transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^    pub fn transform_point(&self, pt: &Point<N, D>) -> Point<N, D> {$/;"	f
transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alga.rs	/^    fn transform_point(&self, pt: &Point<N, D>) -> Point<N, D> {$/;"	f
transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^    pub fn transform_point(&self, pt: &Point<N, D>) -> Point<N, D> {$/;"	f
transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alga.rs	/^    fn transform_point(&self, pt: &Point<N, D>) -> Point<N, D> {$/;"	f
transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^    pub fn transform_point(&self, pt: &Point<N, D>) -> Point<N, D> {$/;"	f
transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_alga.rs	/^    fn transform_point(&self, pt: &Point<N, D>) -> Point<N, D> {$/;"	f
transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs	/^    pub fn transform_point(&self, pt: &Point<N, D>) -> Point<N, D> {$/;"	f
transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alga.rs	/^    fn transform_point(&self, pt: &Point<N, D>) -> Point<N, D> {$/;"	f
transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs	/^    pub fn transform_point(&self, pt: &Point2<N>) -> Point2<N> {$/;"	f
transform_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_alga.rs	/^    fn transform_point(&self, pt: &Point2<N>) -> Point2<N> {$/;"	f
transform_simba	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod transform_simba;$/;"	n
transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/id.rs	/^    fn transform_vector(&self, v: &E::Coordinates) -> E::Coordinates {$/;"	P	implementation:Id
transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn transform_vector(&self, v: &E::Coordinates) -> E::Coordinates {$/;"	f
transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn transform_vector(&self, v: &E::Coordinates) -> E::Coordinates;$/;"	P	interface:Transformation
transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs	/^    pub fn transform_vector($/;"	f
transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs	/^    fn transform_vector(&self, v: &VectorN<N, D>) -> VectorN<N, D>$/;"	P	interface:AbstractRotation
transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs	/^    fn transform_vector(&self, v: &VectorN<N, D>) -> VectorN<N, D>$/;"	f
transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs	/^    fn transform_vector(&self, v: &VectorN<N, U2>) -> VectorN<N, U2> {$/;"	f
transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs	/^    fn transform_vector(&self, v: &VectorN<N, U3>) -> VectorN<N, U3> {$/;"	f
transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^    pub fn transform_vector(&self, v: &VectorN<N, D>) -> VectorN<N, D> {$/;"	f
transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alga.rs	/^    fn transform_vector(&self, v: &VectorN<N, D>) -> VectorN<N, D> {$/;"	f
transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn transform_vector(&self, v: &Vector3<N>) -> Vector3<N> {$/;"	f
transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    fn transform_vector(&self, v: &Vector3<N>) -> Vector3<N> {$/;"	P	implementation:UnitQuaternion
transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^    pub fn transform_vector(&self, v: &VectorN<N, D>) -> VectorN<N, D> {$/;"	f
transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alga.rs	/^    fn transform_vector(&self, v: &VectorN<N, D>) -> VectorN<N, D> {$/;"	f
transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^    pub fn transform_vector(&self, v: &VectorN<N, D>) -> VectorN<N, D> {$/;"	f
transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alga.rs	/^    fn transform_vector(&self, v: &VectorN<N, D>) -> VectorN<N, D> {$/;"	f
transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^    pub fn transform_vector(&self, v: &VectorN<N, D>) -> VectorN<N, D> {$/;"	f
transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_alga.rs	/^    fn transform_vector(&self, v: &VectorN<N, D>) -> VectorN<N, D> {$/;"	f
transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alga.rs	/^    fn transform_vector(&self, v: &VectorN<N, D>) -> VectorN<N, D> {$/;"	f
transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs	/^    pub fn transform_vector(&self, v: &Vector2<N>) -> Vector2<N> {$/;"	f
transform_vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_alga.rs	/^    fn transform_vector(&self, v: &Vector2<N>) -> Vector2<N> {$/;"	f
transformation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/mod.rs	/^mod transformation;$/;"	n
translate_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn translate_point(&self, pt: &E) -> E {$/;"	P	interface:Similarity
translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/id.rs	/^    fn translation(&self) -> Self::Translation {$/;"	P	implementation:Id
translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn translation(&self) -> Self::Translation {$/;"	f
translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn translation(&self) -> Self::Translation;$/;"	P	interface:Similarity
translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^    pub translation: Translation<N, D>,$/;"	m	struct:Isometry
translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alga.rs	/^    fn translation(&self) -> Translation<N, D> {$/;"	f
translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs	/^    pub fn translation(x: N, y: N) -> Self {$/;"	f
translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod translation;$/;"	n
translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    fn translation(&self) -> Id {$/;"	P	implementation:UnitQuaternion
translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alga.rs	/^    fn translation(&self) -> Id {$/;"	f
translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alga.rs	/^    fn translation(&self) -> Translation<N, D> {$/;"	f
translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alga.rs	/^    fn translation(&self) -> Self {$/;"	f
translation	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_alga.rs	/^    fn translation(&self) -> Id {$/;"	f
translation_alga	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod translation_alga;$/;"	n
translation_alias	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod translation_alias;$/;"	n
translation_between	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/transformation.rs	/^    fn translation_between(a: &E, b: &E) -> Option<Self> {$/;"	P	interface:Translation
translation_between	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alga.rs	/^    fn translation_between(a: &Point<N, D>, b: &Point<N, D>) -> Option<Self> {$/;"	f
translation_construction	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod translation_construction;$/;"	n
translation_conversion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod translation_conversion;$/;"	n
translation_coordinates	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod translation_coordinates;$/;"	n
translation_ops	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod translation_ops;$/;"	n
translation_simba	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod translation_simba;$/;"	n
transmute	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^pub unsafe fn transmute<A, B>(a: A) -> B {$/;"	f
transpose	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn transpose(&self) -> MatrixMN<N, C, R>$/;"	P	implementation:Matrix
transpose	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^    pub fn transpose(&self) -> Self {$/;"	f
transpose	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    pub fn transpose(&self) -> CsMatrix<N, C, R>$/;"	P	implementation:CsMatrix
transpose_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/matrix.rs	/^    fn transpose_mut(&mut self) {$/;"	P	interface:SquareMatrix
transpose_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn transpose_mut(&mut self) {$/;"	P	implementation:Matrix
transpose_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^    pub fn transpose_mut(&mut self) {$/;"	f
transpose_to	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn transpose_to<R2, C2, SB>(&self, out: &mut Matrix<N, R2, C2, SB>)$/;"	P	implementation:Matrix
tree_fold1	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn tree_fold1<F>(mut self, mut f: F) -> Option<Self::Item>$/;"	P	interface:Itertools
tri	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs	/^    tri: MatrixN<N, D>,$/;"	m	struct:SymmetricTridiagonal
triangular	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^#[cfg(feature = "std")] mod triangular;$/;"	n
trim	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn trim(self) -> Self::Output {$/;"	f
trim	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn trim(self) -> Self::Output;$/;"	P	interface:Trim
trim_trailing_zeros	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn trim_trailing_zeros(self) -> Self::Output {$/;"	P	implementation:InvertedUInt
trim_trailing_zeros	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn trim_trailing_zeros(self) -> Self::Output {$/;"	P	implementation:InvertedUTerm
trim_trailing_zeros	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn trim_trailing_zeros(self) -> Self::Output {$/;"	f
trim_trailing_zeros	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/private.rs	/^    fn trim_trailing_zeros(self) -> Self::Output;$/;"	P	interface:TrimTrailingZeros
trunc	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn trunc(self) -> Self {$/;"	P	implementation:Complex
trunc	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn trunc(self) -> Self;$/;"	P	interface:ComplexField
trunc	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn trunc(self) -> Self {$/;"	P	implementation:f32
trunc	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn trunc(self) -> Self {$/;"	P	implementation:f64
trunc	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn trunc(self) -> Self {$/;"	P	interface:FloatCore
trunc	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/float.rs	/^    fn trunc(self) -> Self;$/;"	P	interface:Float
trunc	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/real.rs	/^    fn trunc(self) -> Self;$/;"	P	interface:Real
trunc_subsecs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/round.rs	/^    fn trunc_subsecs(self, digits: u16) -> Self;$/;"	P	interface:SubsecRound
trunc_subsecs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/round.rs	/^    fn trunc_subsecs(self, digits: u16) -> T {$/;"	f
try_collect	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn try_collect<T, U, E>(self) -> Result<U, E>$/;"	P	interface:Itertools
try_consume	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parse.rs	/^    macro_rules! try_consume {$/;"	M	function:parse
try_consume	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parse.rs	/^    macro_rules! try_consume {$/;"	M	function:parse_rfc2822
try_consume	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parse.rs	/^    macro_rules! try_consume {$/;"	M	function:parse_rfc3339
try_convert	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs	/^pub fn try_convert<From: SupersetOf<To>, To>(t: From) -> Option<To> {$/;"	f
try_convert_ref	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs	/^pub fn try_convert_ref<From: SupersetOf<To>, To>(t: &From) -> Option<To> {$/;"	f
try_fill	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^    fn try_fill<T: AsByteSliceMut + ?Sized>(&mut self, dest: &mut T) -> Result<(), Error> {$/;"	P	interface:Rng
try_fill_bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/read.rs	/^    fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), Error> {$/;"	P	implementation:ReadRng
try_fill_bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/adapter/reseeding.rs	/^    fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), Error> {$/;"	f
try_fill_bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/entropy.rs	/^    fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), Error> {$/;"	P	implementation:EntropyRng
try_fill_bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/mock.rs	/^    fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), Error> {$/;"	P	implementation:StepRng
try_fill_bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/small.rs	/^    fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), Error> {$/;"	P	implementation:SmallRng
try_fill_bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/std.rs	/^    fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), Error> {$/;"	P	implementation:StdRng
try_fill_bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/thread.rs	/^    fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), Error> {$/;"	P	implementation:ThreadRng
try_from_u32_lossy	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^    fn try_from_u32_lossy(n: u32) -> Option<Self>;$/;"	P	interface:Weight
try_init	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    pub fn try_init(&mut self) -> Result<(), SetLoggerError> {$/;"	P	implementation:Builder
try_init	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^pub fn try_init() -> Result<(), SetLoggerError> {$/;"	f
try_init_from_env	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^pub fn try_init_from_env<'a, E>(env: E) -> Result<(), SetLoggerError>$/;"	f
try_inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/matrix.rs	/^    fn try_inverse(&self) -> Option<Self>;$/;"	P	interface:SquareMatrix
try_inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn try_inverse(&self) -> Option<Self>$/;"	f
try_inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^    pub fn try_inverse(self) -> Option<Transform<N, D, C>> {$/;"	f
try_inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs	/^    pub fn try_inverse(&self) -> Option<MatrixN<N, D>> {$/;"	f
try_inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/inverse.rs	/^    pub fn try_inverse(self) -> Option<MatrixN<N, D>>$/;"	P	implementation:SquareMatrix
try_inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs	/^    pub fn try_inverse(&self) -> Option<MatrixN<N, D>> {$/;"	f
try_inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs	/^    pub fn try_inverse(&self) -> Option<MatrixN<N, D>> {$/;"	f
try_inverse_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn try_inverse_mut(&mut self) -> N::SimdBool {$/;"	f
try_inverse_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^    pub fn try_inverse_mut(&mut self) -> bool {$/;"	f
try_inverse_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/inverse.rs	/^    pub fn try_inverse_mut(&mut self) -> bool$/;"	P	implementation:SquareMatrix
try_inverse_to	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs	/^    pub fn try_inverse_to<S2: StorageMut<N, D, D>>(&self, out: &mut Matrix<N, D, D, S2>) -> bool/;"	f
try_invert_to	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs	/^pub fn try_invert_to<N: ComplexField, D: Dim, S>($/;"	f
try_new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs	/^    pub fn try_new(value: T, min_norm: T::Norm) -> Option<Self>$/;"	P	implementation:Unit
try_new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs	/^    pub fn try_new(c: N, s: N, eps: N::RealField) -> Option<(Self, N)> {$/;"	P	implementation:GivensRotation
try_new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs	/^    pub fn try_new(m: MatrixN<N, D>, eps: N::RealField, max_niter: usize) -> Option<Self> {$/;"	f
try_new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs	/^    pub fn try_new($/;"	f
try_new	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs	/^    pub fn try_new(m: MatrixN<N, D>, eps: N::RealField, max_niter: usize) -> Option<Self>$/;"	f
try_new_and_get	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs	/^    pub fn try_new_and_get(mut value: T, min_norm: T::Norm) -> Option<(Self, T::Norm)>$/;"	P	implementation:Unit
try_normalize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/vector.rs	/^    fn try_normalize(&self, eps: Self::RealField) -> Option<Self>;$/;"	P	interface:NormedSpace
try_normalize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^    fn try_normalize(&self, min_norm: <N as ComplexField>::RealField) -> Option<Self> {$/;"	f
try_normalize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^    pub fn try_normalize(&self, min_norm: N::RealField) -> Option<MatrixMN<N, R, C>>$/;"	P	implementation:Matrix
try_normalize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    fn try_normalize(&self, min_norm: N) -> Option<Self> {$/;"	P	implementation:Quaternion
try_normalize_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/vector.rs	/^    fn try_normalize_mut(&mut self, eps: Self::RealField) -> Option<Self::RealField>;$/;"	P	interface:NormedSpace
try_normalize_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^    fn try_normalize_mut($/;"	f
try_normalize_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^    pub fn try_normalize_mut(&mut self, min_norm: N::RealField) -> Option<N::RealField> {$/;"	P	implementation:Matrix
try_normalize_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    fn try_normalize_mut(&mut self, min_norm: N) -> Option<N> {$/;"	P	implementation:Quaternion
try_opt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^macro_rules! try_opt {$/;"	M
try_opt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^macro_rules! try_opt {$/;"	M
try_schur	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs	/^    pub fn try_schur(self, eps: N::RealField, max_niter: usize) -> Option<Schur<N, D>> {$/;"	f
try_set_magnitude	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^    pub fn try_set_magnitude(&mut self, magnitude: N::RealField, min_magnitude: N::RealField)$/;"	P	implementation:Matrix
try_slerp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn try_slerp<S2: Storage<N, D>>($/;"	P	implementation:Unit
try_slerp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn try_slerp(&self, other: &Self, t: N, epsilon: N) -> Option<Self>$/;"	f
try_sqrt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn try_sqrt(self) -> Option<Self> {$/;"	P	implementation:Complex
try_sqrt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn try_sqrt(self) -> Option<Self>;$/;"	P	interface:ComplexField
try_svd	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs	/^    pub fn try_svd($/;"	f
try_symmetric_eigen	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs	/^    pub fn try_symmetric_eigen($/;"	f
try_to_usize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^    fn try_to_usize() -> Option<usize> {$/;"	P	implementation:Dynamic
try_to_usize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^    fn try_to_usize() -> Option<usize> {$/;"	P	implementation:U1
try_to_usize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^    fn try_to_usize() -> Option<usize> {$/;"	P	implementation:UInt
try_to_usize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^    fn try_to_usize() -> Option<usize>;$/;"	P	interface:Dim
ts_milliseconds	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    pub mod ts_milliseconds {$/;"	n	module:serde
ts_milliseconds	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    pub mod ts_milliseconds {$/;"	n	module:serde
ts_milliseconds_option	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    pub mod ts_milliseconds_option {$/;"	n	module:serde
ts_nanoseconds	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    pub mod ts_nanoseconds {$/;"	n	module:serde
ts_nanoseconds	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    pub mod ts_nanoseconds {$/;"	n	module:serde
ts_nanoseconds_option	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    pub mod ts_nanoseconds_option {$/;"	n	module:serde
ts_seconds	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    pub mod ts_seconds {$/;"	n	module:serde
ts_seconds	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    pub mod ts_seconds {$/;"	n	module:serde
ts_seconds_option	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    pub mod ts_seconds_option {$/;"	n	module:serde
tuple_combinations	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub fn tuple_combinations<T, I>(iter: I) -> TupleCombinations<I, T>$/;"	f
tuple_combinations	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn tuple_combinations<T>(self) -> TupleCombinations<Self, T>$/;"	P	interface:Itertools
tuple_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^mod tuple_impl;$/;"	n
tuple_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/other.rs	/^macro_rules! tuple_impl {$/;"	M
tuple_windows	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn tuple_windows<T>(self) -> TupleWindows<Self, T>$/;"	P	interface:Itertools
tuple_windows	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs	/^pub fn tuple_windows<I, T>(mut iter: I) -> TupleWindows<I, T>$/;"	f
tuples	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn tuples<T>(self) -> Tuples<Self, T>$/;"	P	interface:Itertools
tuples	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs	/^pub fn tuples<I, T>(iter: I) -> Tuples<I, T>$/;"	f
two_operators	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/mod.rs	/^mod two_operators;$/;"	n
two_pi	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/real.rs	/^    fn two_pi() -> Self;$/;"	P	interface:RealField
two_sided_inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^    fn two_sided_inverse(&self) -> Self {$/;"	P	implementation:Id
two_sided_inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/operator.rs	/^    fn two_sided_inverse(&self) -> Complex<N> {$/;"	P	implementation:Complex
two_sided_inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/operator.rs	/^    fn two_sided_inverse(&self) -> Self {$/;"	P	implementation:Complex
two_sided_inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/operator.rs	/^    fn two_sided_inverse(&self) -> Self;$/;"	P	interface:TwoSidedInverse
two_sided_inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/operator.rs	/^    fn two_sided_inverse(&self) -> d128 {$/;"	P	implementation:d128
two_sided_inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/operator.rs	/^    fn two_sided_inverse(&self) -> f32 {$/;"	P	implementation:f32
two_sided_inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/operator.rs	/^    fn two_sided_inverse(&self) -> f64 {$/;"	P	implementation:f64
two_sided_inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/wrapper.rs	/^    fn two_sided_inverse(&self) -> Self {$/;"	f
two_sided_inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^    fn two_sided_inverse(&self) -> Self {$/;"	f
two_sided_inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alga.rs	/^    fn two_sided_inverse(&self) -> Self {$/;"	f
two_sided_inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    fn two_sided_inverse(&self) -> Self {$/;"	P	implementation:Quaternion
two_sided_inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    fn two_sided_inverse(&self) -> Self {$/;"	P	implementation:UnitQuaternion
two_sided_inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alga.rs	/^    fn two_sided_inverse(&self) -> Self {$/;"	f
two_sided_inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alga.rs	/^    fn two_sided_inverse(&self) -> Self {$/;"	f
two_sided_inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_alga.rs	/^    fn two_sided_inverse(&self) -> Self {$/;"	f
two_sided_inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alga.rs	/^    fn two_sided_inverse(&self) -> Self {$/;"	f
two_sided_inverse	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_alga.rs	/^    fn two_sided_inverse(&self) -> Self {$/;"	P	implementation:UnitComplex
two_sided_inverse	/Users/williamcashman/Honours/Program/n_poly/src/algebras/integers.rs	/^    fn two_sided_inverse(&self) -> Self {$/;"	P	implementation:ZZ
two_sided_inverse_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^    fn two_sided_inverse_mut(&mut self) {$/;"	P	implementation:Id
two_sided_inverse_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/operator.rs	/^    fn two_sided_inverse_mut(&mut self) {$/;"	P	interface:TwoSidedInverse
two_sided_inverse_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_alga.rs	/^    fn two_sided_inverse_mut(&mut self) {$/;"	f
two_sided_inverse_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alga.rs	/^    fn two_sided_inverse_mut(&mut self) {$/;"	f
two_sided_inverse_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_alga.rs	/^    fn two_sided_inverse_mut(&mut self) {$/;"	P	implementation:UnitQuaternion
two_sided_inverse_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alga.rs	/^    fn two_sided_inverse_mut(&mut self) {$/;"	f
two_sided_inverse_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alga.rs	/^    fn two_sided_inverse_mut(&mut self) {$/;"	f
two_sided_inverse_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_alga.rs	/^    fn two_sided_inverse_mut(&mut self) {$/;"	f
two_sided_inverse_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alga.rs	/^    fn two_sided_inverse_mut(&mut self) {$/;"	f
two_sided_inverse_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_alga.rs	/^    fn two_sided_inverse_mut(&mut self) {$/;"	P	implementation:UnitComplex
two_sided_inverse_mut	/Users/williamcashman/Honours/Program/n_poly/src/algebras/integers.rs	/^    fn two_sided_inverse_mut(&mut self) {$/;"	P	implementation:ZZ
type_operators	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/lib.rs	/^pub mod type_operators;$/;"	n
u	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs	/^    pub fn u(&self) -> MatrixMN<N, R, DimMinimum<R, C>>$/;"	f
u	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs	/^    pub fn u(&self) -> MatrixMN<N, DimMinimum<R, C>, C>$/;"	f
u	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs	/^    pub fn u(&self) -> MatrixMN<N, DimMinimum<R, C>, C>$/;"	f
u	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs	/^    pub u: Option<MatrixMN<N, R, DimMinimum<R, C>>>,$/;"	m	struct:SVD
u	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_cholesky.rs	/^    u: CsMatrix<N, D, D>,$/;"	m	struct:CsCholesky
u16	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^impl ToValue for u16 {$/;"	c
u32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^impl ToValue for u32 {$/;"	c
u32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^impl UInt for u32 {$/;"	c
u32_to_usize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^fn u32_to_usize(n: u32) -> usize {$/;"	f
u64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^impl ToValue for u64 {$/;"	c
u64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        fn u64(&mut self, v: u64) -> Result<(), Error> {$/;"	P	implementation:fmt_support::FmtVisitor
u64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^        fn u64(&mut self, v: u64) -> Result<(), Error> {$/;"	P	implementation:sval_support::SvalVisitor
u64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    fn u64(&mut self, v: u64) -> Result<(), Error>;$/;"	P	interface:Visitor
u64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/test.rs	/^            fn u64(&mut self, v: u64) -> Result<(), Error> {$/;"	P	implementation:Value::to_token::TestVisitor
u8	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^impl ToValue for u8 {$/;"	c
u8	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^impl AsByteSliceMut for [u8] {$/;"	c
u8	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_bytes.rs	/^impl<'a> Replacer for &'a [u8] {$/;"	c
u8_class	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    fn u8_class(&self, b: u8) -> usize {$/;"	P	implementation:Fsm
uint	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.12.0/src/lib.rs	/^pub mod uint;$/;"	n
ulps_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^    fn ulps_eq(&self, _: &Self, _: Self::Epsilon, _: u32) -> bool {$/;"	P	implementation:Id
ulps_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/wrapper.rs	/^    fn ulps_eq(&self, other: &Self, epsilon: Self::Epsilon, max_ulps: u32) -> bool {$/;"	P	implementation:Wrapper
ulps_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    fn ulps_eq(&self, other: &Self, epsilon: Self::Epsilon, max_ulps: u32) -> bool {$/;"	f
ulps_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs	/^    fn ulps_eq(&self, other: &Self, epsilon: Self::Epsilon, max_ulps: u32) -> bool {$/;"	f
ulps_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs	/^    fn ulps_eq(&self, other: &Self, epsilon: Self::Epsilon, max_ulps: u32) -> bool {$/;"	f
ulps_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    fn ulps_eq(&self, other: &Self, epsilon: Self::Epsilon, max_ulps: u32) -> bool {$/;"	P	implementation:Quaternion
ulps_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    fn ulps_eq(&self, other: &Self, epsilon: Self::Epsilon, max_ulps: u32) -> bool {$/;"	P	implementation:UnitQuaternion
ulps_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^    fn ulps_eq(&self, other: &Self, epsilon: Self::Epsilon, max_ulps: u32) -> bool {$/;"	f
ulps_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs	/^    fn ulps_eq(&self, other: &Self, epsilon: Self::Epsilon, max_ulps: u32) -> bool {$/;"	f
ulps_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^    fn ulps_eq(&self, other: &Self, epsilon: Self::Epsilon, max_ulps: u32) -> bool {$/;"	f
ulps_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs	/^    fn ulps_eq(&self, other: &Self, epsilon: Self::Epsilon, max_ulps: u32) -> bool {$/;"	f
ulps_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs	/^    fn ulps_eq(&self, other: &Self, epsilon: Self::Epsilon, max_ulps: u32) -> bool {$/;"	P	implementation:UnitComplex
unbalance	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/balancing.rs	/^pub fn unbalance<N: RealField, D: Dim>(m: &mut MatrixN<N, D>, d: &VectorN<N, D>)$/;"	f
unfold	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs	/^pub fn unfold<A, St, F>(initial_state: St, f: F) -> Unfold<St, F>$/;"	f
unicode	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    pub fn unicode(mut self, yes: bool) -> Self {$/;"	P	implementation:ExecBuilder
unicode	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/re_builder.rs	/^    pub unicode: bool,$/;"	m	struct:RegexOptions
unicode_lit_star_backtracking_utf8bytes_default_utf8bytes_mismatch	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    fn unicode_lit_star_backtracking_utf8bytes_default_utf8bytes_mismatch() {$/;"	f	module:test
uniform	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^pub mod uniform;$/;"	n
uniform_float_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^macro_rules! uniform_float_impl {$/;"	M
uniform_index	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^    uniform_index: Uniform<u32>,$/;"	m	struct:WeightedIndex
uniform_int_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^macro_rules! uniform_int_impl {$/;"	M
uniform_simd_int_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^macro_rules! uniform_simd_int_impl {$/;"	M
uniform_within_weight_sum	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^    uniform_within_weight_sum: Uniform<W>,$/;"	m	struct:WeightedIndex
unique	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn unique(self) -> Unique<Self>$/;"	P	interface:Itertools
unique	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs	/^pub fn unique<I>(iter: I) -> Unique<I>$/;"	f
unique_by	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn unique_by<V, F>(self, f: F) -> UniqueBy<Self, V, F>$/;"	P	interface:Itertools
unique_by	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs	/^pub fn unique_by<I, V, F>(iter: I, f: F) -> UniqueBy<I, V, F>$/;"	f
unique_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^mod unique_impl;$/;"	n
unit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs	/^mod unit;$/;"	n
unit_circle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^#[cfg(feature = "std")] mod unit_circle;$/;"	n
unit_complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod unit_complex;$/;"	n
unit_complex_alga	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod unit_complex_alga;$/;"	n
unit_complex_construction	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod unit_complex_construction;$/;"	n
unit_complex_conversion	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod unit_complex_conversion;$/;"	n
unit_complex_ops	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod unit_complex_ops;$/;"	n
unit_complex_simba	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs	/^mod unit_complex_simba;$/;"	n
unit_sphere	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^#[cfg(feature = "std")] mod unit_sphere;$/;"	n
unlink	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn unlink(&mut self, index: usize) {$/;"	P	implementation:LRUList
unord_pairs_int	/Users/williamcashman/Honours/Program/n_poly/src/ideals/groebner_basis.rs	/^fn unord_pairs_int(n: usize) -> Vec<(usize, usize)> {$/;"	f
unpack	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs	/^    pub fn unpack($/;"	f
unpack	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs	/^    pub fn unpack(mut self) -> MatrixN<N, D> {$/;"	f
unpack	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs	/^    pub fn unpack($/;"	f
unpack	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs	/^    pub fn unpack(self) -> (MatrixN<N, D>, MatrixN<N, D>) {$/;"	f
unpack	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs	/^    pub fn unpack($/;"	f
unpack	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs	/^    pub fn unpack($/;"	f
unpack	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs	/^    pub fn unpack(self) -> (MatrixN<N, D>, MatrixN<N, D>) {$/;"	f
unpack	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs	/^    pub fn unpack($/;"	f
unpack_dirty	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs	/^    pub fn unpack_dirty(self) -> MatrixN<N, D> {$/;"	f
unpack_h	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs	/^    pub fn unpack_h(mut self) -> MatrixN<N, D> {$/;"	f
unpack_r	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs	/^    pub fn unpack_r(self) -> MatrixMN<N, DimMinimum<R, C>, C>$/;"	f
unpack_tridiagonal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs	/^    pub fn unpack_tridiagonal($/;"	f
unproject_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^    pub fn unproject_point(&self, p: &Point3<N>) -> Point3<N> {$/;"	P	implementation:Orthographic3
unproject_point	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^    pub fn unproject_point(&self, p: &Point3<N>) -> Point3<N> {$/;"	P	implementation:Perspective3
unscale	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn unscale(self, factor: Self::RealField) -> Self {$/;"	P	implementation:Complex
unscale	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/complex.rs	/^    fn unscale(self, factor: Self::RealField) -> Self;$/;"	P	interface:ComplexField
unscale	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn unscale(&self, real: N::SimdRealField) -> MatrixMN<N, R, C>$/;"	P	implementation:Matrix
unscale	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    pub fn unscale(&self, t: T) -> Self {$/;"	P	implementation:Complex
unscale_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn unscale_mut(&mut self, real: N::SimdRealField) {$/;"	P	implementation:Matrix
unscale_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs	/^    fn unscale_mut(&mut self, n: Self::Norm) {$/;"	f
unscale_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs	/^    fn unscale_mut(&mut self, n: Self::Norm);$/;"	P	interface:Normed
unscale_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    fn unscale_mut(&mut self, n: Self::Norm) {$/;"	P	implementation:Quaternion
unscale_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs	/^    fn unscale_mut(&mut self, n: Self::Norm) {$/;"	P	implementation:Complex
unsigned_shl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/int.rs	/^    fn unsigned_shl(self, n: u32) -> Self;$/;"	P	interface:PrimInt
unsigned_shr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/int.rs	/^    fn unsigned_shr(self, n: u32) -> Self;$/;"	P	interface:PrimInt
unsigned_wrapping_is_unsigned	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/sign.rs	/^fn unsigned_wrapping_is_unsigned() {$/;"	f
unwrap	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^    pub fn unwrap(self) -> T {$/;"	P	implementation:LocalResult
unwrap	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs	/^    pub fn unwrap(self) -> T {$/;"	P	implementation:Unit
unwrap	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/debug/random_orthogonal.rs	/^    pub fn unwrap(self) -> MatrixN<N, D> {$/;"	f
unwrap	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/debug/random_sdp.rs	/^    pub fn unwrap(self) -> MatrixN<N, D> {$/;"	f
unwrap	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^    pub fn unwrap(self) -> Matrix4<N> {$/;"	P	implementation:Orthographic3
unwrap	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^    pub fn unwrap(self) -> Matrix4<N> {$/;"	P	implementation:Perspective3
unwrap	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs	/^    pub fn unwrap(self) -> MatrixN<N, D> {$/;"	f
unwrap	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs	/^    pub fn unwrap(self) -> MatrixN<N, DimNameSum<D, U1>> {$/;"	f
unwrap	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    fn unwrap(self) -> Inst {$/;"	P	implementation:MaybeInst
unwrap_l	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_cholesky.rs	/^    pub fn unwrap_l(self) -> Option<CsMatrix<N, D, D>> {$/;"	f
unzip4	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga_derive-0.9.2/src/lib.rs	/^    fn unzip4(self) -> (Vec<A>, Vec<B>, Vec<C>, Vec<D>) {$/;"	f
unzip4	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga_derive-0.9.2/src/lib.rs	/^    fn unzip4(self) -> (Vec<A>, Vec<B>, Vec<C>, Vec<D>);$/;"	P	interface:Unzip4
update	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub fn update<I, F>(iter: I, f: F) -> Update<I, F>$/;"	f
update	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn update<F>(self, updater: F) -> Update<Self, F>$/;"	P	interface:Itertools
update_weights	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/mod.rs	/^    pub fn update_weights(&mut self, new_weights: &[(usize, &X)]) -> Result<(), WeightedError>$/;"	P	implementation:WeightedIndex
upper_diagonal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs	/^    upper_diagonal: bool,$/;"	m	struct:Bidiagonal
upper_triangle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs	/^    pub fn upper_triangle(&self) -> MatrixMN<N, R, C>$/;"	P	implementation:Matrix
uppercut_s_backtracking_bytes_default_bytes_mismatch	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/exec.rs	/^    fn uppercut_s_backtracking_bytes_default_bytes_mismatch() {$/;"	f	module:test
used	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs	/^    used: HashMap<V, ()>,$/;"	m	struct:UniqueBy
uses_bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^    pub fn uses_bytes(&self) -> bool {$/;"	P	implementation:Program
usize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/impls.rs	/^impl ToValue for usize {$/;"	c
usize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^impl<'a, N, R, C, S> MatrixIndex<'a, N, R, C, S> for (usize, usize)$/;"	c
usize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^impl<'a, N, R, C, S> MatrixIndex<'a, N, R, C, S> for usize$/;"	c
usize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^impl<'a, N, R, C, S> MatrixIndexMut<'a, N, R, C, S> for (usize, usize)$/;"	c
usize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^impl<'a, N, R, C, S> MatrixIndexMut<'a, N, R, C, S> for usize$/;"	c
usize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs	/^impl<D: Dim> DimRange<D> for usize {$/;"	c
usize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs	/^impl<D: Dim> SliceRange<D> for usize {$/;"	c
usize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^impl UInt for usize {$/;"	c
usize_to_u32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/backtrack.rs	/^fn usize_to_u32(n: usize) -> u32 {$/;"	f
usize_to_u32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^fn usize_to_u32(n: usize) -> u32 {$/;"	f
utc	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^mod utc;$/;"	n
utc_minus_local	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/fixed.rs	/^    pub fn utc_minus_local(&self) -> i32 {$/;"	P	implementation:FixedOffset
utf8	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/lib.rs	/^mod utf8;$/;"	n
utf8_seqs	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/compile.rs	/^    utf8_seqs: Option<Utf8Sequences>,$/;"	m	struct:Compiler
utils	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^mod utils;$/;"	n
uv	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs	/^    uv: MatrixMN<N, R, C>,$/;"	m	struct:Bidiagonal
uv_internal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs	/^    pub fn uv_internal(&self) -> &MatrixMN<N, R, C> {$/;"	f
v	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    v: &'a [N],$/;"	m	struct:ColumnEntries
v	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/rngs/mock.rs	/^    v: u64,$/;"	m	struct:StepRng
v_t	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs	/^    pub fn v_t(&self) -> MatrixMN<N, DimMinimum<R, C>, C>$/;"	f
v_t	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs	/^    pub v_t: Option<MatrixMN<N, DimMinimum<R, C>, C>>,$/;"	m	struct:SVD
val	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/wrapper.rs	/^    pub val: T,$/;"	m	struct:Wrapper
val	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^    val: InternalInternal,$/;"	m	struct:InternalFixed
valid	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    pub fn valid(&self) -> bool {$/;"	P	implementation:Mdf
valid	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    pub fn valid(&self) -> bool {$/;"	P	implementation:Of
vals	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs	/^    vals: LazyBuffer<I>,$/;"	m	struct:Permutations
value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    value: Option<T>,$/;"	m	struct:ListEntry
value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    pub fn value<T>(&self, value: T) -> StyledValue<T> {$/;"	P	implementation:Style
value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    value: T,$/;"	m	struct:StyledValue
value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/mod.rs	/^pub mod value;$/;"	n
value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^            value: i32,$/;"	m	struct:tests::count::OnePair
value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^    fn value(&self) -> usize {$/;"	P	implementation:Dynamic
value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^    fn value(&self) -> usize {$/;"	P	implementation:U1
value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^    fn value(&self) -> usize {$/;"	P	implementation:UInt
value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^    fn value(&self) -> usize;$/;"	P	interface:Dim
value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs	/^    value: usize,$/;"	m	struct:Dynamic
value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/cache.rs	/^        pub fn value(&self) -> &T {$/;"	P	implementation:imp::CachedGuard
value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/cache.rs	/^        value: Option<T>,$/;"	m	struct:imp::CachedGuard
value_order	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    pub fn value_order(&self) -> impl Iterator<Item = &V> {$/;"	P	implementation:SizedCache
value_stability	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/bernoulli.rs	/^    fn value_stability() {$/;"	f	module:test
value_stability	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/float.rs	/^    fn value_stability() {$/;"	f	module:tests
value_stability	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/integer.rs	/^    fn value_stability() {$/;"	f	module:tests
value_stability	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/other.rs	/^    fn value_stability() {$/;"	f	module:tests
value_stability	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^    fn value_stability() {$/;"	f	module:tests
value_stability	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/unit_circle.rs	/^    fn value_stability() {$/;"	f	module:tests
value_stability	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/unit_sphere.rs	/^    fn value_stability() {$/;"	f	module:tests
value_stability	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/alias_method.rs	/^    fn value_stability() {$/;"	f	module:test
value_stability	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/mod.rs	/^    fn value_stability() {$/;"	f	module:test
values	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    values: Vec<ListEntry<T>>,$/;"	m	struct:LRUList
values	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    pub fn values(&self) -> &[N] {$/;"	f
values_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    fn values_mut(&'a mut self) -> Self::ValuesMut {$/;"	f
values_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    fn values_mut(&'a mut self) -> Self::ValuesMut;$/;"	P	interface:CsStorageIterMut
values_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix.rs	/^    pub fn values_mut(&mut self) -> impl Iterator<Item = &mut N> {$/;"	P	implementation:CsMatrix
variance	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs	/^    pub fn variance(&self) -> N {$/;"	P	implementation:Matrix
vb	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^fn vb(b: usize) -> String {$/;"	f
vec_poly_str	/Users/williamcashman/Honours/Program/n_poly/src/ideals/f4.rs	/^fn vec_poly_str<'a, P: PolyRing>(poly: &Vec<Poly<'a, P>>) -> String {$/;"	f
vec_storage	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs	/^mod vec_storage;$/;"	n
vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/linear/mod.rs	/^mod vector;$/;"	n
vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn vector(&self) -> MatrixSlice<N, U3, U1, RStride<N, U4, U1>, CStride<N, U4, U1>> {$/;"	f
vector	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs	/^    pub vector: VectorN<N, D>,$/;"	m	struct:Translation
vector_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs	/^    pub fn vector_mut($/;"	f
vector_to_matrix_index	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn vector_to_matrix_index(&self, i: usize) -> (usize, usize) {$/;"	P	implementation:Matrix
vget_unchecked	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub unsafe fn vget_unchecked(&self, i: usize) -> &N {$/;"	P	implementation:Vector
vget_unchecked_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub unsafe fn vget_unchecked_mut(&mut self, i: usize) -> &mut N {$/;"	P	implementation:Vector
visible_byte	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^        fn visible_byte(b: u8) -> String {$/;"	f	method:Program::fmt
visit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^            fn visit<'kvs>(&'kvs self, visitor: &mut Visitor<'kvs>) -> Result<(), Error> {$/;"	P	implementation:tests::count::OnePair
visit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^        fn visit<'kvs>(&'kvs self, visitor: &mut Visitor<'kvs>) -> Result<(), Error> {$/;"	f	module:std_support
visit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^    fn visit<'kvs>(&'kvs self, visitor: &mut Visitor<'kvs>) -> Result<(), Error> {$/;"	f
visit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^    fn visit<'kvs>(&'kvs self, visitor: &mut Visitor<'kvs>) -> Result<(), Error>;$/;"	P	interface:Source
visit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/internal.rs	/^    pub(super) fn visit(&self, visitor: &mut Visitor) -> Result<(), Error> {$/;"	P	implementation:Inner
visit	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^    fn visit(&self, visitor: &mut Visitor) -> Result<(), Error> {$/;"	P	implementation:Value
visit_bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^            fn visit_bytes<E>(self, value: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:Level::deserialize::LevelIdentifier
visit_bytes	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^            fn visit_bytes<E>(self, value: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:LevelFilter::deserialize::LevelFilterIdentifier
visit_enum	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^            fn visit_enum<A>(self, value: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:Level::deserialize::LevelEnum
visit_enum	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^            fn visit_enum<A>(self, value: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:LevelFilter::deserialize::LevelFilterEnum
visit_i64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^            fn visit_i64<E>(self, value: i64) -> Result<DateTime<Utc>, E>$/;"	P	implementation:serde::ts_milliseconds::MilliSecondsTimestampVisitor
visit_i64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^            fn visit_i64<E>(self, value: i64) -> Result<DateTime<Utc>, E>$/;"	P	implementation:serde::ts_nanoseconds::NanoSecondsTimestampVisitor
visit_i64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^            fn visit_i64<E>(self, value: i64) -> Result<DateTime<Utc>, E>$/;"	P	implementation:serde::ts_seconds::SecondsTimestampVisitor
visit_i64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^            fn visit_i64<E>(self, value: i64) -> Result<NaiveDateTime, E>$/;"	P	implementation:serde::ts_milliseconds::NaiveDateTimeFromMilliSecondsVisitor
visit_i64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^            fn visit_i64<E>(self, value: i64) -> Result<NaiveDateTime, E>$/;"	P	implementation:serde::ts_nanoseconds::NaiveDateTimeFromNanoSecondsVisitor
visit_i64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^            fn visit_i64<E>(self, value: i64) -> Result<NaiveDateTime, E>$/;"	P	implementation:serde::ts_seconds::NaiveDateTimeFromSecondsVisitor
visit_none	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^            fn visit_none<E>(self) -> Result<Option<DateTime<Utc>>, E>$/;"	P	implementation:serde::ts_milliseconds_option::OptionMilliSecondsTimestampVisitor
visit_none	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^            fn visit_none<E>(self) -> Result<Option<DateTime<Utc>>, E>$/;"	P	implementation:serde::ts_nanoseconds_option::OptionNanoSecondsTimestampVisitor
visit_none	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^            fn visit_none<E>(self) -> Result<Option<DateTime<Utc>>, E>$/;"	P	implementation:serde::ts_seconds_option::OptionSecondsTimestampVisitor
visit_pair	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^            fn visit_pair(&mut self, _: Key<'kvs>, _: Value<'kvs>) -> Result<(), Error> {$/;"	P	implementation:Source::count::Count
visit_pair	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^            fn visit_pair(&mut self, key: Key<'kvs>, value: Value<'kvs>) -> Result<(), Error> {$/;"	P	implementation:Source::get::Get
visit_pair	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^        fn visit_pair(&mut self, key: Key<'kvs>, value: Value<'kvs>) -> Result<(), Error> {$/;"	f	module:std_support
visit_pair	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^    fn visit_pair(&mut self, key: Key<'kvs>, value: Value<'kvs>) -> Result<(), Error> {$/;"	P	implementation:DebugList
visit_pair	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^    fn visit_pair(&mut self, key: Key<'kvs>, value: Value<'kvs>) -> Result<(), Error> {$/;"	P	implementation:DebugMap
visit_pair	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^    fn visit_pair(&mut self, key: Key<'kvs>, value: Value<'kvs>) -> Result<(), Error> {$/;"	P	implementation:DebugSet
visit_pair	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^    fn visit_pair(&mut self, key: Key<'kvs>, value: Value<'kvs>) -> Result<(), Error> {$/;"	P	implementation:DebugTuple
visit_pair	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^    fn visit_pair(&mut self, key: Key<'kvs>, value: Value<'kvs>) -> Result<(), Error> {$/;"	f
visit_pair	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^    fn visit_pair(&mut self, key: Key<'kvs>, value: Value<'kvs>) -> Result<(), Error>;$/;"	P	interface:Visitor
visit_pair	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/lib.rs	/^            fn visit_pair($/;"	P	implementation:tests::test_record_key_values_builder::TestVisitor
visit_seq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/impl_serde.rs	/^    fn visit_seq<A>(self, mut seq: A) -> Result<GenericArray<T, N>, A::Error>$/;"	f
visit_seq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs	/^    fn visit_seq<V>(self, mut visitor: V) -> Result<ArrayStorage<N, R, C>, V::Error>$/;"	f
visit_some	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^            fn visit_some<D>(self, d: D) -> Result<Option<DateTime<Utc>>, D::Error>$/;"	P	implementation:serde::ts_milliseconds_option::OptionMilliSecondsTimestampVisitor
visit_some	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^            fn visit_some<D>(self, d: D) -> Result<Option<DateTime<Utc>>, D::Error>$/;"	P	implementation:serde::ts_nanoseconds_option::OptionNanoSecondsTimestampVisitor
visit_some	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^            fn visit_some<D>(self, d: D) -> Result<Option<DateTime<Utc>>, D::Error>$/;"	P	implementation:serde::ts_seconds_option::OptionSecondsTimestampVisitor
visit_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^        fn visit_str<E>(self, value: &str) -> Result<DateTime<FixedOffset>, E>$/;"	P	implementation:serde::DateTimeVisitor
visit_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^        fn visit_str<E>(self, value: &str) -> Result<Self::Value, E>$/;"	P	implementation:weekday_serde::WeekdayVisitor
visit_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^        fn visit_str<E>(self, value: &str) -> Result<NaiveDate, E>$/;"	P	implementation:serde::NaiveDateVisitor
visit_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^        fn visit_str<E>(self, value: &str) -> Result<NaiveDateTime, E>$/;"	P	implementation:serde::NaiveDateTimeVisitor
visit_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^        fn visit_str<E>(self, value: &str) -> Result<NaiveTime, E>$/;"	P	implementation:serde::NaiveTimeVisitor
visit_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^            fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	P	implementation:Level::deserialize::LevelIdentifier
visit_str	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/serde.rs	/^            fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	P	implementation:LevelFilter::deserialize::LevelFilterIdentifier
visit_u64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^            fn visit_u64<E>(self, value: u64) -> Result<DateTime<Utc>, E>$/;"	P	implementation:serde::ts_milliseconds::MilliSecondsTimestampVisitor
visit_u64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^            fn visit_u64<E>(self, value: u64) -> Result<DateTime<Utc>, E>$/;"	P	implementation:serde::ts_nanoseconds::NanoSecondsTimestampVisitor
visit_u64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^            fn visit_u64<E>(self, value: u64) -> Result<DateTime<Utc>, E>$/;"	P	implementation:serde::ts_seconds::SecondsTimestampVisitor
visit_u64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^            fn visit_u64<E>(self, value: u64) -> Result<NaiveDateTime, E>$/;"	P	implementation:serde::ts_milliseconds::NaiveDateTimeFromMilliSecondsVisitor
visit_u64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^            fn visit_u64<E>(self, value: u64) -> Result<NaiveDateTime, E>$/;"	P	implementation:serde::ts_nanoseconds::NaiveDateTimeFromNanoSecondsVisitor
visit_u64	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^            fn visit_u64<E>(self, value: u64) -> Result<NaiveDateTime, E>$/;"	P	implementation:serde::ts_seconds::NaiveDateTimeFromSecondsVisitor
visited	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/backtrack.rs	/^    visited: Vec<Bits>,$/;"	m	struct:Cache
visitor	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/value/mod.rs	/^    visitor: &'a mut Visitor,$/;"	m	struct:Slot
visitor_is_object_safe	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/kv/source.rs	/^    fn visitor_is_object_safe() {$/;"	f	module:tests
w	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^    pub fn w() -> Self$/;"	f
w_axis	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^    pub fn w_axis() -> Unit<Self>$/;"	f
warn	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.8/src/macros.rs	/^macro_rules! warn {$/;"	M
warn	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/lib.rs	/^macro_rules! warn { ($($x:tt)*) => ($/;"	M
week	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/isoweek.rs	/^    pub fn week(&self) -> u32 {$/;"	P	implementation:IsoWeek
week0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/isoweek.rs	/^    pub fn week0(&self) -> u32 {$/;"	P	implementation:IsoWeek
week_from_mon	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub week_from_mon: Option<u32>,$/;"	m	struct:Parsed
week_from_sun	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub week_from_sun: Option<u32>,$/;"	m	struct:Parsed
weekday	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    #[inline] fn weekday(&self) -> Weekday { self.naive_local().weekday() }$/;"	P	implementation:Date
weekday	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    #[inline] fn weekday(&self) -> Weekday { self.naive_local().weekday() }$/;"	P	implementation:DateTime
weekday	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub weekday: Option<Weekday>,$/;"	m	struct:Parsed
weekday	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    fn weekday(&self) -> Weekday;$/;"	P	interface:Datelike
weekday	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn weekday(&self) -> Weekday {$/;"	P	implementation:NaiveDate
weekday	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn weekday(&self) -> Weekday {$/;"	P	implementation:NaiveDateTime
weekday	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    pub fn weekday(&self) -> Weekday {$/;"	P	implementation:Of
weekday_serde	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^mod weekday_serde {$/;"	n
weeks	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    pub fn weeks(weeks: i64) -> Duration {$/;"	P	implementation:Duration
weibull	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^#[cfg(feature = "std")] mod weibull;$/;"	n
weight_distribution	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/weighted/mod.rs	/^    weight_distribution: X::Sampler,$/;"	m	struct:WeightedIndex
weighted	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^#[cfg(feature = "alloc")] pub mod weighted;$/;"	n
west	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/fixed.rs	/^    pub fn west(secs: i32) -> FixedOffset {$/;"	P	implementation:FixedOffset
west_opt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/fixed.rs	/^    pub fn west_opt(secs: i32) -> Option<FixedOffset> {$/;"	P	implementation:FixedOffset
while_some	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^pub fn while_some<I>(iter: I) -> WhileSome<I> {$/;"	f
while_some	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn while_some<A>(self) -> WhileSome<Self>$/;"	P	interface:Itertools
wilkinson_shift	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs	/^pub fn wilkinson_shift<N: ComplexField>(tmm: N, tnn: N, tmn: N) -> N {$/;"	f
wilkinson_shift_random	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs	/^    fn wilkinson_shift_random() {$/;"	f	module:test
wilkinson_shift_zero	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs	/^    fn wilkinson_shift_zero() {$/;"	f	module:test
wilkinson_shift_zero_det	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs	/^    fn wilkinson_shift_zero_det() {$/;"	f	module:test
wilkinson_shift_zero_diag_diff_and_zero_off_diagonal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs	/^    fn wilkinson_shift_zero_diag_diff_and_zero_off_diagonal() {$/;"	f	module:test
wilkinson_shift_zero_diagonal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs	/^    fn wilkinson_shift_zero_diagonal() {$/;"	f	module:test
wilkinson_shift_zero_off_diagonal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs	/^    fn wilkinson_shift_zero_off_diagonal() {$/;"	f	module:test
wilkinson_shift_zero_trace	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs	/^    fn wilkinson_shift_zero_trace() {$/;"	f	module:test
window_size	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/mod.rs	/^        window_size: usize,$/;"	m	struct:test::WindowHintedIterator
with_capacity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    fn with_capacity(capacity: usize) -> LRUList<T> {$/;"	P	implementation:LRUList
with_capacity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    pub fn with_capacity(size: usize) -> SizedCache<K, V> {$/;"	P	implementation:SizedCache
with_capacity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    pub fn with_capacity(size: usize) -> UnboundCache<K, V> {$/;"	P	implementation:UnboundCache
with_day	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    fn with_day(&self, day: u32) -> Option<Date<Tz>> {$/;"	P	implementation:Date
with_day	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn with_day(&self, day: u32) -> Option<DateTime<Tz>> {$/;"	P	implementation:DateTime
with_day	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    fn with_day(&self, day: u32) -> Option<Self>;$/;"	P	interface:Datelike
with_day	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn with_day(&self, day: u32) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
with_day	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn with_day(&self, day: u32) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
with_day	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    pub fn with_day(&self, day: u32) -> Mdf {$/;"	P	implementation:Mdf
with_day0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    fn with_day0(&self, day0: u32) -> Option<Date<Tz>> {$/;"	P	implementation:Date
with_day0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn with_day0(&self, day0: u32) -> Option<DateTime<Tz>> {$/;"	P	implementation:DateTime
with_day0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    fn with_day0(&self, day0: u32) -> Option<Self>;$/;"	P	interface:Datelike
with_day0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn with_day0(&self, day0: u32) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
with_day0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn with_day0(&self, day0: u32) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
with_flags	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    pub fn with_flags(&self, YearFlags(flags): YearFlags) -> Mdf {$/;"	P	implementation:Mdf
with_flags	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    pub fn with_flags(&self, YearFlags(flags): YearFlags) -> Of {$/;"	P	implementation:Of
with_goto	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/prog.rs	/^        fn with_goto(cur: usize, goto: usize, fmtd: String) -> String {$/;"	f	method:Program::fmt
with_hour	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn with_hour(&self, hour: u32) -> Option<DateTime<Tz>> {$/;"	P	implementation:DateTime
with_hour	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    fn with_hour(&self, hour: u32) -> Option<Self>;$/;"	P	interface:Timelike
with_hour	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn with_hour(&self, hour: u32) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
with_hour	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    fn with_hour(&self, hour: u32) -> Option<NaiveTime> {$/;"	P	implementation:NaiveTime
with_lifespan	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    pub fn with_lifespan(seconds: u64) -> TimedCache<K, V> {$/;"	P	implementation:TimedCache
with_lifespan_and_capacity	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    pub fn with_lifespan_and_capacity(seconds: u64, size: usize) -> TimedCache<K, V> {$/;"	P	implementation:TimedCache
with_mdf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn with_mdf(&self, mdf: Mdf) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
with_minute	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn with_minute(&self, min: u32) -> Option<DateTime<Tz>> {$/;"	P	implementation:DateTime
with_minute	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    fn with_minute(&self, min: u32) -> Option<Self>;$/;"	P	interface:Timelike
with_minute	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn with_minute(&self, min: u32) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
with_minute	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    fn with_minute(&self, min: u32) -> Option<NaiveTime> {$/;"	P	implementation:NaiveTime
with_month	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    fn with_month(&self, month: u32) -> Option<Date<Tz>> {$/;"	P	implementation:Date
with_month	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn with_month(&self, month: u32) -> Option<DateTime<Tz>> {$/;"	P	implementation:DateTime
with_month	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    fn with_month(&self, month: u32) -> Option<Self>;$/;"	P	interface:Datelike
with_month	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn with_month(&self, month: u32) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
with_month	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn with_month(&self, month: u32) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
with_month	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    pub fn with_month(&self, month: u32) -> Mdf {$/;"	P	implementation:Mdf
with_month0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    fn with_month0(&self, month0: u32) -> Option<Date<Tz>> {$/;"	P	implementation:Date
with_month0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn with_month0(&self, month0: u32) -> Option<DateTime<Tz>> {$/;"	P	implementation:DateTime
with_month0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    fn with_month0(&self, month0: u32) -> Option<Self>;$/;"	P	interface:Datelike
with_month0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn with_month0(&self, month0: u32) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
with_month0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn with_month0(&self, month0: u32) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
with_nanosecond	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn with_nanosecond(&self, nano: u32) -> Option<DateTime<Tz>> {$/;"	P	implementation:DateTime
with_nanosecond	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    fn with_nanosecond(&self, nano: u32) -> Option<Self>;$/;"	P	interface:Timelike
with_nanosecond	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn with_nanosecond(&self, nano: u32) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
with_nanosecond	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    fn with_nanosecond(&self, nano: u32) -> Option<NaiveTime> {$/;"	P	implementation:NaiveTime
with_of	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn with_of(&self, of: Of) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
with_ordinal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    fn with_ordinal(&self, ordinal: u32) -> Option<Date<Tz>> {$/;"	P	implementation:Date
with_ordinal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn with_ordinal(&self, ordinal: u32) -> Option<DateTime<Tz>> {$/;"	P	implementation:DateTime
with_ordinal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    fn with_ordinal(&self, ordinal: u32) -> Option<Self>;$/;"	P	interface:Datelike
with_ordinal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn with_ordinal(&self, ordinal: u32) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
with_ordinal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn with_ordinal(&self, ordinal: u32) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
with_ordinal	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^    pub fn with_ordinal(&self, ordinal: u32) -> Of {$/;"	P	implementation:Of
with_ordinal0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    fn with_ordinal0(&self, ordinal0: u32) -> Option<Date<Tz>> {$/;"	P	implementation:Date
with_ordinal0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn with_ordinal0(&self, ordinal0: u32) -> Option<DateTime<Tz>> {$/;"	P	implementation:DateTime
with_ordinal0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    fn with_ordinal0(&self, ordinal0: u32) -> Option<Self>;$/;"	P	interface:Datelike
with_ordinal0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn with_ordinal0(&self, ordinal0: u32) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
with_ordinal0	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn with_ordinal0(&self, ordinal0: u32) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
with_position	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn with_position(self) -> WithPosition<Self>$/;"	P	interface:Itertools
with_position	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^mod with_position;$/;"	n
with_position	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs	/^pub fn with_position<I>(iter: I) -> WithPosition<I>$/;"	f
with_second	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn with_second(&self, sec: u32) -> Option<DateTime<Tz>> {$/;"	P	implementation:DateTime
with_second	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    fn with_second(&self, sec: u32) -> Option<Self>;$/;"	P	interface:Timelike
with_second	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn with_second(&self, sec: u32) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
with_second	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/time.rs	/^    fn with_second(&self, sec: u32) -> Option<NaiveTime> {$/;"	P	implementation:NaiveTime
with_size	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.12.0/src/stores.rs	/^    pub fn with_size(size: usize) -> SizedCache<K, V> {$/;"	P	implementation:SizedCache
with_timezone	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    pub fn with_timezone<Tz2: TimeZone>(&self, tz: &Tz2) -> Date<Tz2> {$/;"	P	implementation:Date
with_timezone	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    pub fn with_timezone<Tz2: TimeZone>(&self, tz: &Tz2) -> DateTime<Tz2> {$/;"	P	implementation:DateTime
with_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs	/^    pub fn with_value(mut self, value: I::Item) -> Self {$/;"	f
with_year	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    fn with_year(&self, year: i32) -> Option<Date<Tz>> {$/;"	P	implementation:Date
with_year	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    fn with_year(&self, year: i32) -> Option<DateTime<Tz>> {$/;"	P	implementation:DateTime
with_year	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    fn with_year(&self, year: i32) -> Option<Self>;$/;"	P	interface:Datelike
with_year	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn with_year(&self, year: i32) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
with_year	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn with_year(&self, year: i32) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
wmul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/utils.rs	/^    fn wmul(self, x: RHS) -> Self::Output;$/;"	P	interface:WideningMultiply
wmul_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/utils.rs	/^macro_rules! wmul_impl {$/;"	M
wmul_impl_16	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/utils.rs	/^    macro_rules! wmul_impl_16 {$/;"	M	module:simd_wmul
wmul_impl_large	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/utils.rs	/^macro_rules! wmul_impl_large {$/;"	M
wmul_impl_usize	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/utils.rs	/^macro_rules! wmul_impl_usize {$/;"	M
word_boundary	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^    word_boundary: bool,$/;"	m	struct:EmptyFlags
work_c	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_cholesky.rs	/^    work_c: VectorN<usize, D>,$/;"	m	struct:CsCholesky
work_x	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/sparse/cs_matrix_cholesky.rs	/^    work_x: VectorN<N, D>,$/;"	m	struct:CsCholesky
wrap	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs	/^pub fn wrap<T>(mut val: T, min: T, max: T) -> T$/;"	f
wrapper	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/mod.rs	/^pub mod wrapper;$/;"	n
wrapping	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/mod.rs	/^pub mod wrapping;$/;"	n
wrapping_add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/wrapping.rs	/^    fn wrapping_add(&self, v: &Self) -> Self {$/;"	f
wrapping_add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/wrapping.rs	/^    fn wrapping_add(&self, v: &Self) -> Self;$/;"	P	interface:WrappingAdd
wrapping_add	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/wrapping.rs	/^    fn wrapping_add<T: WrappingAdd>(a: T, b: T) -> T {$/;"	f	function:test_wrapping_traits
wrapping_bounded	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/bounds.rs	/^fn wrapping_bounded() {$/;"	f
wrapping_bounded_i128	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/bounds.rs	/^fn wrapping_bounded_i128() {$/;"	f
wrapping_from_str_radix	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^fn wrapping_from_str_radix() {$/;"	f
wrapping_identities	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/identities.rs	/^fn wrapping_identities() {$/;"	f
wrapping_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/wrapping.rs	/^macro_rules! wrapping_impl {$/;"	M
wrapping_is_bounded	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/bounds.rs	/^fn wrapping_is_bounded() {$/;"	f
wrapping_is_num	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/lib.rs	/^fn wrapping_is_num() {$/;"	f
wrapping_is_one	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/identities.rs	/^fn wrapping_is_one() {$/;"	f
wrapping_is_wrappingadd	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/wrapping.rs	/^fn wrapping_is_wrappingadd() {$/;"	f
wrapping_is_wrappingmul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/wrapping.rs	/^fn wrapping_is_wrappingmul() {$/;"	f
wrapping_is_wrappingshl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/wrapping.rs	/^fn wrapping_is_wrappingshl() {$/;"	f
wrapping_is_wrappingshr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/wrapping.rs	/^fn wrapping_is_wrappingshr() {$/;"	f
wrapping_is_wrappingsub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/wrapping.rs	/^fn wrapping_is_wrappingsub() {$/;"	f
wrapping_is_zero	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/identities.rs	/^fn wrapping_is_zero() {$/;"	f
wrapping_mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/wrapping.rs	/^    fn wrapping_mul(&self, v: &Self) -> Self {$/;"	f
wrapping_mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/wrapping.rs	/^    fn wrapping_mul(&self, v: &Self) -> Self;$/;"	P	interface:WrappingMul
wrapping_mul	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/wrapping.rs	/^    fn wrapping_mul<T: WrappingMul>(a: T, b: T) -> T {$/;"	f	function:test_wrapping_traits
wrapping_shift_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/wrapping.rs	/^macro_rules! wrapping_shift_impl {$/;"	M
wrapping_shl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/wrapping.rs	/^    fn wrapping_shl(&self, rhs: u32) -> Self {$/;"	f
wrapping_shl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/wrapping.rs	/^    fn wrapping_shl(&self, rhs: u32) -> Self;$/;"	P	interface:WrappingShl
wrapping_shl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/wrapping.rs	/^    fn wrapping_shl<T: WrappingShl>(a: T, b: u32) -> T {$/;"	f	function:test_wrapping_traits
wrapping_shr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/wrapping.rs	/^    fn wrapping_shr(&self, rhs: u32) -> Self {$/;"	f
wrapping_shr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/wrapping.rs	/^    fn wrapping_shr(&self, rhs: u32) -> Self;$/;"	P	interface:WrappingShr
wrapping_shr	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/wrapping.rs	/^    fn wrapping_shr<T: WrappingShr>(a: T, b: u32) -> T {$/;"	f	function:test_wrapping_traits
wrapping_sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/wrapping.rs	/^    fn wrapping_sub(&self, v: &Self) -> Self {$/;"	f
wrapping_sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/wrapping.rs	/^    fn wrapping_sub(&self, v: &Self) -> Self;$/;"	P	interface:WrappingSub
wrapping_sub	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/ops/wrapping.rs	/^    fn wrapping_sub<T: WrappingSub>(a: T, b: T) -> T {$/;"	f	function:test_wrapping_traits
write	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^                    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:DefaultFormat::write_args::IndentWrapper
write	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:Formatter
write	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    fn write(fmt: DefaultFormat) -> String {$/;"	f	module:tests
write	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    fn write(mut self, record: &Record) -> io::Result<()> {$/;"	P	implementation:DefaultFormat
write	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    pub(in crate::fmt) fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:Buffer
write	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/shim_impl.rs	/^    pub(in crate::fmt) fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:Buffer
write_args	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    fn write_args(&mut self, record: &Record) -> io::Result<()> {$/;"	P	implementation:DefaultFormat
write_complex	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^macro_rules! write_complex {$/;"	M
write_fmt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/termcolor/extern_impl.rs	/^    fn write_fmt<F>(&self, f: F) -> fmt::Result$/;"	P	implementation:StyledValue
write_header_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    fn write_header_value<T>(&mut self, value: T) -> io::Result<()>$/;"	P	implementation:DefaultFormat
write_level	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    fn write_level(&mut self, record: &Record) -> io::Result<()> {$/;"	P	implementation:DefaultFormat
write_local_minus_utc	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/mod.rs	/^                fn write_local_minus_utc($/;"	f	function:format
write_module_path	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    fn write_module_path(&mut self, record: &Record) -> io::Result<()> {$/;"	P	implementation:DefaultFormat
write_style	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    pub(crate) fn write_style(&self) -> WriteStyle {$/;"	P	implementation:Formatter
write_style	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    write_style: WriteStyle,$/;"	m	struct:Formatter
write_style	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^    pub fn write_style(&self) -> WriteStyle {$/;"	P	implementation:Writer
write_style	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^    pub(crate) fn write_style(&mut self, write_style: WriteStyle) -> &mut Self {$/;"	P	implementation:Builder
write_style	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^    write_style: WriteStyle,$/;"	m	struct:Builder
write_style	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/writer/mod.rs	/^    write_style: WriteStyle,$/;"	m	struct:Writer
write_style	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    pub fn write_style(&mut self, write_style: fmt::WriteStyle) -> &mut Self {$/;"	P	implementation:Builder
write_style	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    pub fn write_style<E>(mut self, write_style_env: E) -> Self$/;"	P	implementation:Env
write_style	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    write_style: Var<'a>,$/;"	m	struct:Env
write_style_or	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    pub fn write_style_or<E, V>(mut self, write_style_env: E, default: V) -> Self$/;"	P	implementation:Env
write_timestamp	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    fn write_timestamp(&mut self) -> io::Result<()> {$/;"	P	implementation:DefaultFormat
write_vari32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^fn write_vari32(data: &mut Vec<u8>, n: i32) {$/;"	f
write_varu32	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.7/src/dfa.rs	/^fn write_varu32(data: &mut Vec<u8>, mut n: u32) {$/;"	f
writer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^pub(crate) mod writer;$/;"	n
writer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    writer: Writer,$/;"	m	struct:Logger
writer	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/lib.rs	/^    writer: writer::Builder,$/;"	m	struct:Builder
written_header_value	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/fmt/mod.rs	/^    written_header_value: bool,$/;"	m	struct:DefaultFormat
x	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^    pub fn x() -> Self$/;"	f
x	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^            x: f32,$/;"	m	struct:tests::test_custom_uniform::MyF32
x_axis	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^    pub fn x_axis() -> Unit<Self>$/;"	f
xx_mul_to	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs	/^    fn xx_mul_to<R2: Dim, C2: Dim, SB, R3: Dim, C3: Dim, SC>($/;"	f
xx_rank_one_update	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs	/^    fn xx_rank_one_update<Dm, Sm, Rx, Sx>($/;"	f
xx_solve_lower_triangular_vector_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs	/^    fn xx_solve_lower_triangular_vector_mut<R2: Dim, S2>($/;"	P	implementation:SquareMatrix
xx_solve_upper_triangular_vector_mut	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs	/^    fn xx_solve_upper_triangular_vector_mut<R2: Dim, S2>($/;"	P	implementation:SquareMatrix
xxgemv	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^    fn xxgemv<D2: Dim, D3: Dim, SB, SC>($/;"	f
xxgerx	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs	/^    fn xxgerx<D2: Dim, D3: Dim, SB, SC>($/;"	f
y	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^    pub fn y() -> Self$/;"	f
y_axis	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^    pub fn y_axis() -> Unit<Self>$/;"	f
year	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/date.rs	/^    #[inline] fn year(&self) -> i32 { self.naive_local().year() }$/;"	P	implementation:Date
year	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/datetime.rs	/^    #[inline] fn year(&self) -> i32 { self.naive_local().year() }$/;"	P	implementation:DateTime
year	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub year: Option<i32>,$/;"	m	struct:Parsed
year	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    fn year(&self) -> i32;$/;"	P	interface:Datelike
year	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    fn year(&self) -> i32 {$/;"	P	implementation:NaiveDate
year	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/datetime.rs	/^    fn year(&self) -> i32 {$/;"	P	implementation:NaiveDateTime
year	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/isoweek.rs	/^    pub fn year(&self) -> i32 {$/;"	P	implementation:IsoWeek
year_ce	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/lib.rs	/^    fn year_ce(&self) -> (bool, u32) {$/;"	P	interface:Datelike
year_div_100	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub year_div_100: Option<i32>,$/;"	m	struct:Parsed
year_mod_100	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/format/parsed.rs	/^    pub year_mod_100: Option<i32>,$/;"	m	struct:Parsed
ymd	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^    fn ymd(&self, year: i32, month: u32, day: u32) -> Date<Self> {$/;"	P	interface:TimeZone
ymd_opt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^    fn ymd_opt(&self, year: i32, month: u32, day: u32) -> LocalResult<Date<Self>> {$/;"	P	interface:TimeZone
ymdf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/date.rs	/^    ymdf: DateImpl, \/\/ (year << 13) | of$/;"	m	struct:NaiveDate
yo	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^    fn yo(&self, year: i32, ordinal: u32) -> Date<Self> {$/;"	P	interface:TimeZone
yo_opt	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/offset/mod.rs	/^    fn yo_opt(&self, year: i32, ordinal: u32) -> LocalResult<Date<Self>> {$/;"	P	interface:TimeZone
yo_to_cycle	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/internals.rs	/^pub fn yo_to_cycle(year_mod_400: u32, ordinal: u32) -> u32 {$/;"	f
ywf	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/naive/isoweek.rs	/^    ywf: DateImpl, \/\/ (year << 10) | (week << 4) | flag$/;"	m	struct:IsoWeek
z	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^    pub fn z() -> Self$/;"	f
z	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/uniform.rs	/^    z: X, \/\/ either ints_to_reject or zone depending on implementation$/;"	m	struct:UniformInt
z_axis	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^    pub fn z_axis() -> Unit<Self>$/;"	f
zero	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.9.3/src/general/identity.rs	/^    fn zero() -> Id<Additive> {$/;"	P	implementation:Id
zero	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.10/src/oldtime.rs	/^    pub fn zero() -> Duration {$/;"	P	implementation:Duration
zero	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^    fn zero() -> Self {$/;"	f
zero	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs	/^    fn zero() -> Self {$/;"	f
zero	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs	/^pub fn zero<T: Zero>() -> T {$/;"	f
zero	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-complex-0.2.4/src/lib.rs	/^    fn zero() -> Self {$/;"	P	implementation:Complex
zero	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/identities.rs	/^    fn zero() -> Self {$/;"	f
zero	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/identities.rs	/^    fn zero() -> Self;$/;"	P	interface:Zero
zero	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/identities.rs	/^pub fn zero<T: Zero>() -> T {$/;"	f
zero	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^    fn zero() -> Self {$/;"	P	implementation:u32
zero	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^    fn zero() -> Self {$/;"	P	implementation:usize
zero	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/seq/index.rs	/^    fn zero() -> Self;$/;"	P	interface:UInt
zero	/Users/williamcashman/Honours/Program/n_poly/src/algebras/complex.rs	/^    fn zero() -> Self {$/;"	P	implementation:CC
zero	/Users/williamcashman/Honours/Program/n_poly/src/algebras/finite_field.rs	/^    fn zero() -> Self {$/;"	P	implementation:FF
zero	/Users/williamcashman/Honours/Program/n_poly/src/algebras/integers.rs	/^    fn zero() -> Self {$/;"	P	implementation:ZZ
zero	/Users/williamcashman/Honours/Program/n_poly/src/algebras/mod.rs	/^    fn zero() -> Self;$/;"	P	interface:Zero
zero	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    fn zero() -> Self {$/;"	P	implementation:Poly
zero	/Users/williamcashman/Honours/Program/n_poly/src/algebras/polyring.rs	/^    fn zero() -> Self {$/;"	P	implementation:Term
zero	/Users/williamcashman/Honours/Program/n_poly/src/algebras/real.rs	/^    fn zero() -> Self {$/;"	P	implementation:RR
zero	/Users/williamcashman/Honours/Program/n_poly/src/polym.rs	/^    fn zero() -> Self {$/;"	P	implementation:MultiIndex
zero	/Users/williamcashman/Honours/Program/n_poly/src/polyu.rs	/^    fn zero() -> Self {$/;"	P	implementation:UniIndex
zero_case	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/exponential.rs	/^        fn zero_case<R: Rng + ?Sized>(rng: &mut R, _u: f64) -> f64 {$/;"	f	method:Exp1::sample
zero_case	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/normal.rs	/^        fn zero_case<R: Rng + ?Sized>(rng: &mut R, u: f64) -> f64 {$/;"	f	method:StandardNormal::sample
zero_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.11/src/identities.rs	/^macro_rules! zero_impl {$/;"	M
zero_level	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.7.1/src/filter/mod.rs	/^    fn zero_level() {$/;"	f	module:tests
zeros_generic	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs	/^    pub fn zeros_generic(nrows: R, ncols: C) -> Self$/;"	f
zfar	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^    pub fn zfar(&self) -> N {$/;"	P	implementation:Orthographic3
zfar	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^    pub fn zfar(&self) -> N {$/;"	P	implementation:Perspective3
ziggurat	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/utils.rs	/^pub fn ziggurat<R: Rng + ?Sized, P, Z>($/;"	f
ziggurat_tables	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.7.3/src/distributions/mod.rs	/^#[cfg(feature = "std")] mod ziggurat_tables;$/;"	n
zip	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/functional.rs	/^    fn zip<B, Rhs, U, F>(self, rhs: Rhs, f: F) -> MappedSequence<Self, T, U>$/;"	P	interface:FunctionalSequence
zip	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.1/src/lib.rs	/^    fn zip<B, Rhs, U, F>(self, rhs: Rhs, f: F) -> MappedSequence<Self, T, U>$/;"	f
zip	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs	/^pub fn zip<I, J>(i: I, j: J) -> Zip<I::IntoIter, J::IntoIter>$/;"	f
zip_apply	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn zip_apply<N2, R2, C2, S2>($/;"	P	implementation:Matrix
zip_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn zip_eq<J>(self, other: J) -> ZipEq<Self, J::IntoIter>$/;"	P	interface:Itertools
zip_eq	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_eq_impl.rs	/^pub fn zip_eq<I, J>(i: I, j: J) -> ZipEq<I::IntoIter, J::IntoIter>$/;"	f
zip_eq_impl	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^mod zip_eq_impl;$/;"	n
zip_fold	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn zip_fold<N2, R2, C2, S2, Acc>($/;"	P	implementation:Matrix
zip_longest	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^    fn zip_longest<J>(self, other: J) -> ZipLongest<Self, J::IntoIter>$/;"	P	interface:Itertools
zip_longest	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^mod zip_longest;$/;"	n
zip_longest	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_longest.rs	/^pub fn zip_longest<T, U>(a: T, b: U) -> ZipLongest<T, U> $/;"	f
zip_map	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn zip_map<N2, N3, S2, F>(&self, rhs: &Matrix<N2, R, C, S2>, mut f: F) -> MatrixMN<N3, R/;"	P	implementation:Matrix
zip_zip_apply	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn zip_zip_apply<N2, R2, C2, S2, N3, R3, C3, S3>($/;"	P	implementation:Matrix
zip_zip_map	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs	/^    pub fn zip_zip_map<N2, N3, N4, S2, S3, F>($/;"	P	implementation:Matrix
ziptuple	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs	/^mod ziptuple;$/;"	n
znear	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs	/^    pub fn znear(&self) -> N {$/;"	P	implementation:Orthographic3
znear	/Users/williamcashman/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs	/^    pub fn znear(&self) -> N {$/;"	P	implementation:Perspective3
